{\rtf1\ansi \deff0 {\fonttbl {\f0\froman Times New Roman;}
{\f1\froman Times New Roman;}{\f2\froman Times New Roman;}{\f3\froman Times New Roman;}{\f4\froman Times New Roman;}{\f5\froman Times New Roman;}
{\f6\fmodern MS LineDraw;}{\f7\fdecor Symbol;}}
{\colortbl;\red0\green0\blue0;\red0\green0\blue127;\red0\green127\blue0;\red0\green127\blue127;\red127\green0\blue0;\red127\green0\blue127;\red127\green127\blue0;\red127\green127\blue127;\red63\green63\blue63;\red0\green0\blue255;\red0\green255\blue0;\red0\green255\blue255;\red255\green0\blue0;\red255\green0\blue255;\red255\green255\blue0;\red255\green255\blue255;}\linex0 \sbknone 
\paperh12240 \paperw20160 \margl989 \margr1487 \margt265 \margb928 \plain \lang1033 \lndscpsxn {\stylesheet {\snext0 Normal;}
{\s2 \tx1175 \tqr \tx3533 \ql \li186 \ri54 \sl463 \sbasedon0 \snext2 OmniPage #1;}
{\s3 \tx50 \tqr \tx3537 \ql \sl522 \li939 \ri50 \sbasedon0 \snext3 OmniPage #2;}
{\s4 \tqr \tx3144 \ql \li939 \ri50 \sl283 \sbasedon0 \snext4 OmniPage #3;}
{\s5 \tqr \tx5314 \ql \sl283 \li939 \ri50 \sbasedon0 \snext5 OmniPage #4;}
{\s6 \tqr \tx5023 \ql \li939 \ri50 \sl265 \sbasedon0 \snext6 OmniPage #5;}
{\s7 \tqr \tx4763 \ql \sl283 \li939 \ri50 \sbasedon0 \snext7 OmniPage #6;}
{\s8 \tqr \tx5495 \ql \li939 \ri50 \sl260 \sbasedon0 \snext8 OmniPage #7;}
{\s9 \tqr \tx2691 \ql \sl283 \li939 \ri50 \sbasedon0 \snext9 OmniPage #8;}
{\s10 \tqr \tx5606 \qc \sl283 \sbasedon0 \snext10 OmniPage #9;}
{\s11 \tqr \tx5549 \ql \li939 \ri50 \sl283 \sbasedon0 \snext11 OmniPage #10;}
{\s12 \tqr \tx7293 \qj \li939 \ri50 \sl261 \sbasedon0 \snext12 OmniPage #11;}
{\s13 \tqr \tx3916 \ql \li939 \ri3976 \sl317 \sbasedon0 \snext13 OmniPage #12;}
{\s14 \tx615 \tqr \tx7842 \qj \li374 \ri50 \sl259 \sbasedon0 \snext14 OmniPage #13;}
{\s15 \tx96 \tqr \tx4674 \ql \li893 \ri2662 \sl312 \sbasedon0 \snext15 OmniPage #14;}
{\s16 \tx54 \tqr \tx7286 \qj \li935 \ri50 \sl260 \sbasedon0 \snext16 OmniPage #15;}
{\s17 \tx50 \tx487 \tqr \tx7273 \qj \li939 \fi437 \ri63 \sl260 \sbasedon0 \snext17 OmniPage #16;}
}{\pard \posx1039 \posy761 \phpg \pvpg \absh-1351 \absw3588 \dxfrtext200 \fs55 \f0 \pard \s2 \posx1039 \posy761 \phpg \pvpg \absh-1351 \absw3588 \dxfrtext200 \li186 \ri54 \sl-463 \tx1175 \tqr \tx3533 5 it:\par 
\fs10 \f0 \fs55 \f0 \pard \s3 \posx1039 \posy761 \phpg \pvpg \absh-1351 \absw3588 \dxfrtext200 \li50 \ri50 \sl-522 \tx50 \tqr \tx3537 The CP/M Mode\par 
}\linex0 \linemod0 \sbknone \lndscpsxn \pard \sl-522 \tx50 \tqr \tx3537 \fs24 \f0 {\pard \posx2078 \posy2779 \phpg \pvpg \absh-360 \absw3195 \dxfrtext200 \fs10 \f0 \fs25 \f1 \b \pard \s4 \posx2078 \posy2779 \phpg \pvpg \absh-360 \absw3195 \dxfrtext200 \li50 \ri50 \sl-283 \tx50 \tqr \tx3144 In this chapter you'll learn:\par 
}\pard \sl-283 \tx50 \tqr \tx3144 \fs24 \f0 {\pard \posx1887 \posy3311 \phpg \pvpg \absh-3230 \absw573 \dxfrtext200 \pard \posx1887 \posy3311 \phpg \pvpg \absh-3230 \absw573 \dxfrtext200 \tx50 {\pict \wmetafile8 \picw573 \pich3230 \picwGoal573 \pichGoal3230 \picscalex100 \picscaley100 010009000003dd0500000100820500000000050000000b0200000000050000000c02a8001e00040000000201010025000000f70000031000ffffff00eeeeee00dddddd00cccccc00bbbbbb00aaaaaa009999990088888800777777006666660055555500444444003333330022222200111111000000000004000000340200000300000035000400000003010800050000000102ffffff0004000000020102000400000004010d00040000000701030082050000430f2000cc000000a8001e0000000000a8001e0000000000280000001e000000a800000001000400000000000000000000000000000000001000000000000000ffffff00eeeeee00dddddd00cccccc00bbbbbb00aaaaaa00999999008888880077777700666666005555550044444400333333002222220011111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000009aaaaaaa300000000000000000000001bcccbccb400000000000000000000001bcccbccb400000000000000000000001bccccbcb400000000000000000000001bccbbbcb400000000000000000000001bccccbbb400000000000000000000001bbcbbbcb500000000000000000000001bbbcbbbbaaaaaaa400000000000000000000001bbbbbcbc500000000000000000000000acbcbbbb400000000000000000000001abccbcbc500000000000000000000001abbbbccb500000000000000000000011abbbbccc500000000000000000000000abbbbccb500000000000000000000001abbbccbbabbbbbbb500000000000000000000000abbcbcbc600000000000000000000000abbbbbbb500000000000000000000000abbccbbb500000000000000000000000acbccbbb500000000000000000000000abbbccbb5000000000000000000000009bbbbcbb5000000000000000000000009bbbbbbbbcbbbbb6000000000000000000000009cbccbcc6000000000000000000000009cbccccc7000000000000000000000009ccccbbb6000000000000000000000009ccbbbbb6000000000000000000000009bcbcccb7000000000000000000000009ccbbcbb6000000000000000000000009bbbbbbbbcbcbcb8000000000000000000000009ccccccb8000000000000000000000009ccccbcc8000000000000000000000008bbcbcbc8000000000000000000000009cbbbcbb8000000000000000000000009bbcbbbc8000000000000000000000008bccbbbbbbbbbbb7000000000000000000000008bbbbbbb8000000000000000000000008bbbbcbb7000000000000000000000008bbccccc8000000000000000000000008bbbbccb7000000000000000000000008bbbbcbb8000000000000000000000008bbbcbcb800000000000000000000000699a999960000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000030000000000}\par }\pard \tx50 {\pard \posx2516 \posy3260 \phpg \pvpg \absh-360 \absw5365 \dxfrtext200 \fs10 \f0 \fs25 \f1 \pard \s5 \posx2516 \posy3260 \phpg \pvpg \absh-360 \absw5365 \dxfrtext200 \li50 \ri50 \sl-283 \tx50 \tqr \tx5314 What CP/M is and why you might want to use it\par 
}\sect \sectd \linex0 \linemod0 \sbknone \lndscpsxn \pard \sl-283 \tx50 \tqr \tx5314 \fs24 \f0 {\pard \posx2521 \posy3746 \phpg \pvpg \absh-625 \absw5074 \dxfrtext200 \fs10 \f0 \fs25 \f1 \pard \s6 \posx2521 \posy3746 \phpg \pvpg \absh-625 \absw5074 \dxfrtext200 \li50 \ri50 \sl-265 \tx50 \tqr \tx5023 What equipment you need to run CP/M on the Commodore 128\par 
}\pard \sl-265 \tx50 \tqr \tx5023 \fs24 \f0 {\pard \posx2521 \posy4487 \phpg \pvpg \absh-360 \absw4814 \dxfrtext200 \fs10 \f0 \fs25 \f1 \pard \s7 \posx2521 \posy4487 \phpg \pvpg \absh-360 \absw4814 \dxfrtext200 \li50 \ri50 \sl-283 \tx50 \tqr \tx4763 What software exists in the CP/M universe\par 
}\pard \sl-283 \tx50 \tqr \tx4763 \fs24 \f0 {\pard \posx2526 \posy4968 \phpg \pvpg \absh-620 \absw5546 \dxfrtext200 \fs10 \f0 \fs25 \f1 \pard \s8 \posx2526 \posy4968 \phpg \pvpg \absh-620 \absw5546 \dxfrtext200 \li50 \ri50 \sl-260 \tx50 \tqr \tx5495 Where to find CP/M software for your Commodore 128\par 
}\pard \sl-260 \tx50 \tqr \tx5495 \fs24 \f0 {\pard \posx2532 \posy5714 \phpg \pvpg \absh-360 \absw2742 \dxfrtext200 \fs10 \f0 \fs25 \f1 \pard \s9 \posx2532 \posy5714 \phpg \pvpg \absh-360 \absw2742 \dxfrtext200 \li50 \ri50 \sl-283 \tx50 \tqr \tx2691 How CP/M is organized\par 
}\pard \sl-283 \tx50 \tqr \tx2691 \fs24 \f0 {\pard \posx2532 \posy6195 \phpg \pvpg \absh-360 \absw5657 \dxfrtext200 \fs10 \f0 \fs25 \f1 \pard \s10 \posx2532 \posy6195 \phpg \pvpg \absh-360 \absw5657 \dxfrtext200 \qc \sl-283 \tx50 \tqr \tx5606 What CP/M commands there are and what they do\par 
}\pard \sl-283 \tx50 \tqr \tx5606 \fs24 \f0 {\pard \posx2084 \posy6677 \phpg \pvpg \absh-360 \absw5600 \dxfrtext200 \fs10 \f0 \fs25 \f1 \pard \s11 \posx2084 \posy6677 \phpg \pvpg \absh-360 \absw5600 \dxfrtext200 \li50 \ri50 \sl-283 \tx50 \tqr \tx5549 \'b7 Where to go for more information about CP/M\par 
}\pard \sl-283 \tx50 \tqr \tx5549 \fs24 \f0 {\pard \posx1646 \posy7844 \phpg \pvpg \absh-3452 \absw7344 \dxfrtext200 \fs10 \f0 \fs24 \f2 \plain \f2 \lang1033 \pard \s12 \posx1646 \posy7844 \phpg \pvpg \absh-3452 \absw7344 \dxfrtext200 \qj \li50 \ri50 \sl-261 \tx50 \tqr \tx7293 If you have never heard or seen the word CP/M before then this chapter is for you. This chapter will also be useful if you're familiar with CP/M on another computer and want to know how Commodore's CP/M is different. CP/M stands for Control Program for Microcomputers. That doesn't tell you much but it does give a hint of what CP/M is: a way to control programs. CP/M is a special kind of \fs24 \f3 \i disk \fs24 \f2 \plain \f2 \lang1033 operating system. A disk oper\-ating system is a sort of supervisory program that is used to do chores, such as run programs, make copies of programs, erase files, measure the capacity of a disk, and so on. In this chapter we will tell you what CP/M is, its value and features, what you need to use it, what important and powerful CP/M software exists and where to find it, and finally a bit about its commands and what they do. We will also tell you where to go for more detailed information on CP/M.\par 
}\pard \sl-261 \tx50 \tqr \tx7293 \fs24 \f0 {\pard \posx10730 \posy422 \phpg \pvpg \absh-4221 \absw7893 \dxfrtext200 \fs10 \f0 \fs32 \f4 \pard \s13 \posx10730 \posy422 \phpg \pvpg \absh-4221 \absw7893 \dxfrtext200 \li50 \ri3976 \sl-317 \tx50 \tqr \tx3916 What Is CP/M and What Is the CP/M Mode?\par 
\fs10 \f0 \fs24 \f2 \pard \s14 \posx10730 \posy422 \phpg \pvpg \absh-4221 \absw7893 \dxfrtext200 \qj \li615 \ri50 \sl-259 \tx615 \tqr \tx7842 If you are familiar with the Commodore 64 and the 1541 disk drive you know that you can use commands in BASIC to access programs stored on a diskette plugged into that drive. And if you read the chapter in this book on the new C128 mode you know that Commodore has provided an even more powerful set of BASIC statements and commands for accessing the disk (borrowed from the Commodore CBM line of small business com\-puters). From within BASIC you use these commands to find out what files and programs are on the diskette in the drive, to erase programs or to duplicate them on other diskettes, and even to run programs written in languages besides BASIC. Unfortunately, these disk management features exist inside the shell of another language, and have more complex syntax then we would desire. What they do is insulate us from having complete control over files and programs on the disk.\par 
}\pard \sl-259 \tx615 \tqr \tx7842 \fs24 \f0 {\pard \posx11287 \posy4965 \phpg \pvpg \absh-6458 \absw7337 \dxfrtext200 \fs10 \f0 \fs31 \f5 \i \pard \s15 \posx11287 \posy4965 \phpg \pvpg \absh-6458 \absw7337 \dxfrtext200 \li96 \ri2662 \sl-312 \tx96 \tqr \tx4674 Whatis a Disk Operating System?\par 
\fs10 \f0 \fs24 \f2 \plain \f2 \lang1033 \pard \s16 \posx11287 \posy4965 \phpg \pvpg \absh-6458 \absw7337 \dxfrtext200 \qj \li54 \ri50 \sl-260 \tx54 \tqr \tx7286 CP/M is a full\_fledged operating system that gives complete control over the disk. One purpose of a disk operating system is to simplify the han\-dling of programs and Ales. This is done in CP/M by providing a set of commands that are easy to use and remember. Since CP/M is not inside or part of another language, such as the disk commands of Commodore 64 or BASIC 7.0, its use is more straightforward. A disk operating system like CP/M is actually a kind of "mother" or supervisor program. It is the program you use to control other programs\'97a sort of master that conducts the operations of any "application" program on the disk.\par 
\fs10 \f0 \fs24 \f2 \pard \s17 \posx11287 \posy4965 \phpg \pvpg \absh-6458 \absw7337 \dxfrtext200 \qj \li50 \fi437 \ri63 \sl-260 \tx50 \tx487 \tqr \tx7273 So why another DOS? Commodore chose CP1M not just because it offers more or better DOS commands, but because it offers a huge body of software that can now be run on the Commodore 128. CP/M has a unique position in the world of microcomputers. It was the first operating system developed for microcomputers (CP/M came out around 1975\'97 three years after the introduction of the first microcomputer: the Altair 8080). It was first developed so that many different computers could run the same program. A program that was written to run under the CP/M operating system on one computer would work on another computer if it also ran CP/M. Over the course of many years, many manufacturers pro\-duced machines that ran CP/M, a huge body of software was developed for these computers, and a new industry was born. Today there are dozens of companies that manufacture CP/M computers and a fantastic selection of software you can choose from.\par 
}\pard \sl-260 \tx50 \tx487 \tqr \tx7273 \fs24 \f0 \page \lndscpsxn {\stylesheet {\snext0 Normal;}
{\s2 \tx79 \tqr \tx5023 \ql \sl297 \li910 \ri2320 \sbasedon0 \snext2 OmniPage #257;}
{\s3 \tx50 \tqr \tx7293 \qj \li939 \ri50 \sl259 \sbasedon0 \snext3 OmniPage #258;}
{\s4 \tqr \tx4537 \qc \sl253 \sbasedon0 \snext4 OmniPage #259;}
{\s5 \tqr \tx277 \ql \sl189 \li939 \ri50 \sbasedon0 \snext5 OmniPage #260;}
{\s6 \tqr \tx7279 \qj \li939 \ri50 \sl258 \sbasedon0 \snext6 OmniPage #261;}
{\s7 \tqr \tx3242 \ql \sl297 \li939 \ri4101 \sbasedon0 \snext7 OmniPage #262;}
{\s8 \tx51 \tqr \tx7293 \qj \li938 \ri50 \sl259 \sbasedon0 \snext8 OmniPage #263;}
{\s9 \tx50 \tqr \tx5860 \ql \li939 \ri50 \sl259 \sbasedon0 \snext9 OmniPage #264;}
{\s10 \tx483 \tqr \tx7276 \qj \li939 \fi433 \ri52 \sl261 \sbasedon0 \snext10 OmniPage #265;}
{\s11 \tx52 \tx485 \tqr \tx7278 \qj \li937 \fi433 \ri50 \sl260 \sbasedon0 \snext11 OmniPage #266;}
{\s12 \tx50 \tqr \tx3546 \ql \li939 \ri50 \sl355 \sbasedon0 \snext12 OmniPage #267;}
{\s13 \tqr \tx7267 \ql \li939 \ri50 \sl260 \sbasedon0 \snext13 OmniPage #268;}
}\par {\pard \posx1700 \posy458 \phpg \pvpg \absh-2523 \absw7344 \dxfrtext200 \fs29 \f0 \i \pard \s2 \posx1700 \posy458 \phpg \pvpg \absh-2523 \absw7344 \dxfrtext200 \li79 \ri2320 \sl-297 \tx79 \tqr \tx5023 The CPIM Mode: A Third Personality\par 
\fs10 \f0 \fs24 \f1 \plain \f1 \lang1033 \pard \s3 \posx1700 \posy458 \phpg \pvpg \absh-2523 \absw7344 \dxfrtext200 \qj \li50 \ri50 \sl-259 \tx50 \tqr \tx7293 Unlike the Commodore 128 DOS, which resides in ROM and can run immediately after the computer is turned on, CP/M resides on a diskette as a program, and this program must first be loaded into the computer memory before it can do anything. Figure 5\_1 shows how this is done. This distinction is important because you must learn to "boot" CP/M before you can start using it. In addition, the Commodore 128 and Com\-modore 64 modes use the new 8502 microprocessor. CP/M, on the other hand, requires a special Z80A microprocessor to run. Commodore has\par 
}\sect \sectd \linex0 \linemod0 \sbknone \lndscpsxn \marglsxn1650 \margrsxn1454 \pard \sl-259 \tx50 \tqr \tx7293 \fs24 \f0 {\pard \posx3128 \posy3633 \phpg \pvpg \absh-315 \absw4588 \dxfrtext200 \fs10 \f0 \fs24 \f2 \b \pard \s4 \posx3128 \posy3633 \phpg \pvpg \absh-315 \absw4588 \dxfrtext200 \qc \sl-253 \tx50 \tqr \tx4537 Figure 5\_1. How the CP/M Mode Stacks Up\par 
}\pard \sl-253 \tx50 \tqr \tx4537 \fs24 \f0 {\pard \posx10578 \posy111 \phpg \pvpg \absh-275 \absw328 \dxfrtext200 \fs10 \f0 \fs19 \f3 \plain \fs19 \f3 \lang1033 \pard \s5 \posx10578 \posy111 \phpg \pvpg \absh-275 \absw328 \dxfrtext200 \li50 \ri50 \sl-189 \tx50 \tqr \tx277 r\par 
}\pard \sl-189 \tx50 \tqr \tx277 \fs24 \f0 {\pard \posx11310 \posy440 \phpg \pvpg \absh-1092 \absw7330 \dxfrtext200 \fs24 \f1 \fs24 \f1 \pard \s6 \posx11310 \posy440 \phpg \pvpg \absh-1092 \absw7330 \dxfrtext200 \qj \li50 \ri50 \sl-258 \tx50 \tqr \tx7279 built this microprocessor into the Commodore 128. \fs24 \f2 \b Thus the Z80 \fs24 \f1 \plain \f1 \lang1033 and CP/M turn the C128 into a completely different personality, which Com\-modore calls the CP/M Mode. Figure 5\_1 also shows the various chips that the CP/M mode can access.\par 
}\pard \sl-258 \tx50 \tqr \tx7279 \fs24 \f0 {\pard \posx11313 \posy1854 \phpg \pvpg \absh-4342 \absw7344 \dxfrtext200 \fs10 \f0 \fs29 \f0 \i \pard \s7 \posx11313 \posy1854 \phpg \pvpg \absh-4342 \absw7344 \dxfrtext200 \li50 \ri4101 \sl-297 \tx50 \tqr \tx3242 A Little History of CPIM\par 
\fs10 \f0 \fs24 \f1 \plain \f1 \lang1033 \pard \s8 \posx11313 \posy1854 \phpg \pvpg \absh-4342 \absw7344 \dxfrtext200 \qj \li51 \ri50 \sl-259 \tx51 \tqr \tx7293 CP/M was developed by a (now very rich) man named Gary Kildall, who was working, at the time, for Intel, a large manufacturer of microprocessor chips. Gary developed a package of compactly written subroutines for the tiny (and now ancient) four\_bit Intel 4004 microprocessor. These subpro\-grams could be used by other programs, simplifying the work for other Intel programmers. As technology advanced, more powerful chips were developed, including the Intel 8008 and 8080 microprocessors, and the 8080\_compatible Zilog Z80 microprocessor. Kildall went on to develop more routines for the 8080 and the compatible Z80. His overall goal was to create an environment that would allow storing and running programs on a disk. Because no one believed that microcomputers would ever become very popular or that they would ever use an expensive contraption like a disk drive, Intel gave Kildall the okay to market CP/M on his own. He started up a company called Digital Research, which to this day is still going strong.\par 
}\pard \sl-259 \tx51 \tqr \tx7293 \fs24 \f0 {\pard \posx12030 \posy6400 \phpg \pvpg \absh-571 \absw5911 \dxfrtext200 \fs10 \f0 \fs25 \f4 \i \pard \s9 \posx12030 \posy6400 \phpg \pvpg \absh-571 \absw5911 \dxfrtext200 \li50 \ri50 \sl-259 \tx50 \tqr \tx5860 CPIM was the first disk operating system for microcom\-puters and now has over 1.5 million users.\par 
}\pard \sl-259 \tx50 \tqr \tx5860 \fs24 \f0 {\pard \posx11303 \posy7159 \phpg \pvpg \absh-2926 \absw7329 \dxfrtext200 \fs10 \f0 \fs24 \f1 \plain \f1 \lang1033 \pard \s10 \posx11303 \posy7159 \phpg \pvpg \absh-2926 \absw7329 \dxfrtext200 \qj \li50 \fi433 \ri52 \sl-261 \tx50 \tx483 \tqr \tx7276 Keep in mind that up to this point there was no operating system for microcomputers. So CP/M was quickly seized upon by most users and manufacturers of 8080 or Z80 computers. Since there were no other con\-tenders, CP/M quickly became a standard in the industry. Since everyone's computer had an 8080 or compatible Z80 chip, CP/M made it possible for one program to run on many different computers.\par 
\fs10 \f0 \fs24 \f1 \pard \s11 \posx11303 \posy7159 \phpg \pvpg \absh-2926 \absw7329 \dxfrtext200 \qj \li52 \fi433 \ri50 \sl-260 \tx52 \tx485 \tqr \tx7278 Most CP/M\_based systems had a minimum of a keyboard and monitor or terminal, one or two disk drives, and 48K or 64K of memory. These computers were not designed to be compatible with each other: they each had differently sized screens, different disk capacities, and different key\-board layouts. But CP/M, the great equalizer, made them all act alike.\par 
}\pard \sl-260 \tx52 \tx485 \tqr \tx7278 \fs24 \f0 {\pard \posx10749 \posy10309 \phpg \pvpg \absh-433 \absw3597 \dxfrtext200 \fs10 \f0 \fs31 \f5 \b \pard \s12 \posx10749 \posy10309 \phpg \pvpg \absh-433 \absw3597 \dxfrtext200 \li50 \ri50 \sl-355 \tx50 \tqr \tx3546 What Does CP/M Offer?\par 
}\pard \sl-355 \tx50 \tqr \tx3546 \fs24 \f0 {\pard \posx11315 \posy10810 \phpg \pvpg \absh-575 \absw7318 \dxfrtext200 \fs10 \f0 \fs24 \f1 \plain \f1 \lang1033 \pard \s13 \posx11315 \posy10810 \phpg \pvpg \absh-575 \absw7318 \dxfrtext200 \li50 \ri50 \sl-260 \tx50 \tqr \tx7267 Today there are many microcomputers available that run CP/M. Most of these computers are moderately expensive (in the $l,000\_$2,000 range),\par 
}\pard \sl-260 \tx50 \tqr \tx7267 \fs24 \f0 \page \lndscpsxn {\stylesheet {\snext0 Normal;}
{\s2 \tx50 \tqr \tx7278 \qj \li939 \ri50 \sl255 \sbasedon0 \snext2 OmniPage #513;}
{\s3 \tx76 \tqr \tx3499 \ql \sl308 \li913 \ri3853 \sbasedon0 \snext3 OmniPage #514;}
{\s4 \tx62 \tqr \tx7290 \qj \li927 \ri62 \sl260 \sbasedon0 \snext4 OmniPage #515;}
{\s5 \tx50 \tx491 \tqr \tx7302 \qj \li939 \fi441 \ri50 \sl261 \sbasedon0 \snext5 OmniPage #516;}
{\s6 \tx67 \tx508 \tqr \tx7302 \qj \li922 \fi441 \ri50 \sl264 \sbasedon0 \snext6 OmniPage #517;}
{\s7 \tx50 \tqr \tx4391 \ql \li939 \ri50 \sl322 \sbasedon0 \snext7 OmniPage #518;}
{\s8 \tqr \tx7288 \ql \li939 \ri50 \sl261 \sbasedon0 \snext8 OmniPage #519;}
{\s9 \tqr \tx1670 \ql \sl304 \li939 \ri50 \sbasedon0 \snext9 OmniPage #520;}
{\s10 \tqr \tx7293 \qj \li939 \ri50 \sl258 \sbasedon0 \snext10 OmniPage #521;}
{\s11 \tqr \tx4286 \qc \sl253 \sbasedon0 \snext11 OmniPage #522;}
}\par {\pard \posx1664 \posy334 \phpg \pvpg \absh-1591 \absw7329 \dxfrtext200 \fs24 \f0 \pard \s2 \posx1664 \posy334 \phpg \pvpg \absh-1591 \absw7329 \dxfrtext200 \qj \li50 \ri50 \sl-255 \tx50 \tqr \tx7278 and generally, most have been purchased by small\_ and medium\_sized businesses. However, because CP/M microcomputers offer such great value, a large number of CP/M computers have been sold, and a huge body of software has grown up to support these machines. Until the Commodore 128 appeared, there had never been a low\_cost CP/M computer for the home.\par 
}\sect \sectd \linex0 \linemod0 \sbknone \lndscpsxn \marglsxn1032 \margrsxn1511 \pard \sl-255 \tx50 \tqr \tx7278 {\pard \posx1654 \posy2247 \phpg \pvpg \absh-6508 \absw7353 \dxfrtext200 \fs10 \f0 \fs28 \f1 \i \pard \s3 \posx1654 \posy2247 \phpg \pvpg \absh-6508 \absw7353 \dxfrtext200 \li76 \ri3853 \sl-308 \tx76 \tqr \tx3499 CPIM's Incredible Base of\par 
\pard \s3 \posx1654 \posy2247 \phpg \pvpg \absh-6508 \absw7353 \dxfrtext200 \li76 \ri3853 \sl-308 \tx76 \tqr \tx3499 Software Programs\par 
\fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s4 \posx1654 \posy2247 \phpg \pvpg \absh-6508 \absw7353 \dxfrtext200 \qj \li62 \ri62 \sl-260 \tx62 \tqr \tx7290 CP/M offers a huge world of software\'97a world where literally thousands of programs exist for your C128. Some of these programs are extremely good. Many are free if you know how to get them. To give you an idea of how much software exists, one software directory lists over 1,000 com\-mercial programs that run under CP/M, and experts estimate that some\-where around 10,000 relevant CP/M programs exist. These programs would consume over 3,000 C128 CP/M diskettes.\par 
\fs10 \f0 \fs24 \f0 \pard \s5 \posx1654 \posy2247 \phpg \pvpg \absh-6508 \absw7353 \dxfrtext200 \qj \li50 \fi441 \ri50 \sl-261 \tx50 \tx491 \tqr \tx7302 The software that exists for CP/M is oriented for professionals and businesses. You will find powerful word processing programs, spread\-sheets, financial packages, database managers, languages of all kinds, utilities, and much more. In fact, the Commodore 128 running CP/M represents a bargain for small businesses. The price of the Commodore 128 with the 1571 disk drive is competitive in performance with an IBM PC and is much less expensive. The software is time\_tested and bug\_free. So much software is available that you will easily find special interest software\'97programs that would not have mass appeal but are just what you are looking for. For example, you might find an accounting program written especially for a law practice, a database program for a stamp collector, or an engineering spreadsheet for a metallurgist.\par 
\fs10 \f0 \fs24 \f0 \pard \s6 \posx1654 \posy2247 \phpg \pvpg \absh-6508 \absw7353 \dxfrtext200 \qj \li67 \fi441 \ri50 \sl-264 \tx67 \tx508 \tqr \tx7302 There is also a huge amount of what is called free "public domain software" available for CP/M. We will detail both commercial and public domain software after we tell you what equipment you need to run CP/M.\par 
}\pard \sl-264 \tx67 \tx508 \tqr \tx7302 {\pard \posx1082 \posy9020 \phpg \pvpg \absh-742 \absw4442 \dxfrtext200 \fs10 \f0 \fs32 \f2 \pard \s7 \posx1082 \posy9020 \phpg \pvpg \absh-742 \absw4442 \dxfrtext200 \li50 \ri50 \sl-322 \tx50 \tqr \tx4391 What Equipment Do You Need to Run CP/M?\par 
}\pard \sl-322 \tx50 \tqr \tx4391 \fs24 \f0 {\pard \posx1684 \posy9806 \phpg \pvpg \absh-1360 \absw7339 \dxfrtext200 \fs10 \f0 \fs24 \f0 \pard \s8 \posx1684 \posy9806 \phpg \pvpg \absh-1360 \absw7339 \dxfrtext200 \li50 \ri50 \sl-261 \tx50 \tqr \tx7288 In order to use CP/M on the Commodore 128, you will need either a 1571 single disk drive or a 1572 dual disk drive, a 40\_ or 80\_column monitor, and, of course, a set of CP/M "system" diskettes. You may also want to purchase an MPS\_802 or DPS\_1101 printer and a 1660 or 1670 modem. See Figure 5\_2.\par 
}\pard \sl-261 \tx50 \tqr \tx7288 {\pard \posx11262 \posy355 \phpg \pvpg \absh-354 \absw1721 \dxfrtext200 \fs10 \f0 \fs28 \f1 \i \pard \s9 \posx11262 \posy355 \phpg \pvpg \absh-354 \absw1721 \dxfrtext200 \li50 \ri50 \sl-304 \tx50 \tqr \tx1670 Disk Drives\par 
}\pard \sl-304 \tx50 \tqr \tx1670 \fs24 \f0 {\pard \posx11256 \posy758 \phpg \pvpg \absh-3673 \absw7344 \dxfrtext200 \fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s10 \posx11256 \posy758 \phpg \pvpg \absh-3673 \absw7344 \dxfrtext200 \qj \li50 \ri50 \sl-258 \tx50 \tqr \tx7293 The Commodore 64 uses the Commodore 1541 disk drives. These drives were slow because they used a serial method to transfer data from the disk to the computer, and because of certain design elements in the way the disk drive communicated with the computer. The new 1571 and 1572 drives are much faster then the 1541 drive. The old drives transfer data at 320 characters per second. The new drives in the CP/M mode can transfer at a rate of 3500 characters per second, which is more than ten times faster. These new drives contain an intelligent microprocessor, which gives the Commodore 128 an advantage over all other CP/M computers. In the early days of CP/M, all software was distributed on 8\_inch diskettes and only one storage format was used. When 51/. inch disk drives became popular, manufacturers used different format techniques. Dozens of stor\-age formats now abound, making compatibility a problem. It's not that a program cannot run under another machine's version of CP/M; rather, the\par 
}\pard \sl-258 \tx50 \tqr \tx7293 {\pard \posx12804 \posy4946 \phpg \pvpg \absh-315 \absw4337 \dxfrtext200 \fs10 \f0 \fs24 \f3 \b \pard \s11 \posx12804 \posy4946 \phpg \pvpg \absh-315 \absw4337 \dxfrtext200 \qc \sl-253 \tx50 \tqr \tx4286 Figure 5\_2. Recommended CP/M System\par 
}\pard \qc \sl-253 \tx50 \tqr \tx4286 \fs24 \f0 \page \lndscpsxn {\stylesheet {\snext0 Normal;}
{\s2 \tx52 \tqr \tx7284 \qj \li937 \ri50 \sl254 \sbasedon0 \snext2 OmniPage #769;}
{\s3 \tx50 \tx485 \tqr \tx7279 \qj \li939 \fi435 \ri55 \sl261 \sbasedon0 \snext3 OmniPage #770;}
{\s4 \tx84 \tqr \tx1252 \ql \sl304 \li905 \ri6115 \sbasedon0 \snext4 OmniPage #771;}
{\s5 \tx60 \tqr \tx7317 \qj \li929 \ri50 \sl261 \sbasedon0 \snext5 OmniPage #772;}
{\s6 \tx70 \tx514 \tqr \tx7314 \qj \li919 \fi444 \ri53 \sl260 \sbasedon0 \snext6 OmniPage #773;}
{\s7 \tx66 \tx510 \tqr \tx7309 \qj \li923 \fi444 \ri58 \sl261 \sbasedon0 \snext7 OmniPage #774;}
{\s8 \tx50 \tx494 \tqr \tx7302 \qj \li939 \fi444 \ri65 \sl260 \sbasedon0 \snext8 OmniPage #775;}
{\s9 \tx50 \tqr \tx7266 \qj \li939 \ri50 \sl258 \sbasedon0 \snext9 OmniPage #776;}
{\s10 \tqr \tx7066 \ql \sl52 \li939 \ri50 \sbasedon0 \snext10 OmniPage #777;}
{\s11 \tqr \tx7266 \qj \li939 \ri50 \sl257 \sbasedon0 \snext11 OmniPage #778;}
{\s12 \tqr \tx2137 \ql \sl304 \li939 \ri50 \sbasedon0 \snext12 OmniPage #779;}
{\s13 \tqr \tx7259 \qj \li939 \ri50 \sl258 \sbasedon0 \snext13 OmniPage #780;}
{\s14 \tqr \tx3684 \ql \li939 \ri50 \sl318 \sbasedon0 \snext14 OmniPage #781;}
{\s15 \tqr \tx7269 \qj \li939 \ri81 \sl260 \sbasedon0 \snext15 OmniPage #782;}
{\s16 \tx63 \tx497 \tqr \tx7300 \qj \li926 \fi434 \ri50 \sl260 \sbasedon0 \snext16 OmniPage #783;}
{\s17 \tx88 \tx522 \tqr \tx7287 \qj \li901 \fi434 \ri63 \sl258 \sbasedon0 \snext17 OmniPage #784;}
}\par {\pard \posx1577 \posy371 \phpg \pvpg \absh-2637 \absw7335 \dxfrtext200 \fs24 \f0 \plain \lang1033 \pard \s2 \posx1577 \posy371 \phpg \pvpg \absh-2637 \absw7335 \dxfrtext200 \qj \li52 \ri50 \sl-254 \tx52 \tqr \tx7284 program simply cannot be entered into the computer because the disk drive doesn't understand the way it is stored. The Commodore 1571 disk drive is smart enough to automatically adjust to the numerous storage formats found in the CP/M world. This means that, regardless of what computer your CP/M program runs on, the 1571 will be able to read it.\par 
\fs10 \f0 \fs24 \f0 \pard \s3 \posx1577 \posy371 \phpg \pvpg \absh-2637 \absw7335 \dxfrtext200 \qj \li50 \fi435 \ri55 \sl-261 \tx50 \tx485 \tqr \tx7279 The choice of single versus dual disk drive is strictly one of conven\-ience and cost. A single drive will allow you to run CP/M programs right away. However, making backup copies of programs and files with a single drive is tedious if it must be done often. The dual drive 1572 allows you to easily copy files from one diskette to another.\par 
}\sect \sectd \linex0 \linemod0 \sbknone \lndscpsxn \marglsxn1497 \margrsxn1613 \pard \sl-261 \tx50 \tx485 \tqr \tx7279 {\pard \posx1547 \posy3325 \phpg \pvpg \absh-8029 \absw7368 \dxfrtext200 \fs10 \f0 \fs28 \f1 \i \pard \s4 \posx1547 \posy3325 \phpg \pvpg \absh-8029 \absw7368 \dxfrtext200 \li84 \ri6115 \sl-304 \tx84 \tqr \tx1252 Display\par 
\fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s5 \posx1547 \posy3325 \phpg \pvpg \absh-8029 \absw7368 \dxfrtext200 \qj \li60 \ri50 \sl-261 \tx60 \tqr \tx7317 There are two ways to display text for CP/M. The best and most expensive way is to purchase a new Commodore 1902 80\_column color monitor. This new monitor produces beautiful color and will work with the Com\-modore 64, Commodore 16, Plus/4, and Commodore 128. The display has a resolution of 640 by 200 pixels and can display an array of 16 colors. A new video chip in the Commodore 128, which is much like the one used in the IBM PC, drives this display in the 80\_column mode. It is apparent that Commodore expects that programs now running on the IBM PC in the color mode will easily be reverse engineered to work in the Commodore 128 CP/M mode.\par 
\fs10 \f0 \fs24 \f0 \pard \s6 \posx1547 \posy3325 \phpg \pvpg \absh-8029 \absw7368 \dxfrtext200 \qj \li70 \fi444 \ri53 \sl-260 \tx70 \tx514 \tqr \tx7314 A neat feature of the Commodore 128 80\_column mode is that the characters that are displayed are stored in RAM and are "bit\_mapped". When the computer is first turned on, a set of character fonts stored in the ROM is moved into RAM. When CP/M wants to display a character, it gets it from this memory area. Since the characters are stored in RAM, it is possible to modify them and to create custom characters for your programs. It also means you can mix graphics and text on the same screen with CP/M.\par 
\fs10 \f0 \fs24 \f0 \pard \s7 \posx1547 \posy3325 \phpg \pvpg \absh-8029 \absw7368 \dxfrtext200 \qj \li66 \fi444 \ri58 \sl-261 \tx66 \tx510 \tqr \tx7309 You can also use a high\_resolution 80\_column monochrome monitor. A monochrome monitor is one that displays in only one color. On the color monitor the text characters are stretched a bit too much in the vertical direction, but are still quite readable. The Commodore color monitor includes built\_in speaker, volume, color, tint, brightness, and contrast controls.\par 
\fs10 \f0 \fs24 \f0 \pard \s8 \posx1547 \posy3325 \phpg \pvpg \absh-8029 \absw7368 \dxfrtext200 \qj \li50 \fi444 \ri65 \sl-260 \tx50 \tx494 \tqr \tx7302 The second way to display text in CP/M is in the 40\_column mode. This mode uses the standard VICdisplay chip found in the 64 and can be used with a standard 40\_column Commodore 1702 color monitor. The 1702 monitor is less expensive than the new 1902, but it cannot display the entire 80\_column line that CP/M programs expect. Instead, the first\par 
}\pard \sl-260 \tx50 \tx494 \tqr \tx7302 {\pard \posx11071 \posy415 \phpg \pvpg \absh-804 \absw7317 \dxfrtext200 \fs10 \f0 \fs24 \f0 \pard \s9 \posx11071 \posy415 \phpg \pvpg \absh-804 \absw7317 \dxfrtext200 \qj \li50 \ri50 \sl-258 \tx50 \tqr \tx7266 40 columns are displayed normally. A special key on the Commodore 128 keyboard shifts the remaining rightmost 40 columns into view. Reading CP/M programs this wav requires \fs20 \f2 constant tr~s~elino hewn Urn \fs11 \f3 Vito\par 
}\pard \sl-258 \tx50 \tqr \tx7266 \fs24 \f0 {\pard \posx11381 \posy1085 \phpg \pvpg \absh-135 \absw7117 \dxfrtext200 \fs11 \f3 \pard \s10 \posx11381 \posy1085 \phpg \pvpg \absh-135 \absw7117 \dxfrtext200 \li50 \ri50 \sl-52 \tx50 \tqr \tx7066 ~ , , of o ~ ~ ~\par 
}\pard \sl-52 \tx50 \tqr \tx7066 \fs24 \f0 {\pard \posx11073 \posy1219 \phpg \pvpg \absh-1318 \absw7317 \dxfrtext200 \fs24 \f0 \fs24 \f0 \pard \s11 \posx11073 \posy1219 \phpg \pvpg \absh-1318 \absw7317 \dxfrtext200 \qj \li50 \ri50 \sl-257 \tx50 \tqr \tx7266 and therefore is only recommended if you will be creating CP/M programs that need 40 columns. Another justification might be writing CP/M games that use the Commodore 128 color and sound. A subtle advantage of using the 40\_column mode is that the clock speed of the system is doubled from 1 to 2 Megahertz.\par 
}\pard \sl-257 \tx50 \tqr \tx7266 {\pard \posx11110 \posy2853 \phpg \pvpg \absh-354 \absw2188 \dxfrtext200 \fs10 \f0 \fs28 \f1 \i \pard \s12 \posx11110 \posy2853 \phpg \pvpg \absh-354 \absw2188 \dxfrtext200 \li50 \ri50 \sl-304 \tx50 \tqr \tx2137 CPlMDiskeffes\par 
}\pard \sl-304 \tx50 \tqr \tx2137 \fs24 \f0 {\pard \posx11086 \posy3256 \phpg \pvpg \absh-1090 \absw7310 \dxfrtext200 \fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s13 \posx11086 \posy3256 \phpg \pvpg \absh-1090 \absw7310 \dxfrtext200 \qj \li50 \ri50 \sl-258 \tx50 \tqr \tx7259 You will need a set of Commodore 128 CP/M diskettes. Presently CP/M is distributed on two disks. One contains special CP/M startup programs and the other contains various utility programs. We will explain this in more detail later.\par 
}\pard \sl-258 \tx50 \tqr \tx7259 {\pard \posx10530 \posy4626 \phpg \pvpg \absh-729 \absw3735 \dxfrtext200 \fs10 \f0 \fs31 \f4 \b \pard \s14 \posx10530 \posy4626 \phpg \pvpg \absh-729 \absw3735 \dxfrtext200 \li50 \ri50 \sl-318 \tx50 \tqr \tx3684 Important Programs on a CP/M Owner's List\par 
}\pard \sl-318 \tx50 \tqr \tx3684 \fs24 \f0 {\pard \posx11092 \posy5388 \phpg \pvpg \absh-5792 \absw7351 \dxfrtext200 \fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s15 \posx11092 \posy5388 \phpg \pvpg \absh-5792 \absw7351 \dxfrtext200 \qj \li50 \ri81 \sl-260 \tx50 \tqr \tx7269 In 1976 there were 100 programs that ran under the CP/M operating system. In 1983 there were over 10,000 programs. With so much CP/M software to choose from, users of the Commodore 128 running CP/M are faced with a real problem of overwhelm. In this section we will help you presift and select the best software from the wide and abundant variety of CP/M programs. Not all software is created equal. We will focus on the programs that we feel are the best on the market for the price. Since there are so many good programs, our list is by no means to be considered exhaustive. By reading this section you will become aware of some of the most popular programs, and at the same time learn just what is possible in CP/M software.\par 
\fs10 \f0 \fs24 \f0 \pard \s16 \posx11092 \posy5388 \phpg \pvpg \absh-5792 \absw7351 \dxfrtext200 \qj \li63 \fi434 \ri50 \sl-260 \tx63 \tx497 \tqr \tx7300 The software that is popular for CP/M includes word processing programs for typing everything\'97from short letters to long chapters in a book. Most experts agree that really powerful word processing programs may have been responsible for starting the CP/M software marketplace. Eventually everyone needs to write something on the computer. Word processing \fs20 \f5 \i tools \fs24 \f0 \plain \lang1033 exist that allow you to automatically check the spelling of your letters or documents, build a table of contents, create an index, or insert names at specific spots in letters.\par 
\fs10 \f0 \fs24 \f0 \pard \s17 \posx11092 \posy5388 \phpg \pvpg \absh-5792 \absw7351 \dxfrtext200 \qj \li88 \fi434 \ri63 \sl-258 \tx88 \tx522 \tqr \tx7287 Spreadsheets are popular programs used in businesses. These general purpose programs allow you to manipulate numbers and figures in a large matrix of rows and columns. Some of the best spreadsheets ever created\par 
}\pard \sl-258 \tx88 \tx522 \tqr \tx7287 \page \lndscpsxn {\stylesheet {\snext0 Normal;}
{\s2 \tx50 \tqr \tx7273 \qj \li939 \ri66 \sl255 \sbasedon0 \snext2 OmniPage #1025;}
{\s3 \tx51 \tx489 \tqr \tx7289 \qj \li938 \fi438 \ri50 \sl261 \sbasedon0 \snext3 OmniPage #1026;}
{\s4 \tx50 \tx488 \tqr \tx7272 \qj \li939 \fi438 \ri67 \sl261 \sbasedon0 \snext4 OmniPage #1027;}
{\s5 \tx50 \tqr \tx4955 \ql \sl304 \li939 \ri50 \sbasedon0 \snext5 OmniPage #1028;}
{\s6 \tqr \tx7299 \qj \li939 \ri50 \sl261 \sbasedon0 \snext6 OmniPage #1029;}
{\s7 \tx483 \tqr \tx7275 \qj \li939 \fi433 \ri50 \sl259 \sbasedon0 \snext7 OmniPage #1030;}
{\s8 \tx72 \tx505 \tqr \tx7257 \qj \li917 \fi433 \ri68 \sl251 \sbasedon0 \snext8 OmniPage #1031;}
{\s9 \tx50 \tqr \tx3665 \ql \sl304 \li939 \ri50 \sbasedon0 \snext9 OmniPage #1032;}
{\s10 \tqr \tx7269 \qj \li939 \ri50 \sl259 \sbasedon0 \snext10 OmniPage #1033;}
{\s11 \tqr \tx1249 \ql \sl253 \li939 \ri50 \sbasedon0 \snext11 OmniPage #1034;}
{\s12 \tqr \tx7286 \qj \li939 \ri50 \sl260 \sbasedon0 \snext12 OmniPage #1035;}
{\s13 \tx60 \tx488 \tqr \tx7285 \qj \li929 \fi428 \ri51 \sl261 \sbasedon0 \snext13 OmniPage #1036;}
}\par {\pard \posx1665 \posy189 \phpg \pvpg \absh-7076 \absw7340 \dxfrtext200 \fs24 \f0 \pard \s2 \posx1665 \posy189 \phpg \pvpg \absh-7076 \absw7340 \dxfrtext200 \qj \li50 \ri66 \sl-255 \tx50 \tqr \tx7273 were developed first for CP/NI. Database management programs are pop\-ular for CP/M and allow you to manipulate large amounts of information that can be specified as a collection of "data fields", such as names, addresses, part numbers, and the like. Databases are used for organizing a company's customers, identifying amounts due, setting up inventories, analyzing data, printing reports, and so on.\par 
\fs10 \f0 \fs24 \f0 \pard \s3 \posx1665 \posy189 \phpg \pvpg \absh-7076 \absw7340 \dxfrtext200 \qj \li51 \fi438 \ri50 \sl-261 \tx51 \tx489 \tqr \tx7289 Very good financial software has been created for CP/M. There are accounts payable and receivable programs, journals, checkbook balancing programs, balance sheet and income statement generators, and even in\-come tax programs. Thousands of companies run their accounting systems under CP/M. You will also discover a fine assortment of communications software that runs under CP/M. These programs allow you to send files and programs over telephone lines, use remote database services like The Source and CompuServe, and even to get Dow Jones stock reports. In fact, CP/M includes a famous telecommunication program called Modem7 that is free. Languages for programming under CP/M exist in great numbers. Microsoft BASIC (called MBASIC) is the most popular CP/M language, but you will also find Pascal, the new C language, Forth, COBOL, Lisp, Prolog, and others.\par 
\fs10 \f0 \fs24 \f0 \pard \s4 \posx1665 \posy189 \phpg \pvpg \absh-7076 \absw7340 \dxfrtext200 \qj \li50 \fi438 \ri67 \sl-261 \tx50 \tx488 \tqr \tx7272 Don't look for much in games for CP/M. There are adventure games that are good, but Kildall designed CP/M to work with "generic" terminals and keyboards. Therefore, standard CP/M does not support video graphics, sound, or function keys and most CP/M programs you find will just use the 80\_column text mode. However, as we shall see, it is possible for programs to be written in Commodore 128 CP/M that access the C128's graphics, windows, and sound effects, and we can expect to see these developed over the next few years.\par 
}\sect \sectd \linex0 \linemod0 \sbknone \lndscpsxn \marglsxn1607 \margrsxn1644 \pard \sl-261 \tx50 \tx488 \tqr \tx7272 {\pard \posx1666 \posy7583 \phpg \pvpg \absh-354 \absw5006 \dxfrtext200 \fs10 \f0 \fs29 \f1 \i \pard \s5 \posx1666 \posy7583 \phpg \pvpg \absh-354 \absw5006 \dxfrtext200 \li50 \ri50 \sl-304 \tx50 \tqr \tx4955 A Caveat: Disk Format Compatibility\par 
}\pard \sl-304 \tx50 \tqr \tx4955 \fs24 \f0 {\pard \posx1657 \posy7990 \phpg \pvpg \absh-3193 \absw7350 \dxfrtext200 \fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s6 \posx1657 \posy7990 \phpg \pvpg \absh-3193 \absw7350 \dxfrtext200 \qj \li50 \ri50 \sl-261 \tx50 \tqr \tx7299 As we mentioned previously, a plethora of time\_proven software exists for CP/M that is directly usable on your Commodore 128. The only require\-ment is that the CP/M software be available on 51/. inch floppies. One particularly thorny problem with distribution of CP/M software is the disk format. When CP/M was originally created it used 8\_inch single density, single\_sided diskettes and a single storage format called IBM System 34. There now exist several new floppy storage possibilities, including double\-density, and double\_sided. When the 51/. inch disks arrived, several man\-ufacturers of CP/M computers, including KayPro, Morrow, and Osborne \'97makers of CP/M portables\'97slightly altered the storage format to suit their particular hardware. As a consequence there is incompatibility be\-tween the drives of different CP/M machines.\par 
}\pard \sl-261 \tx50 \tqr \tx7299 {\pard \posx11116 \posy202 \phpg \pvpg \absh-2626 \absw7326 \dxfrtext200 \fs10 \f0 \fs24 \f0 \pard \s7 \posx11116 \posy202 \phpg \pvpg \absh-2626 \absw7326 \dxfrtext200 \qj \li50 \fi433 \ri50 \sl-259 \tx50 \tx483 \tqr \tx7275 Commodore gets around this incompatibility problem by using an intelligent peripheral drive. The 1571 and 1572 drives are capable of reading any particular CP/M\_formatted diskette. When you insert a disk\-ette the 1571 disk drive tries to determine the type of storage format. Once the Commodore 128 has figured out how the data is stored, it is an easy matter to read it. Commodore 128 CP/M is also capable of formatting a CP/M disk in any of several formats, so you can write a program that can be read by another popular CP/M computer.\par 
\fs10 \f0 \fs24 \f0 \pard \s8 \posx11116 \posy202 \phpg \pvpg \absh-2626 \absw7326 \dxfrtext200 \qj \li72 \fi433 \ri68 \sl-251 \tx72 \tx505 \tqr \tx7257 Now that you know a little about storage formats, let's see what particular software you might want to own.\par 
}\pard \sl-251 \tx72 \tx505 \tqr \tx7257 {\pard \posx11159 \posy3160 \phpg \pvpg \absh-354 \absw3716 \dxfrtext200 \fs10 \f0 \fs29 \f1 \i \pard \s9 \posx11159 \posy3160 \phpg \pvpg \absh-354 \absw3716 \dxfrtext200 \li50 \ri50 \sl-304 \tx50 \tqr \tx3665 Word Processing Programs\par 
}\pard \sl-304 \tx50 \tqr \tx3665 \fs24 \f0 {\pard \posx11126 \posy3567 \phpg \pvpg \absh-1874 \absw7320 \dxfrtext200 \fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s10 \posx11126 \posy3567 \phpg \pvpg \absh-1874 \absw7320 \dxfrtext200 \qj \li50 \ri50 \sl-259 \tx50 \tqr \tx7269 Word processing programs are among the first software purchased by many users. A word processor is a text editing program that lets you do what a typewriter does and a lot more. Besides allowing you to instantly insert a letter, word, or sentence anywhere in the document you are typing, a word processing program can automatically reformat an entire document in a few seconds, straightening out margins, changing width of lines, and so on.\par 
}\pard \sl-259 \tx50 \tqr \tx7269 {\pard \posx11143 \posy5643 \phpg \pvpg \absh-315 \absw1300 \dxfrtext200 \fs10 \f0 \fs24 \f2 \b \pard \s11 \posx11143 \posy5643 \phpg \pvpg \absh-315 \absw1300 \dxfrtext200 \li50 \ri50 \sl-253 \tx50 \tqr \tx1249 WordStar\par 
}\pard \sl-253 \tx50 \tqr \tx1249 \fs24 \f0 {\pard \posx11130 \posy6026 \phpg \pvpg \absh-5017 \absw7337 \dxfrtext200 \fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s12 \posx11130 \posy6026 \phpg \pvpg \absh-5017 \absw7337 \dxfrtext200 \qj \li50 \ri50 \sl-260 \tx50 \tqr \tx7286 WordStar was the first "what\_you\_see\_is\_what\_you\_get" editing program for CP/M. What this means is that the formatting features, such as double spacing, justification, and margin settings are visible on the screen before the text is printed. The way the text looks on the screen is the way it will look when it is finally printed. Older text editors were broken into two parts: an editor for entering text and a formatter/printer for printing text. You could not see what the printed copy would look like until it was printed. The ED.COM program that comes with your copy of Commodore 128 CP/M is an ancient relative of WordStar.\par 
\fs10 \f0 \fs24 \f0 \pard \s13 \posx11130 \posy6026 \phpg \pvpg \absh-5017 \absw7337 \dxfrtext200 \qj \li60 \fi428 \ri51 \sl-261 \tx60 \tx488 \tqr \tx7285 WordStar, like many CP/M programs we will describe, must be "in\-stalled" on the particular CP/M computer system it will be working with. This installation process is necessary because each CP/M system may have a different size screen or type of terminal, different printer, and even different kinds of keyboards. Different terminals have different protocols for how they put things on the screen. The manufacturers of CP/M appli\-cation programs, such as WordStar, do not want to inventory dozens of different disks for each machine, so they create an installation procedure into their software. When you install a CP/M program, you are basically telling it the characteristics of your screen and printer. The program then\par 
}\pard \sl-261 \tx60 \tx488 \tqr \tx7285 \page \lndscpsxn {\stylesheet {\snext0 Normal;}
{\s2 \tx63 \tqr \tx7339 \qj \li926 \ri50 \sl252 \sbasedon0 \snext2 OmniPage #1281;}
{\s3 \tx50 \tx483 \tqr \tx7322 \qj \li939 \fi433 \ri67 \sl260 \sbasedon0 \snext3 OmniPage #1282;}
{\s4 \tx50 \tqr \tx1665 \ql \sl253 \li939 \ri50 \sbasedon0 \snext4 OmniPage #1283;}
{\s5 \tx57 \tqr \tx7360 \qj \li932 \ri50 \sl261 \sbasedon0 \snext5 OmniPage #1284;}
{\s6 \tx50 \tx488 \tqr \tx7301 \qj \li939 \fi438 \ri109 \sl261 \sbasedon0 \snext6 OmniPage #1285;}
{\s7 \tx53 \tx491 \tqr \tx7261 \qj \li936 \fi438 \ri149 \sl263 \sbasedon0 \snext7 OmniPage #1286;}
{\s8 \tx50 \tqr \tx2815 \ql \sl312 \li939 \ri50 \sbasedon0 \snext8 OmniPage #1287;}
{\s9 \tqr \tx7267 \qj \li939 \ri50 \sl261 \sbasedon0 \snext9 OmniPage #1288;}
{\s10 \tqr \tx7243 \qj \li939 \ri50 \sl256 \sbasedon0 \snext10 OmniPage #1289;}
{\s11 \tqr \tx1237 \ql \sl253 \li939 \ri50 \sbasedon0 \snext11 OmniPage #1290;}
{\s12 \tqr \tx7265 \qj \li939 \ri50 \sl259 \sbasedon0 \snext12 OmniPage #1291;}
{\s13 \tqr \tx1890 \ql \sl312 \li939 \ri50 \sbasedon0 \snext13 OmniPage #1292;}
{\s14 \tqr \tx7268 \qj \li939 \ri50 \sl259 \sbasedon0 \snext14 OmniPage #1293;}
{\s15 \tqr \tx1305 \ql \sl253 \li939 \ri50 \sbasedon0 \snext15 OmniPage #1294;}
{\s16 \tqr \tx7275 \qj \li939 \ri50 \sl260 \sbasedon0 \snext16 OmniPage #1295;}
}\par {\pard \posx1690 \posy303 \phpg \pvpg \absh-2899 \absw7390 \dxfrtext200 \fs24 \f0 \pard \s2 \posx1690 \posy303 \phpg \pvpg \absh-2899 \absw7390 \dxfrtext200 \qj \li63 \ri50 \sl-252 \tx63 \tqr \tx7339 uses a built\_in table to produce a custom version of the product. WordStar has a powerful "install" program that provides a very comprehensive] menu of printers and terminals it can work with.\par 
\fs10 \f0 \fs24 \f0 \pard \s3 \posx1690 \posy303 \phpg \pvpg \absh-2899 \absw7390 \dxfrtext200 \qj \li50 \fi433 \ri67 \sl-260 \tx50 \tx483 \tqr \tx7322 Although WordStar is one of the oldest, most mature word processing programs on the CP/M market, it has a complex set of commands that you must memorize to work with it effectively. A well\_designed set of on\-screen "help" menus makes this fairly easy. WordStar's documentation is massive, but many books are out that simplify learning about it. A "mail\-merge" option available for WordStar allows you to print copies of the same letter to a list of people stored in a database file. You can have specific information entered into each letter, too.\par 
}\sect \sectd \linex0 \linemod0 \sbknone \lndscpsxn \marglsxn1629 \margrsxn1605 \pard \sl-260 \tx50 \tx483 \tqr \tx7322 {\pard \posx1703 \posy3404 \phpg \pvpg \absh-315 \absw1716 \dxfrtext200 \fs10 \f0 \fs24 \f1 \b \pard \s4 \posx1703 \posy3404 \phpg \pvpg \absh-315 \absw1716 \dxfrtext200 \li50 \ri50 \sl-253 \tx50 \tqr \tx1665 Perfect Writer\par 
}\pard \sl-253 \tx50 \tqr \tx1665 \fs24 \f0 {\pard \posx1679 \posy3787 \phpg \pvpg \absh-5541 \absw7411 \dxfrtext200 \fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s5 \posx1679 \posy3787 \phpg \pvpg \absh-5541 \absw7411 \dxfrtext200 \qj \li57 \ri50 \sl-261 \tx57 \tqr \tx7360 Perfect Writer is part of a family of Perfect Software, including Perfects Calc and Perfect File. Like WordStar, Perfect Writer uses on\_screen for\-matting, but in addition it allows split\_screen editing. This means yout can split the screen into two horizontal windows, and view different parts of the same document, so you can read one section while modifying; another. In fact, Perfect Writer allows you to open seven files at the same' time and edit them simultaneously. Another reason that split windows areas important is that you can cut and paste between two documents while, both are on the screen. In WordStar, you have to save the text to be pasted in a file, quit the current document, reload the new document, and reader in the file of text.\par 
\fs10 \f0 \fs24 \f0 \pard \s6 \posx1679 \posy3787 \phpg \pvpg \absh-5541 \absw7411 \dxfrtext200 \qj \li50 \fi438 \ri109 \sl-261 \tx50 \tx488 \tqr \tx7301 Embedded commands that set spacing and set up headers and footers are placed in the text enclosed by special symbols. These commands affect the formatting of the entire file and take some time to get used to. But they are more powerful than WordStar's formatting, where every par\-agraph must be individually reformatted. Perfect Writer is a bit more user friendly than WordStar because it focuses on two keys (Escape and Con\-trol) for most of its commands.\par 
\fs10 \f0 \fs24 \f0 \pard \s7 \posx1679 \posy3787 \phpg \pvpg \absh-5541 \absw7411 \dxfrtext200 \qj \li53 \fi438 \ri149 \sl-263 \tx53 \tx491 \tqr \tx7261 Perfect Writer has an excellent install program and can even allow customization for hardware not on its menu. A version of Perfect Writer for the Commodore 128 is available.\par 
}\pard \sl-263 \tx53 \tx491 \tqr \tx7261 {\pard \posx1688 \posy9650 \phpg \pvpg \absh-348 \absw2866 \dxfrtext200 \fs10 \f0 \fs30 \f2 \i \pard \s8 \posx1688 \posy9650 \phpg \pvpg \absh-348 \absw2866 \dxfrtext200 \li50 \ri50 \sl-312 \tx50 \tqr \tx2815 Database Managers\par 
}\pard \sl-312 \tx50 \tqr \tx2815 \fs24 \f0 {\pard \posx1688 \posy10053 \phpg \pvpg \absh-1099 \absw7318 \dxfrtext200 \fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s9 \posx1688 \posy10053 \phpg \pvpg \absh-1099 \absw7318 \dxfrtext200 \qj \li50 \ri50 \sl-261 \tx50 \tqr \tx7267 Database managers are programs used to manipulate data that exist in the form of "records''. Records can be thought of as a single line of information that contain, for example, names, addresses, amounts in\-voiced, number of parts on hand, and so on. A database manager is a\par 
}\pard \sl-261 \tx50 \tqr \tx7267 {\pard \posx11158 \posy312 \phpg \pvpg \absh-1085 \absw7294 \dxfrtext200 \fs10 \f0 \fs24 \f0 \pard \s10 \posx11158 \posy312 \phpg \pvpg \absh-1085 \absw7294 \dxfrtext200 \qj \li50 \ri50 \sl-256 \tx50 \tqr \tx7243 program that lets you enter the data, arrange how it will be stored, search for certain data, and print out summary reports. Businesses are frequent users of database managers, since they frequently deal with customer information that can easily be represented in a database.\par 
}\pard \sl-256 \tx50 \tqr \tx7243 {\pard \posx11173 \posy1594 \phpg \pvpg \absh-315 \absw1288 \dxfrtext200 \fs10 \f0 \fs24 \f1 \b \pard \s11 \posx11173 \posy1594 \phpg \pvpg \absh-315 \absw1288 \dxfrtext200 \li50 \ri50 \sl-253 \tx50 \tqr \tx1237 dBASE II\par 
}\pard \sl-253 \tx50 \tqr \tx1237 \fs24 \f0 {\pard \posx11155 \posy1972 \phpg \pvpg \absh-2649 \absw7316 \dxfrtext200 \fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s12 \posx11155 \posy1972 \phpg \pvpg \absh-2649 \absw7316 \dxfrtext200 \qj \li50 \ri50 \sl-259 \tx50 \tqr \tx7265 Probably the most popular database program for CP/M is dBASE II from Ashton\_Tate. It is known as a relational database, meaning that any one piece of information can be linked to another. For example, a name can lead to an address and a phone number, and a phone number can lead to an address and a name. An actual dBASE II application program requires technical skill to program, but no technical skill is needed to use the final program. dBASE II has a programming language that you use to create a database. Although difficult to learn at first, once mastered you can create very complex data management applications. Many good books are available to teach you dBASE II programming.\par 
}\pard \sl-259 \tx50 \tqr \tx7265 {\pard \posx11193 \posy4944 \phpg \pvpg \absh-348 \absw1941 \dxfrtext200 \fs10 \f0 \fs30 \f2 \i \pard \s13 \posx11193 \posy4944 \phpg \pvpg \absh-348 \absw1941 \dxfrtext200 \li50 \ri50 \sl-312 \tx50 \tqr \tx1890 Spreadsheets\par 
}\pard \sl-312 \tx50 \tqr \tx1890 \fs24 \f0 {\pard \posx11171 \posy5341 \phpg \pvpg \absh-2654 \absw7319 \dxfrtext200 \fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s14 \posx11171 \posy5341 \phpg \pvpg \absh-2654 \absw7319 \dxfrtext200 \qj \li50 \ri50 \sl-259 \tx50 \tqr \tx7268 A spreadsheet is simply an electronic ledger for "what\_if" analysis. It gives you a way to test different possibilities by manipulating numerical data entered in column and row format. Not only can you enter numbers, but also formulas that operate on the data in rows and columns. Typical "what\_if" questions that a spreadsheet answers are: How should you invest if interest rates are 15 percent? What is the effect of producing more purple socks than green socks? Financial modeling and forecasting are one of the main uses of spreadsheets. The important characteristics of a spreadsheet are its worksheet size, report capability, speed of calculation, interaction with other programs, and ease of entering data.\par 
}\pard \sl-259 \tx50 \tqr \tx7268 {\pard \posx11193 \posy8197 \phpg \pvpg \absh-315 \absw1356 \dxfrtext200 \fs10 \f0 \fs24 \f1 \b \pard \s15 \posx11193 \posy8197 \phpg \pvpg \absh-315 \absw1356 \dxfrtext200 \li50 \ri50 \sl-253 \tx50 \tqr \tx1305 MultiPlan\par 
}\pard \sl-253 \tx50 \tqr \tx1305 \fs24 \f0 {\pard \posx11180 \posy8580 \phpg \pvpg \absh-2663 \absw7326 \dxfrtext200 \fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s16 \posx11180 \posy8580 \phpg \pvpg \absh-2663 \absw7326 \dxfrtext200 \qj \li50 \ri50 \sl-260 \tx50 \tqr \tx7275 MultiPlan was one of the first spreadsheets for CP/M. It is organized around the worksheet, which shows on your screen organized in rows and columns, much like an accountant's ledger. MultiPlan actually uses the screen as a window to a much larger worksheet\'97it shows the area of 7 rows and 19 columns\'97out of a total area of 63 columns by 255 rows. You use commands to move around on the worksheet and enter values. You can also enter formulas that automatically perform calculations on the data in the columns and rows. Recalculation is almost instantaneous. In a way MultiPlan works a lot like a word processor, except it uses the cursor keys for moving through the rows and columns. You can delete\par 
}\pard \sl-260 \tx50 \tqr \tx7275 \page \lndscpsxn {\stylesheet {\snext0 Normal;}
{\s2 \tx50 \tqr \tx7291 \qj \li939 \ri50 \sl256 \sbasedon0 \snext2 OmniPage #1537;}
{\s3 \tqr \tx1485 \ql \sl253 \li939 \ri50 \sbasedon0 \snext3 OmniPage #1538;}
{\s4 \tqr \tx7287 \qj \li939 \ri50 \sl261 \sbasedon0 \snext4 OmniPage #1539;}
{\s5 \tqr \tx2693 \ql \sl304 \li939 \ri50 \sbasedon0 \snext5 OmniPage #1540;}
{\s6 \tqr \tx7292 \qj \li939 \ri50 \sl261 \sbasedon0 \snext6 OmniPage #1541;}
{\s7 \tqr \tx2994 \ql \sl253 \li939 \ri50 \sbasedon0 \snext7 OmniPage #1542;}
{\s8 \tx52 \tqr \tx7275 \qj \li937 \ri65 \sl258 \sbasedon0 \snext8 OmniPage #1543;}
{\s9 \tx50 \tx481 \tqr \tx7290 \qj \li939 \fi431 \ri50 \sl260 \sbasedon0 \snext9 OmniPage #1544;}
{\s10 \tx50 \tqr \tx2339 \ql \sl304 \li939 \ri50 \sbasedon0 \snext10 OmniPage #1545;}
{\s11 \tqr \tx7294 \qj \li939 \ri50 \sl261 \sbasedon0 \snext11 OmniPage #1546;}
}\par {\pard \posx1654 \posy204 \phpg \pvpg \absh-2373 \absw7342 \dxfrtext200 \fs24 \f0 \pard \s2 \posx1654 \posy204 \phpg \pvpg \absh-2373 \absw7342 \dxfrtext200 \qj \li50 \ri50 \sl-256 \tx50 \tqr \tx7291 large areas of the \fs24 \f1 \b worksheet \fs24 \f0 \plain \lang1033 with a few keystrokes. You can enter text as well as numbers \fs24 \f1 \b to nicely format \fs24 \f0 \plain \lang1033 the way the worksheet appears, giving headings to the figures, for example. There is an online help system that allows you to leap headlong into the program. However, the large manual is excellent for reference. Several good books exist for learning MultiPlan. MultiPlan's only lack is that there is no simple way to get graphics output from the program. With the Commodore 128 and its excellent graphics screen we may find that a version of MultiPlan with graphics output becomes available.\par 
}\sect \sectd \linex0 \linemod0 \sbknone \lndscpsxn \marglsxn1604 \margrsxn1527 \pard \sl-256 \tx50 \tqr \tx7291 {\pard \posx1681 \posy2783 \phpg \pvpg \absh-315 \absw1536 \dxfrtext200 \fs10 \f0 \fs24 \f1 \b \pard \s3 \posx1681 \posy2783 \phpg \pvpg \absh-315 \absw1536 \dxfrtext200 \li50 \ri50 \sl-253 \tx50 \tqr \tx1485 SuperCalc2\par 
}\pard \sl-253 \tx50 \tqr \tx1485 \fs24 \f0 {\pard \posx1661 \posy3166 \phpg \pvpg \absh-3448 \absw7338 \dxfrtext200 \fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s4 \posx1661 \posy3166 \phpg \pvpg \absh-3448 \absw7338 \dxfrtext200 \qj \li50 \ri50 \sl-261 \tx50 \tqr \tx7287 Another excellent spreadsheet program is SuperCalc2. This spreadsheet is much like MultiPlan, except its worksheet holds slightly more rows and columns. SuperCalc has an interesting batch execution system that lets you put a series of SuperCalc commands in a file and execute it. For example, if you want to print a report that uses different sections of the worksheet, the commands in the file can specify these ranges, one after another, unattended. This is especially useful to experts who wish to develop complex packages that can be used by novices. SuperCalc also uses a kind of storage for spreadsheets called SDI for Super \fs24 \f2 \i Data Ex\-change. \fs24 \f0 \plain \lang1033 It can store in a comma\_delimited format which is suitable for other CP/M languages like Microsoft BASIC, CBASIC, and Pascal (see the section on CP/M Programming Languages). SuperCalc2 is easy to use and has a help key feature.\par 
}\pard \sl-261 \tx50 \tqr \tx7287 {\pard \posx1681 \posy6937 \phpg \pvpg \absh-354 \absw2744 \dxfrtext200 \fs10 \f0 \fs29 \f3 \i \pard \s5 \posx1681 \posy6937 \phpg \pvpg \absh-354 \absw2744 \dxfrtext200 \li50 \ri50 \sl-304 \tx50 \tqr \tx2693 Financial Software\par 
}\pard \sl-304 \tx50 \tqr \tx2693 \fs24 \f0 {\pard \posx1680 \posy7344 \phpg \pvpg \absh-3716 \absw7343 \dxfrtext200 \fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s6 \posx1680 \posy7344 \phpg \pvpg \absh-3716 \absw7343 \dxfrtext200 \qj \li50 \ri50 \sl-261 \tx50 \tqr \tx7292 Financial software programs are CP/M packages that allow a business to do all its bookkeeping on the computer. Most financial packages offer a general ledger program and a payroll system. A complete system would contain programs for handling receivables, payables, inventory, and job costing. Financial software is a difficult product to define, and there are many packages that fall into this catagory that may be quite different. When purchasing such a system for your Commodore 128 in the CP/M mode, you will want to pay attention to how flexible the structure of the product is (what functions have been preallocated in the program) and how flexible the reporting is. You'll also want to check the integration of the package; that is, can the different parts of the system, like the check\-book and the income statement generator, talk to each other? You may also want to be concerned with security and make sure there is some kind of password protection, so that only certain employees can write checks.\par 
}\pard \sl-261 \tx50 \tqr \tx7292 {\pard \posx11267 \posy195 \phpg \pvpg \absh-315 \absw3045 \dxfrtext200 \fs10 \f0 \fs24 \f1 \b \pard \s7 \posx11267 \posy195 \phpg \pvpg \absh-315 \absw3045 \dxfrtext200 \li50 \ri50 \sl-253 \tx50 \tqr \tx2994 Software Fitness Program\par 
}\pard \sl-253 \tx50 \tqr \tx2994 \fs24 \f0 {\pard \posx11243 \posy569 \phpg \pvpg \absh-6018 \absw7341 \dxfrtext200 \fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s8 \posx11243 \posy569 \phpg \pvpg \absh-6018 \absw7341 \dxfrtext200 \qj \li52 \ri65 \sl-258 \tx52 \tqr \tx7275 Here is a solid, screen\_oriented, seven\_part accounting system. Software Fitness Program from Open Systems offers: general ledger, accounts re\-ceivable, accounts payable, sales order, inventory, payroll, and job cost programs. The entry screens are amazingly comprehensive. WordStar\_like editing commands let you move easily around Software Fitness screens and enter and modify data in them. The Software Fitness Program can adapt to your business' accounting practices, rather then forcing you to adapt to its system. Everything about the program is stored in tables that can be modified. There are many types of reporting functions, including audit trails, comparisons and analyses. Custom reports with custom for\-matting is possible. The system is full of features. The accounts receivable program handles finance charges on forward balances and sends state\-ments and invoices. The payroll handles sick pay, vacation, FICA, state and local taxes, and even double time.\par 
\fs10 \f0 \fs24 \f0 \pard \s9 \posx11243 \posy569 \phpg \pvpg \absh-6018 \absw7341 \dxfrtext200 \qj \li50 \fi431 \ri50 \sl-260 \tx50 \tx481 \tqr \tx7290 The program runs under a special BASIC Interpreter from a company called Control C and that program must be purchased separately. The Software Fitness System earns its name: it is comprehensive, easy to learn, and the documentation is good. One possible special feature for Com\-modore 128 users is that the Software Fitness Program is capable of dealing with up to twenty\_four concurrent users working on the same files. If a company creates a network scheme for C128s running under CP/M and installs the Software Fitness Program, it could be the most cost\-effective corporate computer financial system ever sold.\par 
}\pard \sl-260 \tx50 \tx481 \tqr \tx7290 {\pard \posx11268 \posy6910 \phpg \pvpg \absh-354 \absw2390 \dxfrtext200 \fs10 \f0 \fs29 \f3 \i \pard \s10 \posx11268 \posy6910 \phpg \pvpg \absh-354 \absw2390 \dxfrtext200 \li50 \ri50 \sl-304 \tx50 \tqr \tx2339 Communications\par 
}\pard \sl-304 \tx50 \tqr \tx2339 \fs24 \f0 {\pard \posx11233 \posy7317 \phpg \pvpg \absh-3452 \absw7345 \dxfrtext200 \fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s11 \posx11233 \posy7317 \phpg \pvpg \absh-3452 \absw7345 \dxfrtext200 \qj \li50 \ri50 \sl-261 \tx50 \tqr \tx7294 The latest craze is computer networking and system\_to\_system commu\-nications, and the Commodore 128 user will most likely want to try it out. Networking and communicating with computers involves being able to access remote computers, often over the telephone lines. This may be for sending electronic MCI mail or getting a file or program from someone's computer. Electronic mail is a method whereby you can write a letter and transmit it to a computer owned by the electronic mail company. The file is converted into a printout and delivered to the recipient overnight. Sending and receiving programs is another popular reason for allowing computers to communicate. You may also use computer communications to call up far\_away computers and then search and roam through the fantastic information databases they contain. Or maybe you want to access tons of free CP/M software (we're getting to that soon).\par 
}\pard \sl-261 \tx50 \tqr \tx7294 \page \lndscpsxn {\stylesheet {\snext0 Normal;}
{\s2 \tx50 \tx488 \tqr \tx7293 \qj \li939 \fi438 \ri90 \sl258 \sbasedon0 \snext2 OmniPage #1793;}
{\s3 \tx83 \tx521 \tqr \tx7333 \qj \li906 \fi438 \ri50 \sl261 \sbasedon0 \snext3 OmniPage #1794;}
{\s4 \tx50 \tqr \tx1263 \ql \sl283 \li939 \ri50 \sbasedon0 \snext4 OmniPage #1795;}
{\s5 \tqr \tx7287 \qj \li939 \ri50 \sl261 \sbasedon0 \snext5 OmniPage #1796;}
{\s6 \tx65 \tqr \tx7311 \qj \li924 \ri50 \sl257 \sbasedon0 \snext6 OmniPage #1797;}
{\s7 \tx50 \tx483 \tqr \tx7279 \qj \li939 \fi433 \ri82 \sl260 \sbasedon0 \snext7 OmniPage #1798;}
{\s8 \tx50 \tqr \tx1608 \ql \sl304 \li939 \ri50 \sbasedon0 \snext8 OmniPage #1799;}
{\s9 \tqr \tx7281 \qj \li939 \ri50 \sl261 \sbasedon0 \snext9 OmniPage #1800;}
}\par {\pard \posx1705 \posy236 \phpg \pvpg \absh-8644 \absw7384 \dxfrtext200 \fs24 \f0 \pard \s2 \posx1705 \posy236 \phpg \pvpg \absh-8644 \absw7384 \dxfrtext200 \qj \li50 \fi438 \ri90 \sl-258 \tx50 \tx488 \tqr \tx7293 To get started in \fs24 \f1 \b communications you need a \fs24 \f0 \plain \lang1033 modem and a commu\-nications program. The modem encodes and decodes information from the computer into a standard \fs24 \f1 \b format of tones. If the \fs24 \f0 \plain \lang1033 remote computer has a modem, the two computers can understand each other and trade infor\-mation. A communications program allows you to easily send and receive files. For example, if you use electronic mail you will need to be able to send memos, letters, and information. Your software should be able to look on your disk for a file containing a letter, and then be able to send it to the mail network. When receiving information from another computer, it needs to be able to open a file on your disk and capture the information. Your communications software also needs to be able to emulate a popular terminal of some kind via your communications program. This is because most information services set up a communications link that expects a certain kind of terminal to be attached.\par 
\fs10 \f0 \fs24 \f0 \pard \s3 \posx1705 \posy236 \phpg \pvpg \absh-8644 \absw7384 \dxfrtext200 \qj \li83 \fi438 \ri50 \sl-261 \tx83 \tx521 \tqr \tx7333 Your program should also allow handling protocol file transfer. Pro\-tocol means that special error checking is set up between sender and receiver so that no errors occur in the transmission. The reason protocol is needed is that phone lines can have electrical static, or noise, on them which can alter the characters they are sending or receiving. The protocol mode guarantees that the character is sent properly. The most popular protocol is the XMODEM protocol, which was developed by Ward Chris\-tensen and placed in the public domain. XMODEM is part of another modem program, called Modem7, developed by Ward, and is described later in this chapter in the section called "Free Software". The mode for most communications between computers starts out with no protocol. The character that is sent is always echoed so you can see it appear on your screen (this is called \fs29 \f2 \i full \fs24 \f0 \plain \lang1033 duplex mode), but no check is made to see if the right character is echoed. This is called the non\_protocol mode. Which mode you use depends on the kind of file you are sending. A program file, like a COM file, is composed mostly of pure machine codes for the Z80A microprocessor. Sending this file demands protocol mode for it to work. On the other hand, you might not care about accuracy of a memo you are sending to a person via electronic mail.\par 
}\sect \sectd \linex0 \linemod0 \sbknone \lndscpsxn \marglsxn1655 \margrsxn1496 \pard \sl-261 \tx83 \tx521 \tqr \tx7333 {\pard \posx1767 \posy9075 \phpg \pvpg \absh-340 \absw1314 \dxfrtext200 \fs10 \f0 \fs24 \f3 \pard \s4 \posx1767 \posy9075 \phpg \pvpg \absh-340 \absw1314 \dxfrtext200 \li50 \ri50 \sl-283 \tx50 \tqr \tx1263 Crosstalk\par 
}\pard \sl-283 \tx50 \tqr \tx1263 \fs24 \f0 {\pard \posx1754 \posy9465 \phpg \pvpg \absh-1620 \absw7338 \dxfrtext200 \fs10 \f0 \fs24 \f0 \pard \s5 \posx1754 \posy9465 \phpg \pvpg \absh-1620 \absw7338 \dxfrtext200 \qj \li50 \ri50 \sl-261 \tx50 \tqr \tx7287 Although Crosstalk, manufactured by MicroStuff, wasn't the first CP/M communications program on the market, it has risen to the ranks of the most popular. Crosstalk is designed mainly to work with the Hayes Smart\-modem, because this particular modem has built\_in intelligence that Crosstalk can exploit. It can perform autodialing, both in pulse and touchtone, and has numerous selectable protocol features. Crosstalk cap\-\pard \posx1754 \posy9465 \phpg \pvpg \absh-1620 \absw7338 \dxfrtext200 \qj \li50 \ri50 \sl-261 \tx50 \tqr \tx7287 \par 
}\pard \sl-261 \tx50 \tqr \tx7287 {\pard \posx11253 \posy228 \phpg \pvpg \absh-6796 \absw7362 \dxfrtext200 \fs10 \f0 \fs24 \f0 \pard \s6 \posx11253 \posy228 \phpg \pvpg \absh-6796 \absw7362 \dxfrtext200 \qj \li65 \ri50 \sl-257 \tx65 \tqr \tx7311 tures incoming data in memory, lets \fs24 \f1 \b you go in and edit it, \fs24 \f0 \plain \lang1033 and then \fs24 \f1 \b save \fs24 \f0 \plain \lang1033 it to disk when ready. Like all good communications programs, Crosstalk lets you adjust important parameters, like the phone number, baud rate, number of data bits, number of stop bits, parity, and full or half duplex. What is really nice is that you set all of these parameters on a screen control panel which is always in view, so that their state can always be known. Since each computer system you talk to may require different sets of parameters, Crosstalk lets you store the settings under a filename, like SOURCE.XTK. Then you simply type LO SOURCE.XTK and Crosstalk LOads in the parameters you stored.\par 
\fs10 \f0 \fs24 \f0 \pard \s7 \posx11253 \posy228 \phpg \pvpg \absh-6796 \absw7362 \dxfrtext200 \qj \li50 \fi433 \ri82 \sl-260 \tx50 \tx483 \tqr \tx7279 In addition to having a well\_designed terminal\_emulation mode, Cros\-stalk has a file\_transfer mode. Even though the computers may be quite different hardware\_wise\'97that is, you might have a Commodore 128 communicating with an Osborne\'97if they are both running Crosstalk, file transfer will be easy. People who use Crosstalk to trade public\_domain "squeezed" (compressed) COM files will appreciate the unattended trans\-fer mode. This allows you to use Crosstalk to call up an unattended computer also running Crosstalk, examine the files on that computer's drives, and transfer just the ones you desire. The transfer can be either an XMODEM protocol transfer, where all the characters are checked as they are sent, or in the non\_protocol mode, where there is no accuracy checking. Crosstalk is bulletproof and almost impossible to crash. An online help command gets you descriptions of each command without needing to turn to the manual. Crosstalk is available for many machines, including the IBM PC and the full line of CP/M portables, such as Osborne, Morrow, and Kaypro.\par 
}\pard \sl-260 \tx50 \tx483 \tqr \tx7279 {\pard \posx11253 \posy7322 \phpg \pvpg \absh-384 \absw1659 \dxfrtext200 \fs10 \f0 \fs27 \f4 \i \b \pard \s8 \posx11253 \posy7322 \phpg \pvpg \absh-384 \absw1659 \dxfrtext200 \li50 \ri50 \sl-304 \tx50 \tqr \tx1608 Languages\par 
}\pard \sl-304 \tx50 \tqr \tx1608 \fs24 \f0 {\pard \posx11237 \posy7748 \phpg \pvpg \absh-3188 \absw7332 \dxfrtext200 \fs10 \f0 \fs24 \f0 \plain \lang1033 \plain \lang1033 \pard \s9 \posx11237 \posy7748 \phpg \pvpg \absh-3188 \absw7332 \dxfrtext200 \qj \li50 \ri50 \sl-261 \tx50 \tqr \tx7281 If you are dissatisfied with a CP/M application, or want to create the next best\_selling application program, you must know how to use a computer language. A programming language is what was used to create what ultimately became the final "instructions" to your Z80 chip, which make the program do what it does. For example, CP/M, WordStar, and MultiPlan were written in a very low\_level language called assembly language. On the other hand, the Software Fitness Program was written in BASIC, a higher\_level language. There are many different types of computer lan\-guages available for CP/M. Since the CP/M universe was made up in its first years primarily of hackers (computer hobbyists), it has spawned a great number of experimental computer languages, some of which went on to become great commercial products.\par 
}\pard \sl-261 \tx50 \tqr \tx7281 \page \lndscpsxn {\stylesheet {\snext0 Normal;}
{\s2 \tx50 \tx482 \tqr \tx7276 \qj \li939 \fi432 \ri50 \sl258 \sbasedon0 \snext2 OmniPage #2049;}
{\s3 \tx50 \tqr \tx2012 \ql \sl261 \li939 \ri50 \sbasedon0 \snext3 OmniPage #2050;}
{\s4 \tqr \tx7276 \qj \li939 \ri62 \sl261 \sbasedon0 \snext4 OmniPage #2051;}
{\s5 \tx55 \tx491 \tqr \tx7288 \qj \li934 \fi436 \ri50 \sl261 \sbasedon0 \snext5 OmniPage #2052;}
{\s6 \tx54 \tqr \tx7272 \qj \li935 \ri66 \sl255 \sbasedon0 \snext6 OmniPage #2053;}
{\s7 \tx50 \tx486 \tqr \tx7288 \qj \li939 \fi436 \ri50 \sl258 \sbasedon0 \snext7 OmniPage #2054;}
{\s8 \tx55 \tx491 \tqr \tx7274 \qj \li934 \fi436 \ri64 \sl260 \sbasedon0 \snext8 OmniPage #2055;}
{\s9 \tx50 \tqr \tx1568 \ql \sl247 \li939 \ri50 \sbasedon0 \snext9 OmniPage #2056;}
{\s10 \tx51 \tqr \tx7269 \qj \li938 \ri60 \sl260 \sbasedon0 \snext10 OmniPage #2057;}
{\s11 \tx50 \tx481 \tqr \tx7279 \qj \li939 \fi431 \ri50 \sl261 \sbasedon0 \snext11 OmniPage #2058;}
}\par {\pard \posx1647 \posy276 \phpg \pvpg \absh-3138 \absw7327 \dxfrtext200 \fs24 \f0 \pard \s2 \posx1647 \posy276 \phpg \pvpg \absh-3138 \absw7327 \dxfrtext200 \qj \li50 \fi432 \ri50 \sl-258 \tx50 \tx482 \tqr \tx7276 There are dozens of differences between languages, and this book cannot really compare them with any justice. Generally speaking, BASIC is the most popular language today, primarily because it is easy to learn and use, is available in versions for almost all computers, and is interactive in its operation with the user. Pascal and the newer C language are the next most popular. Pascal is a more serious language, and requires more expertise on the part of the user, but also offers in return more flexibility (and sometimes more speed) than BASIC. Pascal has traditionally been used in the schools to teach upper\_division programming. C is slowly gaining ground on Pascal because it offers even faster and more compact code, and because the famous Unix operating system is based on it. Many professional application products are based on the C language.\par 
}\sect \sectd \linex0 \linemod0 \sbknone \lndscpsxn \marglsxn1597 \margrsxn1503 \pard \sl-258 \tx50 \tx482 \tqr \tx7276 {\pard \posx1662 \posy3627 \phpg \pvpg \absh-312 \absw2063 \dxfrtext200 \fs10 \f0 \fs24 \f1 \pard \s3 \posx1662 \posy3627 \phpg \pvpg \absh-312 \absw2063 \dxfrtext200 \li50 \ri50 \sl-261 \tx50 \tqr \tx2012 Microsoft BASIC\par 
}\pard \sl-261 \tx50 \tqr \tx2012 \fs24 \f0 {\pard \posx1651 \posy4023 \phpg \pvpg \absh-7088 \absw7339 \dxfrtext200 \fs10 \f0 \fs24 \f0 \pard \s4 \posx1651 \posy4023 \phpg \pvpg \absh-7088 \absw7339 \dxfrtext200 \qj \li50 \ri62 \sl-261 \tx50 \tqr \tx7276 Microsoft BASIC has a fantastic history in the world of CP/M and the personal computer industry in general. Bill Gates, now C.E.O. of one of the largest software publishers in the industry, and John Allen, his partner, created Microsoft BASIC back in 1975 to run on the world's first real microcomputer, the Altair 8080. At that early date there were no floppy disks (CP/M was about to arrive), and so Gates and Allen got BASIC running using a paper tape reader and loader. When CP/M came out Gates and his partner quickly brought out a disk\_based version of MBASIC.The program instantly caught on, and since that time Microsoft BASIC has become the de facto standard programming language for CP/M.\par 
\fs10 \f0 \fs24 \f0 \pard \s5 \posx1651 \posy4023 \phpg \pvpg \absh-7088 \absw7339 \dxfrtext200 \qj \li55 \fi436 \ri50 \sl-261 \tx55 \tx491 \tqr \tx7288 Microsoft BASIC is available as an interpreter and a compiler. The interpreter, the most popular form, accepts BASIC commands as you type them and executes programs immediately. The compiler form reads BASIC instructions you have created in a text file using an editor, and usually takes a few minutes to tell you if there are any mistakes. The compiler, however, produces much faster code. Frequently programmers try to use the more friendly interpreter version to get the BASIC program working, and then use the compiler to speed it up. Using Microsoft BASIC under CP/M is very easy. In BASIC each instruction is on a "line" and the line is preceded by a line number. You can then control the program contents through a line editor; you can delete a line by typing its number with nothing after it, or insert a new instruction line by typing the number and the BASIC commands after it. You can get a listing of the entire program or just specific lines. Microsoft BASIC has its own built\_in line editor, but you can also create a program using any of the popular word processors, or even CP/M's crude ED.COM editor. In Microsoft BASIC you are given a complete set of built\_in functions, like SIN, LOG, and EXP, as well as\par 
}\pard \sl-261 \tx55 \tx491 \tqr \tx7288 {\pard \posx11269 \posy323 \phpg \pvpg \absh-5210 \absw7339 \dxfrtext200 \fs10 \f0 \fs24 \f0 \pard \s6 \posx11269 \posy323 \phpg \pvpg \absh-5210 \absw7339 \dxfrtext200 \qj \li54 \ri66 \sl-255 \tx54 \tqr \tx7272 the standard operators. The control structures of Microsoft BASIC are not as complete as Pascal \fs24 \f2 \b and C, and you \fs24 \f0 \plain \lang1033 are provided with WHILE\_WEND, IF\_THEN\_ELSE, and FOR\_NEXT.\par 
\fs10 \f0 \fs24 \f0 \pard \s7 \posx11269 \posy323 \phpg \pvpg \absh-5210 \absw7339 \dxfrtext200 \qj \li50 \fi436 \ri50 \sl-258 \tx50 \tx486 \tqr \tx7288 With Microsoft BASIC you can chain programs too large to fit in memory, as well as use either random or sequential files. A fully formatted PRINT USING function is provided for output decimal numbers in precise columns. Error checking is good, and you can write your own custom routines to handle user mistakes. Microsoft BASIC provides an interface to memory with the POKE and PEEK commands. A CALL and USR statement allows you to run Z80 machine language programs from Micro\-soft BASIC. The reference manual for Microsoft BASIC is very good, and dozens of programming books are available that teach you how to use it.\par 
\fs10 \f0 \fs24 \f0 \pard \s8 \posx11269 \posy323 \phpg \pvpg \absh-5210 \absw7339 \dxfrtext200 \qj \li55 \fi436 \ri64 \sl-260 \tx55 \tx491 \tqr \tx7274 Microsoft BASIC for CP/M is not as powerful as BASIC 7.0 on the Commodore 128, but it does offer compatibility with many other ma\-chines. For example, Microsoft BASIC and BASICA are distributed with every IBM PC and are almost identical to CP/M MBASIC. Since the 80\-column color chip in the Commodore 128 has the same capability as the color board in the IBM PC, it is likely that many programs written on the IBM PC under BASIC that work with color will be easy to rewrite to run on the C128.\par 
}\pard \sl-260 \tx55 \tx491 \tqr \tx7274 {\pard \posx11290 \posy5744 \phpg \pvpg \absh-309 \absw1619 \dxfrtext200 \fs10 \f0 \fs24 \f2 \b \pard \s9 \posx11290 \posy5744 \phpg \pvpg \absh-309 \absw1619 \dxfrtext200 \li50 \ri50 \sl-247 \tx50 \tqr \tx1568 Pascal/MT \fs24 \f0 \plain \lang1033 +\par 
}\pard \sl-247 \tx50 \tqr \tx1568 {\pard \posx11274 \posy6136 \phpg \pvpg \absh-4739 \absw7330 \dxfrtext200 \fs10 \f0 \fs24 \f0 \pard \s10 \posx11274 \posy6136 \phpg \pvpg \absh-4739 \absw7330 \dxfrtext200 \qj \li51 \ri60 \sl-260 \tx51 \tqr \tx7269 Aficionados and devotees of the more sophisticated Pascal language will find Pascal/MT+ from Digital Research, the originators of CP/M, tough to beat. Pascal is a compiled language (although of late interpretive Pascals are occurring), and is best known for its "structuring". Pascal is really more in tune with what professional progammers need than a language like BASIC (although also of late BASIC is beginning to shed its toy\_like reputation and more Pascal\_like structured versions are appearing).\par 
\fs10 \f0 \fs24 \f0 \pard \s11 \posx11274 \posy6136 \phpg \pvpg \absh-4739 \absw7330 \dxfrtext200 \qj \li50 \fi431 \ri50 \sl-261 \tx50 \tx481 \tqr \tx7279 Pascal/MT + is one of the fastest and most efficient Pascal languages on the CP/M market. It is fully compatible with another popular Pascal called UCSD Pascal, but it is faster and produces more compact code (less bytes per program). The language allows you to create a large number of program overlays that can be pulled off the disk and affixed in specific memory locations. This allows the Pascal programmer to write much longer programs than would seem possible. Very powerful math process\-ing is provided in this language. Numbers can be as large as 32 bits, and BCD arithmetic for up to 18 digits is provided for computations involving money. (Rounding errors are a real problem with most languages used for business\'97BCD math avoids them at a slight decrease in speed.)\par 
}\pard \sl-261 \tx50 \tx481 \tqr \tx7279 \page \lndscpsxn {\stylesheet {\snext0 Normal;}
{\s2 \tx50 \tx486 \tqr \tx7278 \qj \li939 \fi436 \ri50 \sl257 \sbasedon0 \snext2 OmniPage #2305;}
{\s3 \tx50 \tqr \tx929 \ql \sl253 \li939 \ri50 \sbasedon0 \snext3 OmniPage #2306;}
{\s4 \tx55 \tqr \tx7282 \qj \li934 \ri50 \sl260 \sbasedon0 \snext4 OmniPage #2307;}
{\s5 \tx64 \tx510 \tqr \tx7275 \qj \li925 \fi446 \ri57 \sl259 \sbasedon0 \snext5 OmniPage #2308;}
{\s6 \tx50 \tx496 \tqr \tx7280 \qj \li939 \fi446 \ri52 \sl260 \sbasedon0 \snext6 OmniPage #2309;}
{\s7 \tx50 \tqr \tx7292 \qj \li939 \ri50 \sl255 \sbasedon0 \snext7 OmniPage #2310;}
{\s8 \tx56 \tx487 \tqr \tx7270 \qj \li933 \fi431 \ri72 \sl259 \sbasedon0 \snext8 OmniPage #2311;}
{\s9 \tx50 \tqr \tx1251 \ql \sl297 \li939 \ri50 \sbasedon0 \snext9 OmniPage #2312;}
{\s10 \tqr \tx7272 \qj \li939 \ri50 \sl260 \sbasedon0 \snext10 OmniPage #2313;}
{\s11 \tqr \tx7256 \qj \li939 \ri50 \sl253 \sbasedon0 \snext11 OmniPage #2314;}
{\s12 \tqr \tx7269 \qj \li939 \ri50 \sl261 \sbasedon0 \snext12 OmniPage #2315;}
{\s13 \tqr \tx2009 \ql \sl304 \li939 \ri50 \sbasedon0 \snext13 OmniPage #2316;}
{\s14 \tqr \tx7274 \qj \li939 \ri50 \sl261 \sbasedon0 \snext14 OmniPage #2317;}
}\par {\pard \posx1730 \posy365 \phpg \pvpg \absh-2634 \absw7329 \dxfrtext200 \fs24 \f0 \pard \s2 \posx1730 \posy365 \phpg \pvpg \absh-2634 \absw7329 \dxfrtext200 \qj \li50 \fi436 \ri50 \sl-257 \tx50 \tx486 \tqr \tx7278 There are a lot of additional support utilities provided with Pascal/ MT+, including a complete debugging system, a disassembler, and a linker with Microsoft assembler compatibility for using Pascal/MT + with machine language programs. One of the most beneficial utilities provided is the speed programming package. This is a stripped\_down WordStar\-like editor that has an automatic formatter and syntax checker built in. If you are pretty good at Pascal it will catch almost all your errors. Your file is then given to a special fast compiler that lacks the syntax checking stage. The final version of the Pascal program runs just as fast, but the development of the programming is speeded up by this utility.\par 
}\sect \sectd \linex0 \linemod0 \sbknone \lndscpsxn \marglsxn1667 \margrsxn1483 \pard \sl-257 \tx50 \tx486 \tqr \tx7278 {\pard \posx1745 \posy3200 \phpg \pvpg \absh-315 \absw980 \dxfrtext200 \fs10 \f0 \fs24 \f1 \b \pard \s3 \posx1745 \posy3200 \phpg \pvpg \absh-315 \absw980 \dxfrtext200 \li50 \ri50 \sl-253 \tx50 \tqr \tx929 BDS\_C\par 
}\pard \sl-253 \tx50 \tqr \tx929 \fs24 \f0 {\pard \posx1717 \posy3588 \phpg \pvpg \absh-7616 \absw7333 \dxfrtext200 \fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s4 \posx1717 \posy3588 \phpg \pvpg \absh-7616 \absw7333 \dxfrtext200 \qj \li55 \ri50 \sl-260 \tx55 \tqr \tx7282 C is a programming language whose popularity is on the rise. C was created by Kernighan and Ritchie of Bell Labs to help them write an operating system called Unix. Pascal would not do because it did not produce compact enough code, was too slow, and didn't have a neat interface to the central processing unit (CPU). Although C has not been available on CP/M for very long, its use has blossomed because of its superiority over other languages for developing powerful programs. C is about halfway between Pascal and assembly language in complexity. It is more cryptic looking than Pascal (at least you can make it look that way if you want), and it is, in general, much faster. C was designed because an operating system is a very complex piece of software that must be fast when used. Writing it in machine language may appear the best approach at first, but when the size of the program becomes huge enough, assembly language becomes unwieldy and uncontrollable. C is well\_structured like Pascal so it can look clear, while it also allows speed\_sensitive parts to be easily interfaced in machine language.\par 
\fs10 \f0 \fs24 \f0 \pard \s5 \posx1717 \posy3588 \phpg \pvpg \absh-7616 \absw7333 \dxfrtext200 \qj \li64 \fi446 \ri57 \sl-259 \tx64 \tx510 \tqr \tx7275 Some excellent applications programs for CP/M were written in BDS\_C, including the Mince text editor (from Mark of the Unicorn) and the PeachText word processor (from PeachTree).\par 
\fs10 \f0 \fs24 \f0 \pard \s6 \posx1717 \posy3588 \phpg \pvpg \absh-7616 \absw7333 \dxfrtext200 \qj \li50 \fi446 \ri52 \sl-260 \tx50 \tx496 \tqr \tx7280 BDS\_C was the first version of C on the market for CP/M. It has evolved over the years into a very bug\_free product preferred by many users. The language is not as complete as the one described by Kernighan and Rit\-chie's The C Programming Language (Prentice\_Hall, 1978), but it does contain a large subset of the important features. One of BDS\_C's best features is that it consumes very little memory for even the largest of programs. The language supports a feature called pointers, which is very important to C. The floating point math routines are incompatible with those of Unix C. The compilation speed of programs written in BDS\_C is amazingly fast compared to languages like Pascal, sometimes taking mere\par 
}\pard \sl-260 \tx50 \tx496 \tqr \tx7280 {\pard \posx11272 \posy388 \phpg \pvpg \absh-1855 \absw7343 \dxfrtext200 \fs10 \f0 \fs24 \f0 \pard \s7 \posx11272 \posy388 \phpg \pvpg \absh-1855 \absw7343 \dxfrtext200 \qj \li50 \ri50 \sl-255 \tx50 \tqr \tx7292 seconds when in Pascal the same program might take several minutes. The BDS\_C compiler is easy to use because it does not need a lot of complex linkages to run. You compile the program and then link it, and it is ready to run.\par 
\fs10 \f0 \fs24 \f0 \pard \s8 \posx11272 \posy388 \phpg \pvpg \absh-1855 \absw7343 \dxfrtext200 \qj \li56 \fi431 \ri72 \sl-259 \tx56 \tx487 \tqr \tx7270 BDS\_C's only weak point is that the relocatable files created by the compiler are not compatible with the Microsoft assembler, so linking to machine language is more difficult.\par 
}\pard \sl-259 \tx56 \tx487 \tqr \tx7270 {\pard \posx11317 \posy2565 \phpg \pvpg \absh-354 \absw1302 \dxfrtext200 \fs10 \f0 \fs27 \f2 \i \pard \s9 \posx11317 \posy2565 \phpg \pvpg \absh-354 \absw1302 \dxfrtext200 \li50 \ri50 \sl-297 \tx50 \tqr \tx1251 UtiliNes\par 
}\pard \sl-297 \tx50 \tqr \tx1251 \fs24 \f0 {\pard \posx11282 \posy2963 \phpg \pvpg \absh-1879 \absw7323 \dxfrtext200 \fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s10 \posx11282 \posy2963 \phpg \pvpg \absh-1879 \absw7323 \dxfrtext200 \qj \li50 \ri50 \sl-260 \tx50 \tqr \tx7272 A galaxy of programs falls into the utilities category. Utilities are aids that help you work within the CP/M environment. Utilities are also pro\-grams that integrate other applications, give you desk accessory programs that can be called up as needed, like calendars and notepads, or provide tools that make programming CP/M easier. Some of the most popular utility programs provide an interface and set of commands that make CP/M easier to harness.\par 
}\pard \sl-260 \tx50 \tqr \tx7272 {\pard \posx11300 \posy5039 \phpg \pvpg \absh-315 \absw7307 \dxfrtext200 \fs10 \f0 \fs24 \f1 \b \pard \s11 \posx11300 \posy5039 \phpg \pvpg \absh-315 \absw7307 \dxfrtext200 \qj \li50 \ri50 \sl-253 \tx50 \tqr \tx7256 Power!\par 
}\pard \sl-253 \tx50 \tqr \tx7256 \fs24 \f0 {\pard \posx11300 \posy5422 \phpg \pvpg \absh-3708 \absw7320 \dxfrtext200 \fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s12 \posx11300 \posy5422 \phpg \pvpg \absh-3708 \absw7320 \dxfrtext200 \qj \li50 \ri50 \sl-261 \tx50 \tqr \tx7269 Power!, from Computing! in San Francisco, is a program that Digital Research should have provided. It is a set of utilities that take over where PIP, TYPE, ERASE, and RENAME fear to tread. To run Power!, you simply type its name and it installs itself inside your CP/M, then sits there like your slave. The most useful Power! command is COPY. When you do a DIR with Power! it displays a number before every file. If you then want to copy selected files, you can say COPY 1\_3 7 13 and only files 1 through 3, 7, and 13 will be copied. ERASE works the same way. There are also utilities for checking if there are any bad sectors on your diskette and unerasing files you accidentally erased. Power! uses a friendly menu\_like front end that is good for beginners to learn with. There is also a powerful debugging system for programmers that allows you to read sectors on the disk or memory contents. Several of the ideas for utilities in Power! can be found in various programs in the public domain (see next section).\par 
}\pard \sl-261 \tx50 \tqr \tx7269 {\pard \posx11304 \posy9428 \phpg \pvpg \absh-384 \absw2060 \dxfrtext200 \fs10 \f0 \fs28 \f3 \i \b \pard \s13 \posx11304 \posy9428 \phpg \pvpg \absh-384 \absw2060 \dxfrtext200 \li50 \ri50 \sl-304 \tx50 \tqr \tx2009 Entertainment\par 
}\pard \sl-304 \tx50 \tqr \tx2009 \fs24 \f0 {\pard \posx11303 \posy9854 \phpg \pvpg \absh-1359 \absw7325 \dxfrtext200 \fs10 \f0 \fs24 \f0 \plain \lang1033 \plain \lang1033 \pard \s14 \posx11303 \posy9854 \phpg \pvpg \absh-1359 \absw7325 \dxfrtext200 \qj \li50 \ri50 \sl-261 \tx50 \tqr \tx7274 Entertainment programs in CP/M are somewhat lacking due to the nature of the user interface. This is because to keep a CP/M program truly generic it can't do anything beyond placing text characters in different places on a screen. There is no color or sound in standard CP/M. This has not stopped games from being developed, just held back the sophistication,\par 
}\pard \sl-261 \tx50 \tqr \tx7274 }