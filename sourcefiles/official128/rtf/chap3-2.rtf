{\rtf1\ansi \deff0 {\fonttbl {\f0\froman Times New Roman;}
{\f1\froman Times New Roman;}{\f2\froman Times New Roman;}{\f3\froman Arial;}{\f4\froman Arial;}{\f5\froman Arial;}
{\f6\fmodern MS LineDraw;}{\f7\fdecor Symbol;}}
{\colortbl;\red0\green0\blue0;\red0\green0\blue127;\red0\green127\blue0;\red0\green127\blue127;\red127\green0\blue0;\red127\green0\blue127;\red127\green127\blue0;\red127\green127\blue127;\red63\green63\blue63;\red0\green0\blue255;\red0\green255\blue0;\red0\green255\blue255;\red255\green0\blue0;\red255\green0\blue255;\red255\green255\blue0;\red255\green255\blue255;}\linex0 \sbknone 
\paperh12240 \paperw20160 \margl1718 \margr1584 \margt112 \margb1291 \plain \lang1033 \lndscpsxn {\stylesheet {\snext0 Normal;}
{\s2 \tx50 \tqr \tx7264 \qj \li1668 \ri50 \sl250 \sbasedon0 \snext2 OmniPage #1;}
{\s3 \tqr \tx3438 \ql \sl240 \li1668 \ri50 \sbasedon0 \snext3 OmniPage #2;}
{\s4 \tqr \tx7278 \qj \li1668 \ri50 \sl261 \sbasedon0 \snext4 OmniPage #3;}
{\s5 \tqr \tx4055 \qc \sl240 \sbasedon0 \snext5 OmniPage #4;}
{\s6 \tqr \tx1104 \ql \sl240 \li1668 \ri50 \sbasedon0 \snext6 OmniPage #5;}
{\s7 \tqr \tx955 \ql \sl240 \li1668 \ri50 \sbasedon0 \snext7 OmniPage #6;}
{\s8 \tx54 \tqr \tx4780 \ql \sl240 \li1664 \ri1911 \sbasedon0 \snext8 OmniPage #7;}
{\s9 \tx50 \tx100 \tx1970 \tqr \tx6641 \ql \sl239 \li1668 \ri50 \sbasedon0 \snext9 OmniPage #8;}
{\s10 \tqr \tx4190 \ql \sl240 \li1668 \ri50 \sbasedon0 \snext10 OmniPage #9;}
{\s11 \tqr \tx1104 \ql \sl240 \li1668 \ri50 \sbasedon0 \snext11 OmniPage #10;}
{\s12 \tqr \tx955 \ql \sl240 \li1668 \ri50 \sbasedon0 \snext12 OmniPage #11;}
{\s13 \tx100 \tx1907 \tqr \tx5881 \ql \sl241 \li1668 \ri50 \sbasedon0 \snext13 OmniPage #12;}
{\s14 \tqr \tx7288 \qj \li1668 \ri50 \sl255 \sbasedon0 \snext14 OmniPage #13;}
{\s15 \tx68 \tqr \tx3567 \ql \sl268 \li1650 \ri3756 \sbasedon0 \snext15 OmniPage #14;}
{\s16 \tx50 \tqr \tx7273 \qj \li1668 \ri50 \sl258 \sbasedon0 \snext16 OmniPage #15;}
{\s17 \tqr \tx3914 \qc \sl240 \sbasedon0 \snext17 OmniPage #16;}
{\s18 \tqr \tx1109 \ql \sl240 \li1668 \ri50 \sbasedon0 \snext18 OmniPage #17;}
{\s19 \tqr \tx955 \ql \sl240 \li1668 \ri50 \sbasedon0 \snext19 OmniPage #18;}
{\s20 \tqr \tx748 \ql \sl240 \li1668 \ri50 \sbasedon0 \snext20 OmniPage #19;}
{\s21 \tqr \tx5425 \ql \sl242 \li1668 \ri50 \sbasedon0 \snext21 OmniPage #20;}
{\s22 \tqr \tx5724 \ql \sl240 \li1668 \ri50 \sbasedon0 \snext22 OmniPage #21;}
{\s23 \tqr \tx1105 \ql \sl240 \li1668 \ri50 \sbasedon0 \snext23 OmniPage #22;}
{\s24 \tqr \tx955 \ql \sl240 \li1668 \ri50 \sbasedon0 \snext24 OmniPage #23;}
{\s25 \tx100 \tx1266 \tqr \tx6594 \ql \sl240 \li1668 \ri50 \sbasedon0 \snext25 OmniPage #24;}
}{\pard \posx1768 \posy234 \phpg \pvpg \absh-807 \absw7315 \dxfrtext200 \fs23 \f0 \pard \s2 \posx1768 \posy234 \phpg \pvpg \absh-807 \absw7315 \dxfrtext200 \qj \li50 \ri50 \sl-250 \tx50 \tqr \tx7264 a particular bit in a specific memory location to change. It is mostly used to monitor the status of bits in input/output registers, such as sprite registers.\par 
}\linex0 \linemod0 \sbknone \lndscpsxn \pard \sl-250 \tx50 \tqr \tx7264 \fs24 \f0 {\pard \posx1781 \posy1242 \phpg \pvpg \absh-311 \absw3489 \dxfrtext200 \fs10 \f0 \fs23 \f1 \b \pard \s3 \posx1781 \posy1242 \phpg \pvpg \absh-311 \absw3489 \dxfrtext200 \li50 \ri50 \tx50 \tqr \tx3438 Machine and Memory Control\par 
}\pard \tx50 \tqr \tx3438 \fs24 \f0 {\pard \posx1770 \posy1630 \phpg \pvpg \absh-3179 \absw7329 \dxfrtext200 \fs10 \f0 \fs23 \f0 \plain \fs23 \lang1033 \pard \s4 \posx1770 \posy1630 \phpg \pvpg \absh-3179 \absw7329 \dxfrtext200 \qj \li50 \ri50 \sl-261 \tx50 \tqr \tx7278 As shown in Table 3\_9, there are several useful statements for controlling the memory of the C128, including PEEK (which reads the contents of a memory location) and POKE (which places an integer between 0 and 255 in a memory location). The SYS statement performs a call (like a GOSUB) to a machine language subroutine at a certain address. It can also option\-ally load the arguments a, x, y, and s into the accumulator, x\_register, y\_register, and stack register of the 8502 microprocessor. The address range of SYS is 0 to 65535 so the high bank of the 128K memory must be accessed indirectly with SYS. USR is another function that allows you access to a machine language subroutine. Unlike SYS, USR requires that you poke the starting address of the machine language routine into two specific memory locations (1281 and 1282). USR can also pass a parameter\par 
}\pard \sl-261 \tx50 \tqr \tx7278 \fs24 \f0 {\pard \posx3432 \posy5652 \phpg \pvpg \absh-314 \absw4106 \dxfrtext200 \fs10 \f0 \fs23 \f1 \b \pard \s5 \posx3432 \posy5652 \phpg \pvpg \absh-314 \absw4106 \dxfrtext200 \qc \tx50 \tqr \tx4055 Table \fs23 \f0 \plain \fs23 \lang1033 3\_7. \fs23 \f1 \b BASIC Looping Statements\par 
}\pard \tx50 \tqr \tx4055 \fs24 \f0 {\pard \posx2541 \posy6211 \phpg \pvpg \absh-306 \absw1155 \dxfrtext200 \fs10 \f0 \fs23 \f0 \plain \fs23 \lang1033 \pard \s6 \posx2541 \posy6211 \phpg \pvpg \absh-306 \absw1155 \dxfrtext200 \li50 \ri50 \tx50 \tqr \tx1104 Statement\par 
}\pard \tx50 \tqr \tx1104 \fs24 \f0 {\pard \posx5972 \posy6205 \phpg \pvpg \absh-306 \absw1006 \dxfrtext200 \fs10 \f0 \fs23 \f0 \pard \s7 \posx5972 \posy6205 \phpg \pvpg \absh-306 \absw1006 \dxfrtext200 \li50 \ri50 \tx50 \tqr \tx955 Purpose\par 
}\pard \tx50 \tqr \tx955 \fs24 \f0 {\pard \posx2147 \posy6687 \phpg \pvpg \absh-1509 \absw6692 \dxfrtext200 \fs10 \f0 \fs23 \f0 \pard \s8 \posx2147 \posy6687 \phpg \pvpg \absh-1509 \absw6692 \dxfrtext200 \li54 \ri1911 \tx54 \tqr \tx4780 FOR...NEXT STEP Loops a fixed number of times\par 
\fs10 \f0 \fs23 \f0 \pard \s9 \posx2147 \posy6687 \phpg \pvpg \absh-1509 \absw6692 \dxfrtext200 \li50 \ri50 \sl-239 \tx50 \tx100 \tx1970 \tqr \tx6641 \tab GOSUB/RETURN\tab Used for branching and returning from subroutines\par 
\pard \s9 \posx2147 \posy6687 \phpg \pvpg \absh-1509 \absw6692 \dxfrtext200 \li50 \ri50 \sl-239 \tx50 \tx100 \tx1970 \tqr \tx6641 \tab GOTO\tab Forces direct jump to a program line number\par 
\pard \s9 \posx2147 \posy6687 \phpg \pvpg \absh-1509 \absw6692 \dxfrtext200 \li50 \ri50 \sl-239 \tx50 \tx100 \tx1970 \tqr \tx6641 \tab ONGOSUB\tab Indexed GOSUB\par 
\pard \s9 \posx2147 \posy6687 \phpg \pvpg \absh-1509 \absw6692 \dxfrtext200 \li50 \ri50 \sl-239 \tx50 \tx100 \tx1970 \tqr \tx6641 \tab ONGOTO\tab Indexed GOTO\par 
\pard \s9 \posx2147 \posy6687 \phpg \pvpg \absh-1509 \absw6692 \dxfrtext200 \li50 \ri50 \sl-239 \tx50 \tx100 \tx1970 \tqr \tx6641 \tab RETURN\tab Return from subroutine\par 
}\pard \sl-239 \tx50 \tx100 \tx1970 \tqr \tx6641 \fs24 \f0 {\pard \posx3377 \posy9025 \phpg \pvpg \absh-311 \absw4241 \dxfrtext200 \fs10 \f0 \fs23 \f1 \b \pard \s10 \posx3377 \posy9025 \phpg \pvpg \absh-311 \absw4241 \dxfrtext200 \li50 \ri50 \tx50 \tqr \tx4190 Table 3\_8. Program Control Statements\par 
}\pard \tx50 \tqr \tx4190 \fs24 \f0 {\pard \posx2517 \posy9560 \phpg \pvpg \absh-306 \absw1155 \dxfrtext200 \fs10 \f0 \fs23 \f0 \plain \fs23 \lang1033 \pard \s11 \posx2517 \posy9560 \phpg \pvpg \absh-306 \absw1155 \dxfrtext200 \li50 \ri50 \tx50 \tqr \tx1104 Statement\par 
}\pard \tx50 \tqr \tx1104 \fs24 \f0 {\pard \posx5934 \posy9554 \phpg \pvpg \absh-306 \absw1006 \dxfrtext200 \fs10 \f0 \fs23 \f0 \pard \s12 \posx5934 \posy9554 \phpg \pvpg \absh-306 \absw1006 \dxfrtext200 \li50 \ri50 \tx50 \tqr \tx955 Purpose\par 
}\pard \tx50 \tqr \tx955 \fs24 \f0 {\pard \posx2513 \posy10036 \phpg \pvpg \absh-788 \absw5932 \dxfrtext200 \fs10 \f0 \fs23 \f0 \pard \s13 \posx2513 \posy10036 \phpg \pvpg \absh-788 \absw5932 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tx100 \tx1907 \tqr \tx5881 \tab END\tab End program execution\par 
\pard \s13 \posx2513 \posy10036 \phpg \pvpg \absh-788 \absw5932 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tx100 \tx1907 \tqr \tx5881 \tab RESUME\tab Resume program execution at a certain line\par 
\pard \s13 \posx2513 \posy10036 \phpg \pvpg \absh-788 \absw5932 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tx100 \tx1907 \tqr \tx5881 \tab WAIT\tab Wait for a memory location to change\par 
}\pard \sl-241 \tx50 \tx100 \tx1907 \tqr \tx5881 \fs24 \f0 {\pard \posx11188 \posy220 \phpg \pvpg \absh-569 \absw7339 \dxfrtext200 \fs10 \f0 \fs23 \f0 \pard \s14 \posx11188 \posy220 \phpg \pvpg \absh-569 \absw7339 \dxfrtext200 \qj \li50 \ri50 \sl-255 \tx50 \tqr \tx7288 (a variable value) \fs23 \f1 \b from BASIC to that routine \fs23 \f0 \plain \fs23 \lang1033 and from that \fs23 \f1 \b routine back \fs23 \f0 \plain \fs23 \lang1033 to BASIC. SYS will not allow you to pass this type of two\_way parameter.\par 
}\pard \sl-255 \tx50 \tqr \tx7288 \fs24 \f0 {\pard \posx11176 \posy986 \phpg \pvpg \absh-3023 \absw7324 \dxfrtext200 \fs10 \f0 \fs25 \f2 \b \pard \s15 \posx11176 \posy986 \phpg \pvpg \absh-3023 \absw7324 \dxfrtext200 \li68 \ri3756 \sl-268 \tx68 \tqr \tx3567 Input/Output and Data Control\par 
\fs10 \f0 \fs23 \f0 \plain \fs23 \lang1033 \pard \s16 \posx11176 \posy986 \phpg \pvpg \absh-3023 \absw7324 \dxfrtext200 \qj \li50 \ri50 \sl-258 \tx50 \tqr \tx7273 Both BASIC 7.0 and BASIC 2.0, as shown in \fs23 \f1 \b Table \fs23 \f0 \plain \fs23 \lang1033 3\_10, provide numerous statements for controlling the input and output of information, as well as the storing of information and data within the program. The INPUT and GET statements are used to get information typed at the keyboard into variables (string or numeric) in a program. \fs23 \f1 \b The I \fs18 \f3 \ul Return \fs18 \f4 \plain \b \fs18 \f4 \lang1033 \plain \fs18 \f4 \lang1033 I \fs23 \f0 key must always be pressed to terminate anything typed in response to the INPUT state\-ment. The GET statement (used only with string variables) does not need a \fs18 \f5 \b I \fs18 \f3 \ul Retum \fs18 \f4 \plain \b \fs18 \f4 \lang1033 \plain \fs18 \f4 \lang1033 I \fs23 \f0 as it simply reads the keyboard for its current status and returns whatever key value (including none) that it received to its variable. IN\-PUT# and GET# are two variations of INPUT and GET that are used to\par 
}\pard \sl-258 \tx50 \tqr \tx7273 \fs24 \f0 {\pard \posx12897 \posy4660 \phpg \pvpg \absh-314 \absw3965 \dxfrtext200 \fs10 \f0 \fs23 \f1 \b \pard \s17 \posx12897 \posy4660 \phpg \pvpg \absh-314 \absw3965 \dxfrtext200 \qc \tx50 \tqr \tx3914 Table \fs23 \f0 \plain \fs23 \lang1033 3\_9. \fs23 \f1 \b Machine/Memory Control\par 
}\pard \tx50 \tqr \tx3914 \fs24 \f0 {\pard \posx11572 \posy5195 \phpg \pvpg \absh-306 \absw1160 \dxfrtext200 \fs10 \f0 \fs23 \f0 \plain \fs23 \lang1033 \pard \s18 \posx11572 \posy5195 \phpg \pvpg \absh-306 \absw1160 \dxfrtext200 \li50 \ri50 \tx50 \tqr \tx1109 Statement\par 
}\pard \tx50 \tqr \tx1109 \fs24 \f0 {\pard \posx15003 \posy5189 \phpg \pvpg \absh-306 \absw1006 \dxfrtext200 \fs10 \f0 \fs23 \f0 \pard \s19 \posx15003 \posy5189 \phpg \pvpg \absh-306 \absw1006 \dxfrtext200 \li50 \ri50 \tx50 \tqr \tx955 Purpose\par 
}\pard \tx50 \tqr \tx955 \fs24 \f0 {\pard \posx11746 \posy5675 \phpg \pvpg \absh-1028 \absw799 \dxfrtext200 \fs10 \f0 \fs23 \f0 \pard \s20 \posx11746 \posy5675 \phpg \pvpg \absh-1028 \absw799 \dxfrtext200 \li50 \ri50 \tx50 \tqr \tx748 PEEK\par 
\pard \s20 \posx11746 \posy5675 \phpg \pvpg \absh-1028 \absw799 \dxfrtext200 \li50 \ri50 \tx50 \tqr \tx748 POKE\par 
\pard \s20 \posx11746 \posy5675 \phpg \pvpg \absh-1028 \absw799 \dxfrtext200 \li50 \ri50 \tx50 \tqr \tx748 SYS\par 
\pard \s20 \posx11746 \posy5675 \phpg \pvpg \absh-1028 \absw799 \dxfrtext200 \li50 \ri50 \tx50 \tqr \tx748 USR\par 
}\pard \tx50 \tqr \tx748 \fs24 \f0 {\pard \posx12742 \posy5674 \phpg \pvpg \absh-1032 \absw5476 \dxfrtext200 \fs10 \f0 \fs23 \f0 \pard \s21 \posx12742 \posy5674 \phpg \pvpg \absh-1032 \absw5476 \dxfrtext200 \li50 \ri50 \sl-242 \tx50 \tqr \tx5425 Returns contents of memory location\par 
\pard \s21 \posx12742 \posy5674 \phpg \pvpg \absh-1032 \absw5476 \dxfrtext200 \li50 \ri50 \sl-242 \tx50 \tqr \tx5425 Places a value in a memory location\par 
\pard \s21 \posx12742 \posy5674 \phpg \pvpg \absh-1032 \absw5476 \dxfrtext200 \li50 \ri50 \sl-242 \tx50 \tqr \tx5425 Calls a machine language subroutine and loads registers\par 
\pard \s21 \posx12742 \posy5674 \phpg \pvpg \absh-1032 \absw5476 \dxfrtext200 \li50 \ri50 \sl-242 \tx50 \tqr \tx5425 Calls a machine language subroutine and passes parameter\par 
}\pard \sl-242 \tx50 \tqr \tx5425 \fs24 \f0 {\pard \posx12009 \posy7553 \phpg \pvpg \absh-311 \absw5775 \dxfrtext200 \fs10 \f0 \fs23 \f1 \b \pard \s22 \posx12009 \posy7553 \phpg \pvpg \absh-311 \absw5775 \dxfrtext200 \li50 \ri50 \tx50 \tqr \tx5724 Table 3\_10. Input/Output and Data Control Statements\par 
}\pard \tx50 \tqr \tx5724 \fs24 \f0 {\pard \posx11581 \posy8096 \phpg \pvpg \absh-306 \absw1156 \dxfrtext200 \fs10 \f0 \fs23 \f0 \plain \fs23 \lang1033 \pard \s23 \posx11581 \posy8096 \phpg \pvpg \absh-306 \absw1156 \dxfrtext200 \li50 \ri50 \tx50 \tqr \tx1105 Statement\par 
}\pard \tx50 \tqr \tx1105 \fs24 \f0 {\pard \posx15013 \posy8095 \phpg \pvpg \absh-306 \absw1006 \dxfrtext200 \fs10 \f0 \fs23 \f0 \pard \s24 \posx15013 \posy8095 \phpg \pvpg \absh-306 \absw1006 \dxfrtext200 \li50 \ri50 \tx50 \tqr \tx955 Purpose\par 
}\pard \tx50 \tqr \tx955 \fs24 \f0 {\pard \posx11564 \posy8578 \phpg \pvpg \absh-2231 \absw6645 \dxfrtext200 \fs10 \f0 \fs23 \f0 \pard \s25 \posx11564 \posy8578 \phpg \pvpg \absh-2231 \absw6645 \dxfrtext200 \li50 \ri50 \tx50 \tx100 \tx1266 \tqr \tx6594 \tab GET\tab Allows inputting a keyboard character without ~ Return\par 
\pard \s25 \posx11564 \posy8578 \phpg \pvpg \absh-2231 \absw6645 \dxfrtext200 \li50 \ri50 \tx50 \tx100 \tx1266 \tqr \tx6594 \tab GET#\tab Single character inputting from any legal input device\par 
\pard \s25 \posx11564 \posy8578 \phpg \pvpg \absh-2231 \absw6645 \dxfrtext200 \li50 \ri50 \tx50 \tx100 \tx1266 \tqr \tx6594 \tab INPUT\tab Inputs a string or number from the keyboard\par 
\pard \s25 \posx11564 \posy8578 \phpg \pvpg \absh-2231 \absw6645 \dxfrtext200 \li50 \ri50 \tx50 \tx100 \tx1266 \tqr \tx6594 \tab INPUT#\tab Inputs a string or number from any legal input device\par 
\pard \s25 \posx11564 \posy8578 \phpg \pvpg \absh-2231 \absw6645 \dxfrtext200 \li50 \ri50 \tx50 \tx100 \tx1266 \tqr \tx6594 \tab PRINT\tab Displays a string or number on the screen\par 
\pard \s25 \posx11564 \posy8578 \phpg \pvpg \absh-2231 \absw6645 \dxfrtext200 \li50 \ri50 \tx50 \tx100 \tx1266 \tqr \tx6594 \tab PRINT#\tab Displays a string or number to any legal output device\par 
\pard \s25 \posx11564 \posy8578 \phpg \pvpg \absh-2231 \absw6645 \dxfrtext200 \li50 \ri50 \tx50 \tx100 \tx1266 \tqr \tx6594 \tab DATA\tab Holds a list of numbers or strings\par 
\pard \s25 \posx11564 \posy8578 \phpg \pvpg \absh-2231 \absw6645 \dxfrtext200 \li50 \ri50 \tx50 \tx100 \tx1266 \tqr \tx6594 \tab READ\tab Reads numbers or strings in data statements into variables\par 
\pard \s25 \posx11564 \posy8578 \phpg \pvpg \absh-2231 \absw6645 \dxfrtext200 \li50 \ri50 \tx50 \tx100 \tx1266 \tqr \tx6594 \tab RESTORE\tab Resets the DATA/READ pointer\par 
}\pard \tx50 \tx100 \tx1266 \tqr \tx6594 \fs24 \f0 \page \lndscpsxn {\stylesheet {\snext0 Normal;}
{\s2 \tx50 \tqr \tx7286 \qj \li1668 \ri50 \sl254 \sbasedon0 \snext2 OmniPage #257;}
{\s3 \tqr \tx1282 \ql \sl261 \li1668 \ri50 \sbasedon0 \snext3 OmniPage #258;}
{\s4 \tqr \tx7276 \qj \li1668 \ri50 \sl261 \sbasedon0 \snext4 OmniPage #259;}
{\s5 \tx52 \tx487 \tqr \tx7275 \qj \li1666 \fi435 \ri51 \sl262 \sbasedon0 \snext5 OmniPage #260;}
{\s6 \tx50 \tqr \tx3199 \qc \sl240 \sbasedon0 \snext6 OmniPage #261;}
{\s7 \tx50 \tqr \tx1104 \ql \sl240 \li1668 \ri50 \sbasedon0 \snext7 OmniPage #262;}
{\s8 \tqr \tx955 \ql \sl240 \li1668 \ri50 \sbasedon0 \snext8 OmniPage #263;}
{\s9 \tx100 \tx1118 \tqr \tx6440 \ql \sl240 \li1668 \ri50 \sbasedon0 \snext9 OmniPage #264;}
{\s10 \tqr \tx4417 \ql \sl304 \li1668 \ri50 \sbasedon0 \snext10 OmniPage #265;}
{\s11 \tqr \tx7272 \qj \li1668 \ri50 \sl258 \sbasedon0 \snext11 OmniPage #266;}
{\s12 \tqr \tx5659 \ql \sl261 \li1668 \ri50 \sbasedon0 \snext12 OmniPage #267;}
{\s13 \tqr \tx7269 \qj \li1668 \ri50 \sl264 \sbasedon0 \snext13 OmniPage #268;}
{\s14 \tqr \tx4634 \qc \sl261 \sbasedon0 \snext14 OmniPage #269;}
{\s15 \tqr \tx1105 \ql \sl240 \li1668 \ri50 \sbasedon0 \snext15 OmniPage #270;}
{\s16 \tqr \tx955 \ql \sl240 \li1668 \ri50 \sbasedon0 \snext16 OmniPage #271;}
{\s17 \tx100 \tx1608 \tqr \tx6379 \ql \sl241 \li1668 \ri50 \sbasedon0 \snext17 OmniPage #272;}
}\par {\pard \posx1783 \posy272 \phpg \pvpg \absh-1840 \absw7337 \dxfrtext200 \fs22 \f0 \b \pard \s2 \posx1783 \posy272 \phpg \pvpg \absh-1840 \absw7337 \dxfrtext200 \qj \li50 \ri50 \sl-254 \tx50 \tqr \tx7286 read from any file structured input devices like the Datasette \fs22 \f1 \plain \fs22 \f1 \lang1033 disk drive, \fs22 \f0 \b modem, and even the keyboard. PRINT is the statement \fs22 \f1 \plain \fs22 \f1 \lang1033 used to output information to the display. PRINT# is used to output information to any file structured output device. CMD is a redirection command that allows you to redefine the default output device. DATA is used to store a list of constants, numbers or letters, in a program in an easy\_to\_read format. READ is used to assign these constants in the DATA statements to variables.\par 
}\sect \sectd \linex0 \linemod0 \sbknone \lndscpsxn \marglsxn1731 \margrsxn1500 \pard \sl-254 \tx50 \tqr \tx7286 \fs24 \f0 {\pard \posx1795 \posy2318 \phpg \pvpg \absh-312 \absw1333 \dxfrtext200 \fs10 \f0 \fs24 \f2 \b \pard \s3 \posx1795 \posy2318 \phpg \pvpg \absh-312 \absw1333 \dxfrtext200 \li50 \ri50 \sl-261 \tx50 \tqr \tx1282 Functions\par 
}\pard \sl-261 \tx50 \tqr \tx1282 \fs24 \f0 {\pard \posx1781 \posy2706 \phpg \pvpg \absh-2135 \absw7327 \dxfrtext200 \fs10 \f0 \fs22 \f1 \plain \fs22 \f1 \lang1033 \pard \s4 \posx1781 \posy2706 \phpg \pvpg \absh-2135 \absw7327 \dxfrtext200 \qj \li50 \ri50 \sl-261 \tx50 \tqr \tx7276 Functions perform operations on numbers, strings, output devices, and memory. Table 3\_11 shows that BASIC 7.0 and BASIC 2.0 contain a large number of these functions. The functions are used for obtaining the SIN or COS of a number, converting a string to a number, or vice versa, and so on. It also tells if a joystick fire button has been pressed.\par 
\fs10 \f0 \fs22 \f1 \pard \s5 \posx1781 \posy2706 \phpg \pvpg \absh-2135 \absw7327 \dxfrtext200 \qj \li52 \fi435 \ri51 \sl-262 \tx52 \tx487 \tqr \tx7275 This completes the description of the BASIC statements and keywords common to both BASIC 7.0 and BASIC 2.0. In the next section we will examine those enhanced keywords that are particular to BASIC 7.0.\par 
}\pard \sl-262 \tx52 \tx487 \tqr \tx7275 \fs24 \f0 {\pard \posx3872 \posy5920 \phpg \pvpg \absh-311 \absw3250 \dxfrtext200 \fs10 \f0 \fs22 \f0 \b \pard \s6 \posx3872 \posy5920 \phpg \pvpg \absh-311 \absw3250 \dxfrtext200 \qc \tx50 \tqr \tx3199 Table 3\_11. BASIC Functions\par 
}\pard \tx50 \tqr \tx3199 \fs24 \f0 {\pard \posx2205 \posy6474 \phpg \pvpg \absh-306 \absw1155 \dxfrtext200 \fs10 \f0 \fs22 \f1 \plain \fs22 \f1 \lang1033 \pard \s7 \posx2205 \posy6474 \phpg \pvpg \absh-306 \absw1155 \dxfrtext200 \li50 \ri50 \tx50 \tqr \tx1104 Statement\par 
}\pard \tx50 \tqr \tx1104 \fs24 \f0 {\pard \posx5623 \posy6467 \phpg \pvpg \absh-306 \absw1006 \dxfrtext200 \fs10 \f0 \fs22 \f1 \pard \s8 \posx5623 \posy6467 \phpg \pvpg \absh-306 \absw1006 \dxfrtext200 \li50 \ri50 \tx50 \tqr \tx955 Purpose\par 
}\pard \tx50 \tqr \tx955 \fs24 \f0 {\pard \posx2343 \posy6955 \phpg \pvpg \absh-3920 \absw6491 \dxfrtext200 \fs10 \f0 \fs22 \f1 \pard \s9 \posx2343 \posy6955 \phpg \pvpg \absh-3920 \absw6491 \dxfrtext200 \li50 \ri50 \tx50 \tx100 \tx1118 \tqr \tx6440 \tab FRE\tab Tells how much memory space is left\par 
\pard \s9 \posx2343 \posy6955 \phpg \pvpg \absh-3920 \absw6491 \dxfrtext200 \li50 \ri50 \tx50 \tx100 \tx1118 \tqr \tx6440 \tab ASC\tab Returns the ASCII value of a string\par 
\pard \s9 \posx2343 \posy6955 \phpg \pvpg \absh-3920 \absw6491 \dxfrtext200 \li50 \ri50 \tx50 \tx100 \tx1118 \tqr \tx6440 \tab CHR$\tab Converts number to ASCII character\par 
\pard \s9 \posx2343 \posy6955 \phpg \pvpg \absh-3920 \absw6491 \dxfrtext200 \li50 \ri50 \tx50 \tx100 \tx1118 \tqr \tx6440 \tab INSTR\tab Locates and returns a substring in another string\par 
\pard \s9 \posx2343 \posy6955 \phpg \pvpg \absh-3920 \absw6491 \dxfrtext200 \li50 \ri50 \tx50 \tx100 \tx1118 \tqr \tx6440 \tab LEFT$\tab Returns the left N characters of a string\par 
\pard \s9 \posx2343 \posy6955 \phpg \pvpg \absh-3920 \absw6491 \dxfrtext200 \li50 \ri50 \tx50 \tx100 \tx1118 \tqr \tx6440 \tab LEN\tab Returns the length of a string\par 
\pard \s9 \posx2343 \posy6955 \phpg \pvpg \absh-3920 \absw6491 \dxfrtext200 \li50 \ri50 \tx50 \tx100 \tx1118 \tqr \tx6440 \tab MID$\tab Returns the middle N characters of a string\par 
\pard \s9 \posx2343 \posy6955 \phpg \pvpg \absh-3920 \absw6491 \dxfrtext200 \li50 \ri50 \tx50 \tx100 \tx1118 \tqr \tx6440 \tab ABS\tab Gives the absolute value of a number\par 
\pard \s9 \posx2343 \posy6955 \phpg \pvpg \absh-3920 \absw6491 \dxfrtext200 \li50 \ri50 \tx50 \tx100 \tx1118 \tqr \tx6440 \tab ATN\tab Returns the arc\_tangent of a floating point number\par 
\pard \s9 \posx2343 \posy6955 \phpg \pvpg \absh-3920 \absw6491 \dxfrtext200 \li50 \ri50 \tx50 \tx100 \tx1118 \tqr \tx6440 \tab COS\tab Gives the cosine of a number\par 
\pard \s9 \posx2343 \posy6955 \phpg \pvpg \absh-3920 \absw6491 \dxfrtext200 \li50 \ri50 \tx50 \tx100 \tx1118 \tqr \tx6440 \tab DEC\tab Returns the decimal value of a hexadecimal string\par 
\pard \s9 \posx2343 \posy6955 \phpg \pvpg \absh-3920 \absw6491 \dxfrtext200 \li50 \ri50 \tx50 \tx100 \tx1118 \tqr \tx6440 \tab EXP\tab Returns the value of e raised to the X power\par 
\pard \s9 \posx2343 \posy6955 \phpg \pvpg \absh-3920 \absw6491 \dxfrtext200 \li50 \ri50 \tx50 \tx100 \tx1118 \tqr \tx6440 \tab FN\tab Allows custom functions with parameters\par 
\pard \s9 \posx2343 \posy6955 \phpg \pvpg \absh-3920 \absw6491 \dxfrtext200 \li50 \ri50 \tx50 \tx100 \tx1118 \tqr \tx6440 \tab HEX$\tab Returns hexadecimal number string from decimal number\par 
\pard \s9 \posx2343 \posy6955 \phpg \pvpg \absh-3920 \absw6491 \dxfrtext200 \li50 \ri50 \tx50 \tx100 \tx1118 \tqr \tx6440 \tab INT\tab Truncates decimal portion of floating point number\par 
\pard \s9 \posx2343 \posy6955 \phpg \pvpg \absh-3920 \absw6491 \dxfrtext200 \li50 \ri50 \tx50 \tx100 \tx1118 \tqr \tx6440 \tab LOG\tab Returns the natural log of X\par 
}\pard \tx50 \tx100 \tx1118 \tqr \tx6440 \fs24 \f0 {\pard \posx11293 \posy236 \phpg \pvpg \absh-402 \absw4468 \dxfrtext200 \fs10 \f0 \fs28 \f3 \i \pard \s10 \posx11293 \posy236 \phpg \pvpg \absh-402 \absw4468 \dxfrtext200 \li50 \ri50 \sl-304 \tx50 \tqr \tx4417 Enhanced BASIC 7.0 Statements\par 
}\pard \sl-304 \tx50 \tqr \tx4417 \fs24 \f0 {\pard \posx11287 \posy676 \phpg \pvpg \absh-2370 \absw7323 \dxfrtext200 \fs10 \f0 \fs22 \f1 \plain \fs22 \f1 \lang1033 \pard \s11 \posx11287 \posy676 \phpg \pvpg \absh-2370 \absw7323 \dxfrtext200 \qj \li50 \ri50 \sl-258 \tx50 \tqr \tx7272 You can see the real power of the new BASIC 7.0 when you examine the new statements that have been added to it. Here we will present details on all of these except the new DOS, graphics, and sound commands, which we will explore later. The new statements are made up of bit\-mapped graphics commands, sprite control statements, and very sophis\-ticated three\_voice sound and music control statements. There are also new looping statements that allow more structured programming con\-structs, and a new window statement that lets you control the rectangle where text will scroll.\par 
}\pard \sl-258 \tx50 \tqr \tx7272 \fs24 \f0 {\pard \posx11301 \posy3252 \phpg \pvpg \absh-312 \absw5710 \dxfrtext200 \fs10 \f0 \fs24 \f2 \b \pard \s12 \posx11301 \posy3252 \phpg \pvpg \absh-312 \absw5710 \dxfrtext200 \li50 \ri50 \sl-261 \tx50 \tqr \tx5659 New C128 Mode Bit\_Mapped Graphics Statements\par 
}\pard \sl-261 \tx50 \tqr \tx5659 \fs24 \f0 {\pard \posx11291 \posy3621 \phpg \pvpg \absh-1364 \absw7320 \dxfrtext200 \fs10 \f0 \fs22 \f1 \plain \fs22 \f1 \lang1033 \pard \s13 \posx11291 \posy3621 \phpg \pvpg \absh-1364 \absw7320 \dxfrtext200 \qj \li50 \ri50 \sl-264 \tx50 \tqr \tx7269 Table 3\_12 lists the new statements that allow drawing on the bit\_mapped display. You can draw lines, rectangles, polygons, and circles, and fill them with any color. You can capture a pixel area to a string (most BASICs capture a pixel area to an array) and then draw it anywhere on the screen quickly. There are statements for reading the color of any pixel, and scaling\par 
}\pard \sl-264 \tx50 \tqr \tx7269 \fs24 \f0 {\pard \posx12655 \posy5654 \phpg \pvpg \absh-312 \absw4685 \dxfrtext200 \fs10 \f0 \fs24 \f2 \b \pard \s14 \posx12655 \posy5654 \phpg \pvpg \absh-312 \absw4685 \dxfrtext200 \qc \sl-261 \tx50 \tqr \tx4634 Table 3\_12. BASIC 7.0 Graphics Statements\par 
}\pard \sl-261 \tx50 \tqr \tx4634 \fs24 \f0 {\pard \posx11871 \posy6204 \phpg \pvpg \absh-306 \absw1156 \dxfrtext200 \fs10 \f0 \fs22 \f1 \plain \fs22 \f1 \lang1033 \pard \s15 \posx11871 \posy6204 \phpg \pvpg \absh-306 \absw1156 \dxfrtext200 \li50 \ri50 \tx50 \tqr \tx1105 Stotement\par 
}\pard \tx50 \tqr \tx1105 \fs24 \f0 {\pard \posx15303 \posy6202 \phpg \pvpg \absh-306 \absw1006 \dxfrtext200 \fs10 \f0 \fs22 \f1 \pard \s16 \posx15303 \posy6202 \phpg \pvpg \absh-306 \absw1006 \dxfrtext200 \li50 \ri50 \tx50 \tqr \tx955 Purpose\par 
}\pard \tx50 \tqr \tx955 \fs24 \f0 {\pard \posx11795 \posy6681 \phpg \pvpg \absh-4166 \absw6430 \dxfrtext200 \fs10 \f0 \fs22 \f1 \pard \s17 \posx11795 \posy6681 \phpg \pvpg \absh-4166 \absw6430 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tx100 \tx1608 \tqr \tx6379 \tab BOX\tab Draws a rectangle\par 
\pard \s17 \posx11795 \posy6681 \phpg \pvpg \absh-4166 \absw6430 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tx100 \tx1608 \tqr \tx6379 \tab CHAR\tab Displays characters at any pixel coordinate\par 
\pard \s17 \posx11795 \posy6681 \phpg \pvpg \absh-4166 \absw6430 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tx100 \tx1608 \tqr \tx6379 \tab CIRCLE\tab Draws a circle, oval, triangle, or polygon\par 
\pard \s17 \posx11795 \posy6681 \phpg \pvpg \absh-4166 \absw6430 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tx100 \tx1608 \tqr \tx6379 \tab COLOR\tab Chooses colors for foregrounds, backgrounds, border\par 
\pard \s17 \posx11795 \posy6681 \phpg \pvpg \absh-4166 \absw6430 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tx100 \tx1608 \tqr \tx6379 \tab DRAW\tab Draws lines and plots points\par 
\pard \s17 \posx11795 \posy6681 \phpg \pvpg \absh-4166 \absw6430 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tx100 \tx1608 \tqr \tx6379 \tab GRAPHIC\tab Chooses one of six graphics modes\par 
\pard \s17 \posx11795 \posy6681 \phpg \pvpg \absh-4166 \absw6430 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tx100 \tx1608 \tqr \tx6379 \tab LOCATE\tab Sets the pixel cursor to a certain pixel coordinate\par 
\pard \s17 \posx11795 \posy6681 \phpg \pvpg \absh-4166 \absw6430 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tx100 \tx1608 \tqr \tx6379 \tab PAINT\tab Fills any closed boundary with a color\par 
\pard \s17 \posx11795 \posy6681 \phpg \pvpg \absh-4166 \absw6430 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tx100 \tx1608 \tqr \tx6379 \tab SCALE\tab Scales the coordinates of the entire screen to 1024\par 
\pard \s17 \posx11795 \posy6681 \phpg \pvpg \absh-4166 \absw6430 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tx100 \tx1608 \tqr \tx6379 \tab SCNCLR\tab Clears the screen to the current background color\par 
\pard \s17 \posx11795 \posy6681 \phpg \pvpg \absh-4166 \absw6430 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tx100 \tx1608 \tqr \tx6379 \tab SSHAPE\tab Captures pixels of an area in a string\par 
\pard \s17 \posx11795 \posy6681 \phpg \pvpg \absh-4166 \absw6430 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tx100 \tx1608 \tqr \tx6379 \tab GSHAPE\tab Draws pixels captured in a string to the screen\par 
\pard \s17 \posx11795 \posy6681 \phpg \pvpg \absh-4166 \absw6430 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tx100 \tx1608 \tqr \tx6379 \tab WINDOW\tab Draws a window of defined boundaries\par 
\pard \s17 \posx11795 \posy6681 \phpg \pvpg \absh-4166 \absw6430 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tx100 \tx1608 \tqr \tx6379 \tab RCLR\tab Returns the color of a source\par 
\pard \s17 \posx11795 \posy6681 \phpg \pvpg \absh-4166 \absw6430 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tx100 \tx1608 \tqr \tx6379 \tab RDOT\tab Returns the color of a pixel on the screen\par 
\pard \s17 \posx11795 \posy6681 \phpg \pvpg \absh-4166 \absw6430 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tx100 \tx1608 \tqr \tx6379 \tab RGR\tab Returns the mode of the screen\par 
\pard \s17 \posx11795 \posy6681 \phpg \pvpg \absh-4166 \absw6430 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tx100 \tx1608 \tqr \tx6379 \tab RWINDOW\tab Reads the current window boundaries\par 
}\pard \sl-241 \tx50 \tx100 \tx1608 \tqr \tx6379 \fs24 \f0 \page \lndscpsxn {\stylesheet {\snext0 Normal;}
{\s2 \tx50 \tqr \tx382 \ql \sl88 \li1668 \ri50 \sbasedon0 \snext2 OmniPage #513;}
{\s3 \tqr \tx7249 \qj \li1668 \ri50 \sl251 \sbasedon0 \snext3 OmniPage #514;}
{\s4 \tqr \tx4841 \ql \sl268 \li1668 \ri50 \sbasedon0 \snext4 OmniPage #515;}
{\s5 \tqr \tx7281 \qj \li1668 \ri50 \sl261 \sbasedon0 \snext5 OmniPage #516;}
{\s6 \tqr \tx4312 \ql \sl268 \li1668 \ri50 \sbasedon0 \snext6 OmniPage #517;}
{\s7 \tqr \tx7264 \qj \li1668 \ri50 \sl253 \sbasedon0 \snext7 OmniPage #518;}
{\s8 \tqr \tx5132 \qc \sl240 \sbasedon0 \snext8 OmniPage #519;}
{\s9 \tqr \tx1104 \ql \sl240 \li1668 \ri50 \sbasedon0 \snext9 OmniPage #520;}
{\s10 \tqr \tx955 \ql \sl240 \li1668 \ri50 \sbasedon0 \snext10 OmniPage #521;}
{\s11 \tx100 \tx1346 \tqr \tx6729 \ql \sl241 \li1668 \ri50 \sbasedon0 \snext11 OmniPage #522;}
{\s12 \tqr \tx7281 \qj \li1668 \ri50 \sl258 \sbasedon0 \snext12 OmniPage #523;}
{\s13 \tqr \tx4577 \ql \sl240 \li1668 \ri50 \sbasedon0 \snext13 OmniPage #524;}
{\s14 \tqr \tx7288 \qj \li1668 \ri50 \sl260 \sbasedon0 \snext14 OmniPage #525;}
{\s15 \tqr \tx5508 \ql \sl218 \li1668 \ri50 \sbasedon0 \snext15 OmniPage #526;}
{\s16 \tqr \tx2006 \ql \li1668 \ri50 \sl240 \sbasedon0 \snext16 OmniPage #527;}
{\s17 \tqr \tx3157 \ql \sl189 \li1668 \ri50 \sbasedon0 \snext17 OmniPage #528;}
{\s18 \tqr \tx1563 \ql \sl240 \li1668 \ri50 \sbasedon0 \snext18 OmniPage #529;}
{\s19 \tqr \tx3822 \ql \li1668 \ri50 \sl216 \sbasedon0 \snext19 OmniPage #530;}
{\s20 \tqr \tx5152 \ql \sl240 \li1668 \ri50 \sbasedon0 \snext20 OmniPage #531;}
{\s21 \tqr \tx1104 \ql \sl240 \li1668 \ri50 \sbasedon0 \snext21 OmniPage #532;}
{\s22 \tqr \tx877 \ql \sl240 \li1668 \ri50 \sbasedon0 \snext22 OmniPage #533;}
{\s23 \tqr \tx941 \ql \sl241 \li1668 \ri50 \sbasedon0 \snext23 OmniPage #534;}
{\s24 \tqr \tx956 \ql \sl240 \li1668 \ri50 \sbasedon0 \snext24 OmniPage #535;}
{\s25 \tx1353 \tqr \tx6663 \ql \li365 \fi-1303 \ri50 \sl242 \sbasedon0 \snext25 OmniPage #536;}
}\par {\pard \posx8920 \posy0 \phpg \pvpg \absh-192 \absw433 \dxfrtext200 \fs23 \f0 \pard \s2 \posx8920 \posy0 \phpg \pvpg \absh-192 \absw433 \dxfrtext200 \li50 \ri50 \sl-88 \tx50 \tqr \tx382 \_\pard \posx8920 \posy0 \phpg \pvpg \absh-192 \absw433 \dxfrtext200 \li50 \ri50 \sl-88 \tx50 \tqr \tx382 \par 
}\sect \sectd \linex0 \linemod0 \sbknone \lndscpsxn \marglsxn1611 \margrsxn1499 \pard \sl-88 \tx50 \tqr \tx382 \fs24 \f0 {\pard \posx1667 \posy201 \phpg \pvpg \absh-565 \absw7300 \dxfrtext200 \fs10 \f0 \fs23 \f0 \pard \s3 \posx1667 \posy201 \phpg \pvpg \absh-565 \absw7300 \dxfrtext200 \qj \li50 \ri50 \sl-251 \tx50 \tqr \tx7249 the entire \fs23 \f1 \b screen to a 1024 by 1024 grid. These statements and \fs23 \f0 \plain \fs23 \lang1033 how they work are covered in Chapter 6\'97Graphics.\par 
}\pard \sl-251 \tx50 \tqr \tx7249 \fs24 \f0 {\pard \posx1668 \posy953 \phpg \pvpg \absh-319 \absw4892 \dxfrtext200 \fs10 \f0 \fs25 \f2 \b \pard \s4 \posx1668 \posy953 \phpg \pvpg \absh-319 \absw4892 \dxfrtext200 \li50 \ri50 \sl-268 \tx50 \tqr \tx4841 New C128\_Mode Sprite Control Statements\par 
}\pard \sl-268 \tx50 \tqr \tx4841 \fs24 \f0 {\pard \posx1661 \posy1345 \phpg \pvpg \absh-3179 \absw7332 \dxfrtext200 \fs10 \f0 \fs23 \f0 \plain \fs23 \lang1033 \pard \s5 \posx1661 \posy1345 \phpg \pvpg \absh-3179 \absw7332 \dxfrtext200 \qj \li50 \ri50 \sl-261 \tx50 \tqr \tx7281 One of the greatest enhancements to the Cl28\_mode BASIC 7.0 is its sprite handling statements (see Table 3\_13). Sprites, which are covered in more detail in Chapter 6, are programmable graphic objects used often in games and simulations. Since sprites live on independent bit planes that don't erase each other, and since they can be moved by the VIC II chip auto\-matically, it makes great sense to exploit them in programs. Unfortunately, in the C64, sprites had to be controlled via POKE and PEEK statements, rendering sprites quite difficult to control. The new BASIC 7.0 contains a set of clear, simple statements that allow sprites to be easily created, edited, saved, colored, expanded, and moved about on the screen. You can also find out when sprites cross over each other, or when they pass over background display data.\par 
}\pard \sl-261 \tx50 \tqr \tx7281 \fs24 \f0 {\pard \posx1680 \posy4731 \phpg \pvpg \absh-319 \absw4363 \dxfrtext200 \fs10 \f0 \fs25 \f2 \b \pard \s6 \posx1680 \posy4731 \phpg \pvpg \absh-319 \absw4363 \dxfrtext200 \li50 \ri50 \sl-268 \tx50 \tqr \tx4312 C128 Mode Sound Control Statements\par 
}\pard \sl-268 \tx50 \tqr \tx4312 \fs24 \f0 {\pard \posx1682 \posy5123 \phpg \pvpg \absh-1066 \absw7315 \dxfrtext200 \fs10 \f0 \fs23 \f0 \plain \fs23 \lang1033 \pard \s7 \posx1682 \posy5123 \phpg \pvpg \absh-1066 \absw7315 \dxfrtext200 \qj \li50 \ri50 \sl-253 \tx50 \tqr \tx7264 The Commodore 64 has always been known for its powerful SID (sound interface chip) and the incredible noises that can emanate from it: Bach\-like sonnets, powerful symphonies, or screeching sound effects. BASIC 7.0 adds a set of powerful statements for easily creating these effects. Table\par 
}\pard \sl-253 \tx50 \tqr \tx7264 \fs24 \f0 {\pard \posx2793 \posy6822 \phpg \pvpg \absh-311 \absw5183 \dxfrtext200 \fs10 \f0 \fs23 \f1 \b \pard \s8 \posx2793 \posy6822 \phpg \pvpg \absh-311 \absw5183 \dxfrtext200 \qc \tx50 \tqr \tx5132 Table 3\_13. BASIC 7.0 Sprite Control Statements\par 
}\pard \tx50 \tqr \tx5132 \fs24 \f0 {\pard \posx2013 \posy7357 \phpg \pvpg \absh-306 \absw1155 \dxfrtext200 \fs10 \f0 \fs23 \f0 \plain \fs23 \lang1033 \pard \s9 \posx2013 \posy7357 \phpg \pvpg \absh-306 \absw1155 \dxfrtext200 \li50 \ri50 \tx50 \tqr \tx1104 Statement\par 
}\pard \tx50 \tqr \tx1104 \fs24 \f0 {\pard \posx5561 \posy7344 \phpg \pvpg \absh-306 \absw1006 \dxfrtext200 \fs10 \f0 \fs23 \f0 \pard \s10 \posx5561 \posy7344 \phpg \pvpg \absh-306 \absw1006 \dxfrtext200 \li50 \ri50 \tx50 \tqr \tx955 Purpose\par 
}\pard \tx50 \tqr \tx955 \fs24 \f0 {\pard \posx1929 \posy7832 \phpg \pvpg \absh-2959 \absw6780 \dxfrtext200 \fs10 \f0 \fs23 \f0 \pard \s11 \posx1929 \posy7832 \phpg \pvpg \absh-2959 \absw6780 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tx100 \tx1346 \tqr \tx6729 \tab BUMP\tab Records what sprites (1\_8) hit what\par 
\pard \s11 \posx1929 \posy7832 \phpg \pvpg \absh-2959 \absw6780 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tx100 \tx1346 \tqr \tx6729 \tab COLLISION\tab Causes a GOSUB when sprites collide or sprite hits display\par 
\pard \s11 \posx1929 \posy7832 \phpg \pvpg \absh-2959 \absw6780 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tx100 \tx1346 \tqr \tx6729 \tab \tab data\par 
\pard \s11 \posx1929 \posy7832 \phpg \pvpg \absh-2959 \absw6780 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tx100 \tx1346 \tqr \tx6729 \tab MOVSPR\tab Moves a sprite to new coordinates automatically\par 
\pard \s11 \posx1929 \posy7832 \phpg \pvpg \absh-2959 \absw6780 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tx100 \tx1346 \tqr \tx6729 \tab SPRCOLOR\tab Sets multicolor colors for all sprites\par 
\pard \s11 \posx1929 \posy7832 \phpg \pvpg \absh-2959 \absw6780 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tx100 \tx1346 \tqr \tx6729 \tab SPRDEF\tab Enters sprite editor\par 
\pard \s11 \posx1929 \posy7832 \phpg \pvpg \absh-2959 \absw6780 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tx100 \tx1346 \tqr \tx6729 \tab SPRITE\tab Turns on a sprite, colors it, expands size, sets priority and\par 
\pard \s11 \posx1929 \posy7832 \phpg \pvpg \absh-2959 \absw6780 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tx100 \tx1346 \tqr \tx6729 \tab \tab mode\par 
\pard \s11 \posx1929 \posy7832 \phpg \pvpg \absh-2959 \absw6780 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tx100 \tx1346 \tqr \tx6729 \tab SPRSAV\tab Moves picture string to a sprite or sprite to a string\par 
\pard \s11 \posx1929 \posy7832 \phpg \pvpg \absh-2959 \absw6780 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tx100 \tx1346 \tqr \tx6729 \tab RSPCOLOR\tab Checks what sprite multicolor values last set\par 
\pard \s11 \posx1929 \posy7832 \phpg \pvpg \absh-2959 \absw6780 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tx100 \tx1346 \tqr \tx6729 \tab RSPPOS\tab Checks speed and position of sprite\par 
\pard \s11 \posx1929 \posy7832 \phpg \pvpg \absh-2959 \absw6780 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tx100 \tx1346 \tqr \tx6729 \tab RSPRITE\tab Returns sprite attributes\par 
}\pard \sl-241 \tx50 \tx100 \tx1346 \tqr \tx6729 \fs24 \f0 {\pard \posx11279 \posy241 \phpg \pvpg \absh-1855 \absw7332 \dxfrtext200 \fs10 \f0 \fs23 \f0 \pard \s12 \posx11279 \posy241 \phpg \pvpg \absh-1855 \absw7332 \dxfrtext200 \qj \li50 \ri50 \sl-258 \tx50 \tqr \tx7281 3\_14 lists the six sound control statements. These are covered in detail in Chapter 7\'97Sound. Note that these statements control a three voice music synthesizer. You can create custom envelopes with your own attack, sus\-tain, and release curves, that in turn control one of the three voices. It is easy to have a guitar, drum, and saxophone playing simultaneously. A FILTER statement lets you attach a frequency filter to the output of the SID chip, thereby allowing strange synthesizer effects, like ring modulation.\par 
}\pard \sl-258 \tx50 \tqr \tx7281 \fs24 \f0 {\pard \posx11294 \posy2283 \phpg \pvpg \absh-311 \absw4628 \dxfrtext200 \fs10 \f0 \fs23 \f1 \b \pard \s13 \posx11294 \posy2283 \phpg \pvpg \absh-311 \absw4628 \dxfrtext200 \li50 \ri50 \tx50 \tqr \tx4577 C128\_Mode Program Control Statements\par 
}\pard \tx50 \tqr \tx4577 \fs24 \f0 {\pard \posx11273 \posy2685 \phpg \pvpg \absh-826 \absw7339 \dxfrtext200 \fs10 \f0 \fs23 \f0 \plain \fs23 \lang1033 \pard \s14 \posx11273 \posy2685 \phpg \pvpg \absh-826 \absw7339 \dxfrtext200 \qj \li50 \ri50 \sl-260 \tx50 \tqr \tx7288 Table 3\_15 shows the new program control statements that are offered. There is now a DO UNTIL and DO WHILE looping structure. You can say something like this:\par 
}\pard \sl-260 \tx50 \tqr \tx7288 \fs24 \f0 {\pard \posx10715 \posy3733 \phpg \pvpg \absh-940 \absw5559 \dxfrtext200 \fs10 \f0 \fs20 \f3 \pard \s15 \posx10715 \posy3733 \phpg \pvpg \absh-940 \absw5559 \dxfrtext200 \li50 \ri50 \sl-218 \tx50 \tqr \tx5508 100 DO\par 
\pard \s15 \posx10715 \posy3733 \phpg \pvpg \absh-940 \absw5559 \dxfrtext200 \li50 \ri50 \sl-218 \tx50 \tqr \tx5508 110 INPUT "DO YOU LIKE YOUR COMPUTER"; ANS$\par 
\pard \s15 \posx10715 \posy3733 \phpg \pvpg \absh-940 \absw5559 \dxfrtext200 \li50 \ri50 \sl-218 \tx50 \tqr \tx5508 120 LOOP UNTIL ANS$="YES"\par 
\pard \s15 \posx10715 \posy3733 \phpg \pvpg \absh-940 \absw5559 \dxfrtext200 \li50 \ri50 \sl-218 \tx50 \tqr \tx5508 130 PRINT "THANKS"\par 
}\pard \sl-218 \tx50 \tqr \tx5508 \fs24 \f0 {\pard \posx11715 \posy4876 \phpg \pvpg \absh-306 \absw2057 \dxfrtext200 \fs23 \f0 \fs23 \f0 \pard \s16 \posx11715 \posy4876 \phpg \pvpg \absh-306 \absw2057 \dxfrtext200 \li50 \ri50 \tx50 \tqr \tx2006 or you can do this:\par 
}\pard \tx50 \tqr \tx2006 \fs24 \f0 {\pard \posx10712 \posy5398 \phpg \pvpg \absh-285 \absw3208 \dxfrtext200 \fs10 \f0 \fs20 \f3 \pard \s17 \posx10712 \posy5398 \phpg \pvpg \absh-285 \absw3208 \dxfrtext200 \li50 \ri50 \sl-189 \tx50 \tqr \tx3157 100 DO UNTIL ANS$="QUIT"\par 
}\pard \sl-189 \tx50 \tqr \tx3157 \fs24 \f0 {\pard \posx11095 \posy6035 \phpg \pvpg \absh-306 \absw1614 \dxfrtext200 \fs23 \f0 \fs23 \f0 \pard \s18 \posx11095 \posy6035 \phpg \pvpg \absh-306 \absw1614 \dxfrtext200 \li50 \ri50 \tx50 \tqr \tx1563 ( statements )\par 
}\pard \tx50 \tqr \tx1563 \fs24 \f0 {\pard \posx10703 \posy6486 \phpg \pvpg \absh-501 \absw3873 \dxfrtext200 \fs10 \f0 \fs20 \f3 \pard \s19 \posx10703 \posy6486 \phpg \pvpg \absh-501 \absw3873 \dxfrtext200 \li50 \ri50 \sl-216 \tx50 \tqr \tx3822 200 INPUT "AGAIN OR QUIT"; ANS$ 210 LOOP\par 
}\pard \sl-216 \tx50 \tqr \tx3822 \fs24 \f0 {\pard \posx12373 \posy7787 \phpg \pvpg \absh-311 \absw5203 \dxfrtext200 \fs23 \f1 \fs23 \f1 \b \pard \s20 \posx12373 \posy7787 \phpg \pvpg \absh-311 \absw5203 \dxfrtext200 \li50 \ri50 \tx50 \tqr \tx5152 Table 3\_14. BASIC 7.0 Sound Control Statements\par 
}\pard \tx50 \tqr \tx5152 \fs24 \f0 {\pard \posx11592 \posy8336 \phpg \pvpg \absh-306 \absw1155 \dxfrtext200 \fs10 \f0 \fs23 \f0 \plain \fs23 \lang1033 \pard \s21 \posx11592 \posy8336 \phpg \pvpg \absh-306 \absw1155 \dxfrtext200 \li50 \ri50 \tx50 \tqr \tx1104 Statement\par 
}\pard \tx50 \tqr \tx1104 \fs24 \f0 {\pard \posx11506 \posy9299 \phpg \pvpg \absh-546 \absw928 \dxfrtext200 \fs10 \f0 \fs23 \f0 \pard \s22 \posx11506 \posy9299 \phpg \pvpg \absh-546 \absw928 \dxfrtext200 \li50 \ri50 \tx50 \tqr \tx877 FILTER\par 
\pard \s22 \posx11506 \posy9299 \phpg \pvpg \absh-546 \absw928 \dxfrtext200 \li50 \ri50 \tx50 \tqr \tx877 PLAY\par 
}\pard \tx50 \tqr \tx877 \fs24 \f0 {\pard \posx11503 \posy10020 \phpg \pvpg \absh-788 \absw992 \dxfrtext200 \fs10 \f0 \fs23 \f0 \pard \s23 \posx11503 \posy10020 \phpg \pvpg \absh-788 \absw992 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tqr \tx941 SOUND\par 
\pard \s23 \posx11503 \posy10020 \phpg \pvpg \absh-788 \absw992 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tqr \tx941 TEMPO\par 
\pard \s23 \posx11503 \posy10020 \phpg \pvpg \absh-788 \absw992 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tqr \tx941 VOL\par 
}\pard \sl-241 \tx50 \tqr \tx941 \fs24 \f0 {\pard \posx15143 \posy8343 \phpg \pvpg \absh-306 \absw1007 \dxfrtext200 \fs10 \f0 \fs23 \f0 \pard \s24 \posx15143 \posy8343 \phpg \pvpg \absh-306 \absw1007 \dxfrtext200 \li50 \ri50 \tx50 \tqr \tx956 Purpose\par 
}\pard \tx50 \tqr \tx956 \fs24 \f0 {\pard \posx11504 \posy8812 \phpg \pvpg \absh-2004 \absw6714 \dxfrtext200 \fs10 \f0 \fs23 \f0 \pard \s25 \posx11504 \posy8812 \phpg \pvpg \absh-2004 \absw6714 \dxfrtext200 \li1353 \fi-1303 \ri50 \sl-242 \tx50 \tx1353 \tqr \tx6663 ENVELOPE Creates instrument envelopes: ADSR, sustain, waveform, pulse width Defines sound filters: low, band or hi\_pass, cut\_off frequency Defines and plays notes with sophisticated instrument voices Sound effects: any frequency with sweep control Sets up standard note duration for three voices Sets output volume for SOUND statement\par 
}\pard \sl-242 \tx50 \tx1353 \tqr \tx6663 \fs24 \f0 \page \lndscpsxn {\stylesheet {\snext0 Normal;}
{\s2 \tx50 \tx481 \tqr \tx7270 \qj \li1668 \fi431 \ri50 \sl255 \sbasedon0 \snext2 OmniPage #769;}
{\s3 \tx50 \tqr \tx6241 \ql \sl221 \li1668 \ri50 \sbasedon0 \snext3 OmniPage #770;}
{\s4 \tqr \tx4395 \ql \sl247 \li1668 \ri50 \sbasedon0 \snext4 OmniPage #771;}
{\s5 \tqr \tx7299 \qj \li1668 \ri50 \sl261 \sbasedon0 \snext5 OmniPage #772;}
{\s6 \tqr \tx1694 \ql \sl247 \li1668 \ri50 \sbasedon0 \snext6 OmniPage #773;}
{\s7 \tqr \tx7274 \qj \li1668 \ri50 \sl260 \sbasedon0 \snext7 OmniPage #774;}
{\s8 \tqr \tx6461 \qc \sl247 \sbasedon0 \snext8 OmniPage #775;}
{\s9 \tqr \tx1109 \ql \sl247 \li1668 \ri50 \sbasedon0 \snext9 OmniPage #776;}
{\s10 \tqr \tx954 \ql \sl247 \li1668 \ri50 \sbasedon0 \snext10 OmniPage #777;}
{\s11 \tqr \tx1779 \ql \sl241 \li1668 \ri50 \sbasedon0 \snext11 OmniPage #778;}
{\s12 \tx100 \tx2365 \tqr \tx6679 \ql \sl240 \li1668 \ri50 \sbasedon0 \snext12 OmniPage #779;}
{\s13 \tqr \tx7257 \ql \li1668 \ri50 \sl255 \sbasedon0 \snext13 OmniPage #780;}
{\s14 \tqr \tx5144 \ql \li1668 \ri50 \sl348 \sbasedon0 \snext14 OmniPage #781;}
{\s15 \tqr \tx7274 \qj \li1668 \ri50 \sl260 \sbasedon0 \snext15 OmniPage #782;}
{\s16 \tqr \tx2009 \ql \li1668 \ri50 \sl319 \sbasedon0 \snext16 OmniPage #783;}
{\s17 \tqr \tx7264 \qj \li1668 \ri50 \sl261 \sbasedon0 \snext17 OmniPage #784;}
{\s18 \tqr \tx5628 \qc \sl247 \sbasedon0 \snext18 OmniPage #785;}
{\s19 \tqr \tx1104 \ql \sl247 \li1668 \ri50 \sbasedon0 \snext19 OmniPage #786;}
{\s20 \tqr \tx954 \ql \sl247 \li1668 \ri50 \sbasedon0 \snext20 OmniPage #787;}
{\s21 \tx100 \tx1771 \tqr \tx6490 \ql \sl241 \li1668 \ri50 \sbasedon0 \snext21 OmniPage #788;}
}\par {\pard \posx1693 \posy245 \phpg \pvpg \absh-1830 \absw7321 \dxfrtext200 \fs24 \f0 \pard \s2 \posx1693 \posy245 \phpg \pvpg \absh-1830 \absw7321 \dxfrtext200 \qj \li50 \fi431 \ri50 \sl-255 \tx50 \tx481 \tqr \tx7270 You can also say DO WHILE something is true or false. The EXIT statement is provided to let you force a program to exit a DO LOOP when a special condition is met. The ELSE statement has been added to the IF THEN statement to allow more elegant decision statements. The BEGIN/ BEND statements are a way of getting around the fact that you can't get a Microsoft BASIC IF THEN statement to allow multiple lines to be executed if the condition is true. Now you can do this in BASIC 7.0:\par 
}\sect \sectd \linex0 \linemod0 \sbknone \lndscpsxn \marglsxn1083 \margrsxn1487 \pard \sl-255 \tx50 \tx481 \tqr \tx7270 {\pard \posx1133 \posy2287 \phpg \pvpg \absh-955 \absw6292 \dxfrtext200 \fs10 \f0 \fs20 \f1 \pard \s3 \posx1133 \posy2287 \phpg \pvpg \absh-955 \absw6292 \dxfrtext200 \li50 \ri50 \sl-221 \tx50 \tqr \tx6241 100 INPUT A\par 
\pard \s3 \posx1133 \posy2287 \phpg \pvpg \absh-955 \absw6292 \dxfrtext200 \li50 \ri50 \sl-221 \tx50 \tqr \tx6241 110 IF A<100 THEN BEGIN:\par 
\pard \s3 \posx1133 \posy2287 \phpg \pvpg \absh-955 \absw6292 \dxfrtext200 \li50 \ri50 \sl-221 \tx50 \tqr \tx6241 120 PRINT "NUMBER IS LESS THAN 100"\par 
\pard \s3 \posx1133 \posy2287 \phpg \pvpg \absh-955 \absw6292 \dxfrtext200 \li50 \ri50 \sl-221 \tx50 \tqr \tx6241 130 BEND: ELSE: PRINT "NUMBER IS GREATER THAN 100"\par 
}\pard \sl-221 \tx50 \tqr \tx6241 \fs24 \f0 {\pard \posx1711 \posy3715 \phpg \pvpg \absh-305 \absw4446 \dxfrtext200 \fs24 \f2 \fs24 \f2 \b \pard \s4 \posx1711 \posy3715 \phpg \pvpg \absh-305 \absw4446 \dxfrtext200 \li50 \ri50 \sl-247 \tx50 \tqr \tx4395 PRINT USING, PUTDEF, and GETKEY\par 
}\pard \sl-247 \tx50 \tqr \tx4395 \fs24 \f0 {\pard \posx1697 \posy4112 \phpg \pvpg \absh-2385 \absw7350 \dxfrtext200 \fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s5 \posx1697 \posy4112 \phpg \pvpg \absh-2385 \absw7350 \dxfrtext200 \qj \li50 \ri50 \sl-261 \tx50 \tqr \tx7299 The C128 now allows PRINT USING which means you can format how your numbers appear on the screen. This was one of the most missed statements among C64 BASIC 2.0 users. Decimal points can be fixed and so can the number of digits that are displayed. There is also a PUTDEF statement that lets you replace format characters ($, etc) with any character from the keyboard. This means you can display in British pounds, for example. A GETKEY statement is provided that is similar to the GET statement (used to loop on the keyboard and wait for a key to be pressed). GETKEY eliminates the need to loop: it waits on its own for a keypress.\par 
}\pard \sl-261 \tx50 \tqr \tx7299 {\pard \posx1715 \posy6708 \phpg \pvpg \absh-305 \absw1745 \dxfrtext200 \fs10 \f0 \fs24 \f2 \b \pard \s6 \posx1715 \posy6708 \phpg \pvpg \absh-305 \absw1745 \dxfrtext200 \li50 \ri50 \sl-247 \tx50 \tqr \tx1694 Program Aids\par 
}\pard \sl-247 \tx50 \tqr \tx1694 \fs24 \f0 {\pard \posx1707 \posy7105 \phpg \pvpg \absh-557 \absw7325 \dxfrtext200 \fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s7 \posx1707 \posy7105 \phpg \pvpg \absh-557 \absw7325 \dxfrtext200 \qj \li50 \ri50 \sl-260 \tx50 \tqr \tx7274 Finally, the new BASIC 7.0 adds all the popular Microsoft program entry and aid commands, as shown in Table 3\_16. Take special note that the\par 
}\pard \sl-260 \tx50 \tqr \tx7274 {\pard \posx2166 \posy8544 \phpg \pvpg \absh-305 \absw6512 \dxfrtext200 \fs10 \f0 \fs24 \f2 \b \pard \s8 \posx2166 \posy8544 \phpg \pvpg \absh-305 \absw6512 \dxfrtext200 \qc \sl-247 \tx50 \tqr \tx6461 Table 3\_15. BASIC 7.0 Advanced Program Control Statements\par 
}\pard \sl-247 \tx50 \tqr \tx6461 \fs24 \f0 {\pard \posx2552 \posy9107 \phpg \pvpg \absh-297 \absw1160 \dxfrtext200 \fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s9 \posx2552 \posy9107 \phpg \pvpg \absh-297 \absw1160 \dxfrtext200 \li50 \ri50 \sl-247 \tx50 \tqr \tx1109 Statement\par 
}\pard \sl-247 \tx50 \tqr \tx1109 {\pard \posx6108 \posy9100 \phpg \pvpg \absh-297 \absw1005 \dxfrtext200 \fs10 \f0 \fs24 \f0 \pard \s10 \posx6108 \posy9100 \phpg \pvpg \absh-297 \absw1005 \dxfrtext200 \li50 \ri50 \sl-247 \tx50 \tqr \tx954 Purpose\par 
}\pard \sl-247 \tx50 \tqr \tx954 {\pard \posx1960 \posy9587 \phpg \pvpg \absh-779 \absw1830 \dxfrtext200 \fs10 \f0 \fs24 \f0 \pard \s11 \posx1960 \posy9587 \phpg \pvpg \absh-779 \absw1830 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tqr \tx1779 DO/UNTIL/LOOP\par 
\pard \s11 \posx1960 \posy9587 \phpg \pvpg \absh-779 \absw1830 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tqr \tx1779 DO/WHILE/LOOP\par 
\pard \s11 \posx1960 \posy9587 \phpg \pvpg \absh-779 \absw1830 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tqr \tx1779 EXIT\par 
}\pard \sl-241 \tx50 \tqr \tx1779 {\pard \posx1963 \posy9588 \phpg \pvpg \absh-1259 \absw6730 \dxfrtext200 \fs10 \f0 \fs24 \f0 \pard \s12 \posx1963 \posy9588 \phpg \pvpg \absh-1259 \absw6730 \dxfrtext200 \li50 \ri50 \tx50 \tx100 \tx2365 \tqr \tx6679 \tab \tab Structured DO/UNTIL loop\par 
\pard \s12 \posx1963 \posy9588 \phpg \pvpg \absh-1259 \absw6730 \dxfrtext200 \li50 \ri50 \tx50 \tx100 \tx2365 \tqr \tx6679 \tab \tab Structured DO/WHILE loop\par 
\pard \s12 \posx1963 \posy9588 \phpg \pvpg \absh-1259 \absw6730 \dxfrtext200 \li50 \ri50 \tx50 \tx100 \tx2365 \tqr \tx6679 \tab \tab Causes immediate exit from a DO loop\par 
\pard \s12 \posx1963 \posy9588 \phpg \pvpg \absh-1259 \absw6730 \dxfrtext200 \li50 \ri50 \tx50 \tx100 \tx2365 \tqr \tx6679 \tab IF THEN BEGIN/BEND\tab Allows multiple statements after a THEN\par 
\pard \s12 \posx1963 \posy9588 \phpg \pvpg \absh-1259 \absw6730 \dxfrtext200 \li50 \ri50 \tx50 \tx100 \tx2365 \tqr \tx6679 \tab IF THEN ELSE\tab Allows processing for false and true conditions\par 
}\pard \tx50 \tx100 \tx2365 \tqr \tx6679 {\pard \posx11315 \posy290 \phpg \pvpg \absh-552 \absw7308 \dxfrtext200 \fs10 \f0 \fs24 \f0 \pard \s13 \posx11315 \posy290 \phpg \pvpg \absh-552 \absw7308 \dxfrtext200 \li50 \ri50 \sl-255 \tx50 \tqr \tx7257 TRAP statement allows you to process user errors and turn off BASIC's normal syntax error checking.\par 
}\pard \sl-255 \tx50 \tqr \tx7257 {\pard \posx10733 \posy1099 \phpg \pvpg \absh-411 \absw5195 \dxfrtext200 \fs10 \f0 \fs33 \f3 \b \pard \s14 \posx10733 \posy1099 \phpg \pvpg \absh-411 \absw5195 \dxfrtext200 \li50 \ri50 \sl-348 \tx50 \tqr \tx5144 WhatIs DOS and How DoIUseIt?\par 
}\pard \sl-348 \tx50 \tqr \tx5144 \fs24 \f0 {\pard \posx11299 \posy1561 \phpg \pvpg \absh-4200 \absw7325 \dxfrtext200 \fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s15 \posx11299 \posy1561 \phpg \pvpg \absh-4200 \absw7325 \dxfrtext200 \qj \li50 \ri50 \sl-260 \tx50 \tqr \tx7274 Commodore disk drives are random access mass storage devices. The term random applies somewhat loosely to a method of storing programs and their data (using files and records). The disk drive method of storage has many advantages over cassette storage, but at the cost of increased com\-plexity. With cassette storage you are personally responsible for starting, stopping, and positioning the tape. Manual operations like these are sim\-ply inappropriate to the manner of storage used by disk drives. For ex\-ample, a single floppy disk can store hundreds of programs or data files with thousands of individual records or both. And these programs and files are partitioned into very small data blocks that are spread all over the disk. It is ridiculous to attempt to control a disk device as you would a cassette. This type of storage control and accounting (knowing where things are, etc.) is better left to a computer. When you use a Commodore disk drive with your Commodore 128 you actually get a second computer with its own special Disk Operating System (DOS) program. Its only task is to manage all disk storage activities for you.\par 
}\pard \sl-260 \tx50 \tqr \tx7274 {\pard \posx11336 \posy6067 \phpg \pvpg \absh-372 \absw2060 \dxfrtext200 \fs10 \f0 \fs29 \f4 \i \pard \s16 \posx11336 \posy6067 \phpg \pvpg \absh-372 \absw2060 \dxfrtext200 \li50 \ri50 \sl-319 \tx50 \tqr \tx2009 What is DOS?\par 
}\pard \sl-319 \tx50 \tqr \tx2009 \fs24 \f0 {\pard \posx11304 \posy6503 \phpg \pvpg \absh-1082 \absw7315 \dxfrtext200 \fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s17 \posx11304 \posy6503 \phpg \pvpg \absh-1082 \absw7315 \dxfrtext200 \qj \li50 \ri50 \sl-261 \tx50 \tqr \tx7264 The term DOS is a sort of collective name for a group of single\_purpose disk utility programs. These utilities do things like preparing a brand new diskette for future storage operations, reading the current contents of a diskette, copying data from one diskette to another, and erasing old data\par 
}\pard \sl-261 \tx50 \tqr \tx7264 {\pard \posx12169 \posy8094 \phpg \pvpg \absh-305 \absw5679 \dxfrtext200 \fs10 \f0 \fs24 \f2 \b \pard \s18 \posx12169 \posy8094 \phpg \pvpg \absh-305 \absw5679 \dxfrtext200 \qc \sl-247 \tx50 \tqr \tx5628 Table 3\_16. BASIC 7.0 Programming Aids Statements\par 
}\pard \sl-247 \tx50 \tqr \tx5628 \fs24 \f0 {\pard \posx11944 \posy8650 \phpg \pvpg \absh-297 \absw1155 \dxfrtext200 \fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s19 \posx11944 \posy8650 \phpg \pvpg \absh-297 \absw1155 \dxfrtext200 \li50 \ri50 \sl-247 \tx50 \tqr \tx1104 Statement\par 
}\pard \sl-247 \tx50 \tqr \tx1104 {\pard \posx15385 \posy8649 \phpg \pvpg \absh-297 \absw1005 \dxfrtext200 \fs10 \f0 \fs24 \f0 \pard \s20 \posx15385 \posy8649 \phpg \pvpg \absh-297 \absw1005 \dxfrtext200 \li50 \ri50 \sl-247 \tx50 \tqr \tx954 Purpose\par 
}\pard \sl-247 \tx50 \tqr \tx954 {\pard \posx11724 \posy9129 \phpg \pvpg \absh-1745 \absw6541 \dxfrtext200 \fs10 \f0 \fs24 \f0 \pard \s21 \posx11724 \posy9129 \phpg \pvpg \absh-1745 \absw6541 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tx100 \tx1771 \tqr \tx6490 \tab AUTO\tab Turns on automatic line numbers\par 
\pard \s21 \posx11724 \posy9129 \phpg \pvpg \absh-1745 \absw6541 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tx100 \tx1771 \tqr \tx6490 \tab RENUMBER\tab Renumbers line numbers of program\par 
\pard \s21 \posx11724 \posy9129 \phpg \pvpg \absh-1745 \absw6541 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tx100 \tx1771 \tqr \tx6490 \tab DELETE\tab Deletes groups of lines\par 
\pard \s21 \posx11724 \posy9129 \phpg \pvpg \absh-1745 \absw6541 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tx100 \tx1771 \tqr \tx6490 \tab HELP\tab Shows where line number error occurred on screen\par 
\pard \s21 \posx11724 \posy9129 \phpg \pvpg \absh-1745 \absw6541 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tx100 \tx1771 \tqr \tx6490 \tab TRAP\tab Branches to subroutine containing user error\par 
\pard \s21 \posx11724 \posy9129 \phpg \pvpg \absh-1745 \absw6541 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tx100 \tx1771 \tqr \tx6490 \tab \tab handler\par 
\pard \s21 \posx11724 \posy9129 \phpg \pvpg \absh-1745 \absw6541 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tx100 \tx1771 \tqr \tx6490 \tab TRON, TROFF\tab Trace mode: displays line numbers as program runs\par 
}\pard \sl-241 \tx50 \tx100 \tx1771 \tqr \tx6490 \page \lndscpsxn {\stylesheet {\snext0 Normal;}
{\s2 \tx50 \tqr \tx7281 \qj \li1668 \ri50 \sl258 \sbasedon0 \snext2 OmniPage #1025;}
{\s3 \tx97 \tqr \tx4504 \ql \li1621 \ri2845 \sl304 \sbasedon0 \snext3 OmniPage #1026;}
{\s4 \tx55 \tqr \tx7299 \qj \li1663 \ri50 \sl261 \sbasedon0 \snext4 OmniPage #1027;}
{\s5 \tx50 \tx486 \tqr \tx7280 \qj \li1668 \fi436 \ri69 \sl260 \sbasedon0 \snext5 OmniPage #1028;}
{\s6 \tx50 \tqr \tx3356 \ql \li1668 \ri50 \sl304 \sbasedon0 \snext6 OmniPage #1029;}
{\s7 \tqr \tx7271 \qj \li1668 \ri70 \sl258 \sbasedon0 \snext7 OmniPage #1030;}
{\s8 \tx57 \tx494 \tqr \tx7291 \qj \li1661 \fi437 \ri50 \sl260 \sbasedon0 \snext8 OmniPage #1031;}
{\s9 \tx79 \tqr \tx5655 \ql \li1639 \ri1660 \sl304 \sbasedon0 \snext9 OmniPage #1032;}
{\s10 \tx50 \tqr \tx7265 \qj \li1668 \ri50 \sl259 \sbasedon0 \snext10 OmniPage #1033;}
{\s11 \tqr \tx1248 \ql \sl261 \li1668 \ri50 \sbasedon0 \snext11 OmniPage #1034;}
{\s12 \tqr \tx1457 \ql \sl260 \li1668 \ri50 \sbasedon0 \snext12 OmniPage #1035;}
{\s13 \tqr \tx1252 \ql \sl260 \li1668 \ri50 \sbasedon0 \snext13 OmniPage #1036;}
}\par {\pard \posx1709 \posy128 \phpg \pvpg \absh-3669 \absw7332 \dxfrtext200 \fs24 \f0 \pard \s2 \posx1709 \posy128 \phpg \pvpg \absh-3669 \absw7332 \dxfrtext200 \qj \li50 \ri50 \sl-258 \tx50 \tqr \tx7281 to make room for new data. Some DOS utilities have disk operations whose actual functions are less apparent. These "specialty" DOS opera\-tions are the ones requested by programs operating in the C128. For example, if a mailing list program needs to see the list of names and addresses already stored on a diskette, the mailing list program must make a series of properly organized requests to the disk drive's DOS. The DOS, in turn, uses the requested DOS operations to locate and then send back this data to the program. DOS operations like these are seldom recognized or even used by C128 users who primarily use commercially written programs, but they are important for C128 users who want to write their own programs. Commodore DOS has a number of disk oper\-ations that are primarily used within other C128 programs. The most familiar DOS operations, however, are those used by every disk drive user at one time or another.\par 
}\sect \sectd \linex0 \linemod0 \sbknone \lndscpsxn \marglsxn1649 \margrsxn1462 \pard \sl-258 \tx50 \tqr \tx7281 {\pard \posx1699 \posy4115 \phpg \pvpg \absh-6728 \absw7350 \dxfrtext200 \fs10 \f0 \fs29 \f1 \i \pard \s3 \posx1699 \posy4115 \phpg \pvpg \absh-6728 \absw7350 \dxfrtext200 \li97 \ri2845 \sl-304 \tx97 \tqr \tx4504 Where is Commodore DOS Kept?\par 
\fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s4 \posx1699 \posy4115 \phpg \pvpg \absh-6728 \absw7350 \dxfrtext200 \qj \li55 \ri50 \sl-261 \tx55 \tqr \tx7299 Commodore disk drives are intelligent disk drives. They are intelligent because they have their own internal computer, running under a special Commodore DOS program that allows them to perform routine disk func\-tions and maintenance. What's more, since this DOS program is actually stored in the intelligent disk drive's memory, the drive can do any DOS operation on its own. Most computers need to instruct their drives with a continuous flow of instructions. All the C128 need do is send a single command word or phrase over the serial bus to a Commodore disk drive. The disk drive's computer compares this command against a list of known commands within its own DOS program, selects the appropriate disk function, and the proper DOS operation is performed. Since the Com\-modore disk drive does all the real DOS work, the C128 need only pass along the appropriate commands and then go back to its normal processing activities.\par 
\fs10 \f0 \fs24 \f0 \pard \s5 \posx1699 \posy4115 \phpg \pvpg \absh-6728 \absw7350 \dxfrtext200 \qj \li50 \fi436 \ri69 \sl-260 \tx50 \tx486 \tqr \tx7280 Commodore DOS is stored in ROM in the disk drive. The disk drive has its own computer, with a microprocessor, RAM and ROM memory, and I/O circuits. One advantage to storing DOS in ROM, as opposed to putting it on a diskette, is that a ROM\_based DOS is there and ready for use as soon as the disk drive is turned on. Another advantage is that the memory space needed to store DOS is taken from the disk drive's internal computer, not the C128's. This means there will be more room in the C128's memory for application programs. Finally, keeping DOS in ROM eliminates the need to keep it on your diskettes, therefore all of the diskettes' available storage can be used for programs and data.\par 
}\pard \sl-260 \tx50 \tx486 \tqr \tx7280 {\pard \posx11305 \posy171 \phpg \pvpg \absh-354 \absw3407 \dxfrtext200 \fs10 \f0 \fs29 \f1 \i \pard \s6 \posx11305 \posy171 \phpg \pvpg \absh-354 \absw3407 \dxfrtext200 \li50 \ri50 \sl-304 \tx50 \tqr \tx3356 Are All DOSs the Same?\par 
}\pard \sl-304 \tx50 \tqr \tx3356 \fs24 \f0 {\pard \posx11307 \posy574 \phpg \pvpg \absh-4194 \absw7342 \dxfrtext200 \fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s7 \posx11307 \posy574 \phpg \pvpg \absh-4194 \absw7342 \dxfrtext200 \qj \li50 \ri70 \sl-258 \tx50 \tqr \tx7271 Commodore has three different disk drives that you can connect to the C128\'97the 1541 (designed for the C64), the 1571, and the 1572 (designed to work on any current Commodore computer). All three drives have DOS already built\_in. The 1541's DOS is slightly different than the DOS found in the 1571 and 1572, but there is a high level of compatibility between the two. They are programmed by the user in the same way, but their capabilities differ.\par 
\fs10 \f0 \fs24 \f0 \pard \s8 \posx11307 \posy574 \phpg \pvpg \absh-4194 \absw7342 \dxfrtext200 \qj \li57 \fi437 \ri50 \sl-260 \tx57 \tx494 \tqr \tx7291 Many of the differences between the old and the new DOS have to do with the slower serial bus capabilities of the Commodore 64 and the fact that the 1541 could only access one side of a floppy disk (single\_sided). The new drives are precision instruments that are able to take advantage of the C128's faster serial bus capabilities. They are double\_sided (that is, they use both sides of a floppy disk). Despite these differences, the new drives can read and write to any disks originating from a 1541 (only one side of the disk is used). They do this by changing their DOS "personality" to that of a 1541.\par 
}\pard \sl-260 \tx57 \tx494 \tqr \tx7291 {\pard \posx11328 \posy5084 \phpg \pvpg \absh-3322 \absw7316 \dxfrtext200 \fs10 \f0 \fs29 \f1 \i \pard \s9 \posx11328 \posy5084 \phpg \pvpg \absh-3322 \absw7316 \dxfrtext200 \li79 \ri1660 \sl-304 \tx79 \tqr \tx5655 What Tasks Can the DOS Perform for Me?\par 
\fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s10 \posx11328 \posy5084 \phpg \pvpg \absh-3322 \absw7316 \dxfrtext200 \qj \li50 \ri50 \sl-259 \tx50 \tqr \tx7265 Since DOS is stored in the Commodore disk drive, it is running as soon as you turn on the disk drive's power. Thereafter, in order to get DOS to do something for you, all you need to do is get its attention and send it a command. Fortunately, the C128 has a complete set of easy to use DOS commands and statements that are accessible through BASIC 7.0. You will note that many of these commands and statements are similar to one another. This slight redundancy was necessary in order to remain com\-patible with the DOS structure used in BASIC 2.0 (Commodore 64), while providing an alternate set of disk\_based commands and statements that are easier to remember and use. Here is a list of these new DOS commands and statements:\par 
}\pard \sl-259 \tx50 \tqr \tx7265 {\pard \posx12778 \posy8616 \phpg \pvpg \absh-2144 \absw1299 \dxfrtext200 \fs10 \f0 \fs24 \f0 \pard \s11 \posx12778 \posy8616 \phpg \pvpg \absh-2144 \absw1299 \dxfrtext200 \li50 \ri50 \sl-261 \tx50 \tqr \tx1248 APPEND\par 
\pard \s11 \posx12778 \posy8616 \phpg \pvpg \absh-2144 \absw1299 \dxfrtext200 \li50 \ri50 \sl-261 \tx50 \tqr \tx1248 BACKUP\par 
\pard \s11 \posx12778 \posy8616 \phpg \pvpg \absh-2144 \absw1299 \dxfrtext200 \li50 \ri50 \sl-261 \tx50 \tqr \tx1248 BLOAD\par 
\pard \s11 \posx12778 \posy8616 \phpg \pvpg \absh-2144 \absw1299 \dxfrtext200 \li50 \ri50 \sl-261 \tx50 \tqr \tx1248 BOOT\par 
\pard \s11 \posx12778 \posy8616 \phpg \pvpg \absh-2144 \absw1299 \dxfrtext200 \li50 \ri50 \sl-261 \tx50 \tqr \tx1248 BSAVE\par 
\pard \s11 \posx12778 \posy8616 \phpg \pvpg \absh-2144 \absw1299 \dxfrtext200 \li50 \ri50 \sl-261 \tx50 \tqr \tx1248 CATALOG\par 
\pard \s11 \posx12778 \posy8616 \phpg \pvpg \absh-2144 \absw1299 \dxfrtext200 \li50 \ri50 \sl-261 \tx50 \tqr \tx1248 CLOSE\par 
\pard \s11 \posx12778 \posy8616 \phpg \pvpg \absh-2144 \absw1299 \dxfrtext200 \li50 \ri50 \sl-261 \tx50 \tqr \tx1248 COLLECT\par 
}\pard \sl-261 \tx50 \tqr \tx1248 {\pard \posx14299 \posy8618 \phpg \pvpg \absh-2398 \absw1508 \dxfrtext200 \fs10 \f0 \fs24 \f0 \pard \s12 \posx14299 \posy8618 \phpg \pvpg \absh-2398 \absw1508 \dxfrtext200 \li50 \ri50 \sl-260 \tx50 \tqr \tx1457 CONCAT\par 
\pard \s12 \posx14299 \posy8618 \phpg \pvpg \absh-2398 \absw1508 \dxfrtext200 \li50 \ri50 \sl-260 \tx50 \tqr \tx1457 COPY\par 
\pard \s12 \posx14299 \posy8618 \phpg \pvpg \absh-2398 \absw1508 \dxfrtext200 \li50 \ri50 \sl-260 \tx50 \tqr \tx1457 DCLEAR\par 
\pard \s12 \posx14299 \posy8618 \phpg \pvpg \absh-2398 \absw1508 \dxfrtext200 \li50 \ri50 \sl-260 \tx50 \tqr \tx1457 DCLOSE\par 
\pard \s12 \posx14299 \posy8618 \phpg \pvpg \absh-2398 \absw1508 \dxfrtext200 \li50 \ri50 \sl-260 \tx50 \tqr \tx1457 DIRECTORY\par 
\pard \s12 \posx14299 \posy8618 \phpg \pvpg \absh-2398 \absw1508 \dxfrtext200 \li50 \ri50 \sl-260 \tx50 \tqr \tx1457 DLOAD\par 
\pard \s12 \posx14299 \posy8618 \phpg \pvpg \absh-2398 \absw1508 \dxfrtext200 \li50 \ri50 \sl-260 \tx50 \tqr \tx1457 DSAVE\par 
\pard \s12 \posx14299 \posy8618 \phpg \pvpg \absh-2398 \absw1508 \dxfrtext200 \li50 \ri50 \sl-260 \tx50 \tqr \tx1457 DVERIFY\par 
\pard \s12 \posx14299 \posy8618 \phpg \pvpg \absh-2398 \absw1508 \dxfrtext200 \li50 \ri50 \sl-260 \tx50 \tqr \tx1457 DOPEN\par 
}\pard \sl-260 \tx50 \tqr \tx1457 {\pard \posx16040 \posy8608 \phpg \pvpg \absh-2139 \absw1303 \dxfrtext200 \fs10 \f0 \fs24 \f0 \pard \s13 \posx16040 \posy8608 \phpg \pvpg \absh-2139 \absw1303 \dxfrtext200 \li50 \ri50 \sl-260 \tx50 \tqr \tx1252 HEADER\par 
\pard \s13 \posx16040 \posy8608 \phpg \pvpg \absh-2139 \absw1303 \dxfrtext200 \li50 \ri50 \sl-260 \tx50 \tqr \tx1252 LOAD\par 
\pard \s13 \posx16040 \posy8608 \phpg \pvpg \absh-2139 \absw1303 \dxfrtext200 \li50 \ri50 \sl-260 \tx50 \tqr \tx1252 OPEN\par 
\pard \s13 \posx16040 \posy8608 \phpg \pvpg \absh-2139 \absw1303 \dxfrtext200 \li50 \ri50 \sl-260 \tx50 \tqr \tx1252 RECORD\par 
\pard \s13 \posx16040 \posy8608 \phpg \pvpg \absh-2139 \absw1303 \dxfrtext200 \li50 \ri50 \sl-260 \tx50 \tqr \tx1252 RENAME\par 
\pard \s13 \posx16040 \posy8608 \phpg \pvpg \absh-2139 \absw1303 \dxfrtext200 \li50 \ri50 \sl-260 \tx50 \tqr \tx1252 SAVE\par 
\pard \s13 \posx16040 \posy8608 \phpg \pvpg \absh-2139 \absw1303 \dxfrtext200 \li50 \ri50 \sl-260 \tx50 \tqr \tx1252 SCRATCH\par 
\pard \s13 \posx16040 \posy8608 \phpg \pvpg \absh-2139 \absw1303 \dxfrtext200 \li50 \ri50 \sl-260 \tx50 \tqr \tx1252 VERIFY\par 
}\pard \sl-260 \tx50 \tqr \tx1252 \page \lndscpsxn {\stylesheet {\snext0 Normal;}
{\s2 \tx50 \tx487 \tqr \tx7281 \qj \li1668 \fi437 \ri50 \sl256 \sbasedon0 \snext2 OmniPage #1281;}
{\s3 \tx50 \tqr \tx1187 \ql \sl253 \li1668 \ri50 \sbasedon0 \snext3 OmniPage #1282;}
{\s4 \tqr \tx7268 \qj \li1668 \ri50 \sl265 \sbasedon0 \snext4 OmniPage #1283;}
{\s5 \tqr \tx1187 \ql \sl253 \li1668 \ri50 \sbasedon0 \snext5 OmniPage #1284;}
{\s6 \tqr \tx7276 \qj \li1668 \ri50 \sl262 \sbasedon0 \snext6 OmniPage #1285;}
{\s7 \tqr \tx1050 \ql \sl253 \li1668 \ri50 \sbasedon0 \snext7 OmniPage #1286;}
{\s8 \tqr \tx7292 \qj \li1668 \ri50 \sl261 \sbasedon0 \snext8 OmniPage #1287;}
{\s9 \tqr \tx892 \ql \sl253 \li1668 \ri50 \sbasedon0 \snext9 OmniPage #1288;}
{\s10 \tqr \tx7258 \qj \li1668 \ri50 \sl263 \sbasedon0 \snext10 OmniPage #1289;}
{\s11 \tqr \tx977 \ql \sl253 \li1668 \ri50 \sbasedon0 \snext11 OmniPage #1290;}
{\s12 \tqr \tx7295 \qj \li1668 \ri50 \sl261 \sbasedon0 \snext12 OmniPage #1291;}
{\s13 \tqr \tx1303 \qj \li1668 \ri50 \sl253 \sbasedon0 \snext13 OmniPage #1292;}
{\s14 \tqr \tx7289 \qj \li1668 \ri50 \sl258 \sbasedon0 \snext14 OmniPage #1293;}
{\s15 \tqr \tx1003 \ql \sl253 \li1668 \ri50 \sbasedon0 \snext15 OmniPage #1294;}
{\s16 \tqr \tx7275 \qj \li1668 \ri50 \sl260 \sbasedon0 \snext16 OmniPage #1295;}
{\s17 \tx52 \tqr \tx1300 \ql \sl253 \li1666 \ri5988 \sbasedon0 \snext17 OmniPage #1296;}
{\s18 \tx50 \tqr \tx7238 \qj \li1668 \ri50 \sl260 \sbasedon0 \snext18 OmniPage #1297;}
{\s19 \tqr \tx1183 \ql \sl253 \li1668 \ri50 \sbasedon0 \snext19 OmniPage #1298;}
{\s20 \tqr \tx7258 \qj \li1668 \ri50 \sl260 \sbasedon0 \snext20 OmniPage #1299;}
{\s21 \tqr \tx844 \ql \sl261 \li1668 \ri50 \sbasedon0 \snext21 OmniPage #1300;}
{\s22 \tqr \tx7270 \qj \li1668 \ri50 \sl260 \sbasedon0 \snext22 OmniPage #1301;}
{\s23 \tqr \tx1185 \ql \sl253 \li1668 \ri50 \sbasedon0 \snext23 OmniPage #1302;}
{\s24 \tqr \tx7268 \qj \li1668 \ri50 \sl261 \sbasedon0 \snext24 OmniPage #1303;}
{\s25 \tqr \tx1165 \ql \sl253 \li1668 \ri50 \sbasedon0 \snext25 OmniPage #1304;}
{\s26 \tqr \tx7264 \qj \li1668 \ri50 \sl259 \sbasedon0 \snext26 OmniPage #1305;}
}\par {\pard \posx1639 \posy205 \phpg \pvpg \absh-2108 \absw7332 \dxfrtext200 \fs24 \f0 \pard \s2 \posx1639 \posy205 \phpg \pvpg \absh-2108 \absw7332 \dxfrtext200 \qj \li50 \fi437 \ri50 \sl-256 \tx50 \tx487 \tqr \tx7281 Let's review these DOS commands and statements one by one. Those that are referred to as "commands" can be entered directly on the key\-board and can often be included within a program as well. Those listed specifically as "statements" are generally used from within programs only, so they will be of most use to C128 owners who plan to do their own programming using BASIC 7.0. The descriptions we give here are just meant to give you a feel for their functions. Complete details on the actual syntax and modifiers can be found in C128 Users Guide.\par 
}\sect \sectd \linex0 \linemod0 \sbknone \lndscpsxn \marglsxn1554 \margrsxn1532 \pard \sl-256 \tx50 \tx487 \tqr \tx7281 {\pard \posx1647 \posy2505 \phpg \pvpg \absh-315 \absw1238 \dxfrtext200 \fs10 \f0 \fs24 \f1 \b \pard \s3 \posx1647 \posy2505 \phpg \pvpg \absh-315 \absw1238 \dxfrtext200 \li50 \ri50 \sl-253 \tx50 \tqr \tx1187 APPEND\par 
}\pard \sl-253 \tx50 \tqr \tx1187 \fs24 \f0 {\pard \posx1634 \posy2888 \phpg \pvpg \absh-580 \absw7319 \dxfrtext200 \fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s4 \posx1634 \posy2888 \phpg \pvpg \absh-580 \absw7319 \dxfrtext200 \qj \li50 \ri50 \sl-265 \tx50 \tqr \tx7268 The APPEND command is a special "open file" command that is used to add new data to the end of an existing file.\par 
}\pard \sl-265 \tx50 \tqr \tx7268 {\pard \posx1648 \posy3650 \phpg \pvpg \absh-315 \absw1238 \dxfrtext200 \fs10 \f0 \fs24 \f1 \b \pard \s5 \posx1648 \posy3650 \phpg \pvpg \absh-315 \absw1238 \dxfrtext200 \li50 \ri50 \sl-253 \tx50 \tqr \tx1187 BACKUP\par 
}\pard \sl-253 \tx50 \tqr \tx1187 \fs24 \f0 {\pard \posx1628 \posy4033 \phpg \pvpg \absh-840 \absw7327 \dxfrtext200 \fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s6 \posx1628 \posy4033 \phpg \pvpg \absh-840 \absw7327 \dxfrtext200 \qj \li50 \ri50 \sl-262 \tx50 \tqr \tx7276 The BACKUP command copies all files from one diskette onto another. This command can only be used with a dual drive system like the 1572 and it will not back up "copy protected" software.\par 
}\pard \sl-262 \tx50 \tqr \tx7276 {\pard \posx1640 \posy5055 \phpg \pvpg \absh-315 \absw1101 \dxfrtext200 \fs10 \f0 \fs24 \f1 \b \pard \s7 \posx1640 \posy5055 \phpg \pvpg \absh-315 \absw1101 \dxfrtext200 \li50 \ri50 \sl-253 \tx50 \tqr \tx1050 BLOAD\par 
}\pard \sl-253 \tx50 \tqr \tx1050 \fs24 \f0 {\pard \posx1616 \posy5439 \phpg \pvpg \absh-2408 \absw7343 \dxfrtext200 \fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s8 \posx1616 \posy5439 \phpg \pvpg \absh-2408 \absw7343 \dxfrtext200 \qj \li50 \ri50 \sl-261 \tx50 \tqr \tx7292 This command is used to load binary\_type files from a disk. The C128 has two disk specific file loading commands\'97DLOAD and BLOAD. DLOAD is used on files such as BASIC programs that are always placed in the same area of memory. However, not all programs are in BASIC so they don't necessarily go to that same portion of memory. Binary files can go just about any place in memory. Where they go during a load should be determined by the load address parameters that BSAVE automatically tags onto them when they are originally saved. BLOAD reads these param\-eters and puts the binary files back where they belong (see BSAVE).\par 
}\pard \sl-261 \tx50 \tqr \tx7292 {\pard \posx1630 \posy8030 \phpg \pvpg \absh-315 \absw943 \dxfrtext200 \fs10 \f0 \fs24 \f1 \b \pard \s9 \posx1630 \posy8030 \phpg \pvpg \absh-315 \absw943 \dxfrtext200 \li50 \ri50 \sl-253 \tx50 \tqr \tx892 BOOT\par 
}\pard \sl-253 \tx50 \tqr \tx892 \fs24 \f0 {\pard \posx1616 \posy8413 \phpg \pvpg \absh-1104 \absw7309 \dxfrtext200 \fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s10 \posx1616 \posy8413 \phpg \pvpg \absh-1104 \absw7309 \dxfrtext200 \qj \li50 \ri50 \sl-263 \tx50 \tqr \tx7258 BOOT is a completely new DOS command for Commodore computers. It is used to load (and subsequently run) an executable binary file from a disk. Like BLOAD, it does not automatically relocate the file to the start of BASIC memory.\par 
}\pard \sl-263 \tx50 \tqr \tx7258 {\pard \posx1623 \posy9699 \phpg \pvpg \absh-315 \absw1028 \dxfrtext200 \fs10 \f0 \fs24 \f1 \b \pard \s11 \posx1623 \posy9699 \phpg \pvpg \absh-315 \absw1028 \dxfrtext200 \li50 \ri50 \sl-253 \tx50 \tqr \tx977 BSAVE\par 
}\pard \sl-253 \tx50 \tqr \tx977 \fs24 \f0 {\pard \posx1604 \posy10083 \phpg \pvpg \absh-1099 \absw7346 \dxfrtext200 \fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s12 \posx1604 \posy10083 \phpg \pvpg \absh-1099 \absw7346 \dxfrtext200 \qj \li50 \ri50 \sl-261 \tx50 \tqr \tx7295 B SAVE is the binary file variation of DSAVE. It is used to save a segment of C128 memory to a binary disk file. Files created in this manner must be not be loaded with DLOAD as they would be automatically relocated to BASIC memory. Instead they should be loaded with BLOAD (see BLOAD).\par 
}\pard \sl-261 \tx50 \tqr \tx7295 {\pard \posx11144 \posy251 \phpg \pvpg \absh-315 \absw1354 \dxfrtext200 \fs10 \f0 \fs24 \f1 \b \pard \s13 \posx11144 \posy251 \phpg \pvpg \absh-315 \absw1354 \dxfrtext200 \qj \li50 \ri50 \sl-253 \tx50 \tqr \tx1303 CATALOG\par 
}\pard \sl-253 \tx50 \tqr \tx1303 \fs24 \f0 {\pard \posx11203 \posy629 \phpg \pvpg \absh-2380 \absw7340 \dxfrtext200 \fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s14 \posx11203 \posy629 \phpg \pvpg \absh-2380 \absw7340 \dxfrtext200 \qj \li50 \ri50 \sl-258 \tx50 \tqr \tx7289 This command is used to read the contents of a diskette's file directory. Its operation is quite different from the C64 method of viewing a directory \'97LOAD"$",8:LIST. The old command did not work well on long direc\-tory listings because you could not stop and start the display once it started scrolling. Also the old method actually loaded the directory into memory as if it were a BASIC file, thus overwriting any BASIC programs already in memory. The CATALOG command corrects both of these defi\-ciencies: its display scrolling can be controlled, and it is loaded directly into screen memory so as not to disrupt BASIC programs (see DIRECTORY).\par 
}\pard \sl-258 \tx50 \tqr \tx7289 {\pard \posx11227 \posy3196 \phpg \pvpg \absh-315 \absw1054 \dxfrtext200 \fs10 \f0 \fs24 \f1 \b \pard \s15 \posx11227 \posy3196 \phpg \pvpg \absh-315 \absw1054 \dxfrtext200 \li50 \ri50 \sl-253 \tx50 \tqr \tx1003 CLOSE\par 
}\pard \sl-253 \tx50 \tqr \tx1003 \fs24 \f0 {\pard \posx11215 \posy3574 \phpg \pvpg \absh-1095 \absw7326 \dxfrtext200 \fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s16 \posx11215 \posy3574 \phpg \pvpg \absh-1095 \absw7326 \dxfrtext200 \qj \li50 \ri50 \sl-260 \tx50 \tqr \tx7275 This statement completes and closes any files previously opened by either DOPEN or OPEN statements. CLOSE is normally used only in programs and is applicable to files of all types, including those meant for a printer or modem.\par 
}\pard \sl-260 \tx50 \tqr \tx7275 {\pard \posx11238 \posy4856 \phpg \pvpg \absh-954 \absw7289 \dxfrtext200 \fs10 \f0 \fs24 \f1 \b \pard \s17 \posx11238 \posy4856 \phpg \pvpg \absh-954 \absw7289 \dxfrtext200 \li52 \ri5988 \sl-253 \tx52 \tqr \tx1300 COLLECT\par 
\fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s18 \posx11238 \posy4856 \phpg \pvpg \absh-954 \absw7289 \dxfrtext200 \qj \li50 \ri50 \sl-260 \tx50 \tqr \tx7238 This command is used to reclaim disk space that is currently allocated to improperly closed files.\par 
}\pard \sl-260 \tx50 \tqr \tx7238 {\pard \posx11245 \posy6002 \phpg \pvpg \absh-315 \absw1234 \dxfrtext200 \fs10 \f0 \fs24 \f1 \b \pard \s19 \posx11245 \posy6002 \phpg \pvpg \absh-315 \absw1234 \dxfrtext200 \li50 \ri50 \sl-253 \tx50 \tqr \tx1183 CONCAT\par 
}\pard \sl-253 \tx50 \tqr \tx1183 \fs24 \f0 {\pard \posx11243 \posy6380 \phpg \pvpg \absh-575 \absw7309 \dxfrtext200 \fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s20 \posx11243 \posy6380 \phpg \pvpg \absh-575 \absw7309 \dxfrtext200 \qj \li50 \ri50 \sl-260 \tx50 \tqr \tx7258 The CONCAT command (derived from the word concatenate) is used to merge two data files together.\par 
}\pard \sl-260 \tx50 \tqr \tx7258 {\pard \posx11256 \posy7150 \phpg \pvpg \absh-315 \absw895 \dxfrtext200 \fs10 \f0 \fs24 \f0 \pard \s21 \posx11256 \posy7150 \phpg \pvpg \absh-315 \absw895 \dxfrtext200 \li50 \ri50 \sl-261 \tx50 \tqr \tx844 COPY\par 
}\pard \sl-261 \tx50 \tqr \tx844 {\pard \posx11243 \posy7530 \phpg \pvpg \absh-835 \absw7321 \dxfrtext200 \fs10 \f0 \fs24 \f0 \pard \s22 \posx11243 \posy7530 \phpg \pvpg \absh-835 \absw7321 \dxfrtext200 \qj \li50 \ri50 \sl-260 \tx50 \tqr \tx7270 COPY is used to make copies of files. It can be used to copy from one disk to another (which requires a dual\_disk drive) and it can be used to create a second copy of a file under a different name on the same disk.\par 
}\pard \sl-260 \tx50 \tqr \tx7270 {\pard \posx11262 \posy8552 \phpg \pvpg \absh-315 \absw1236 \dxfrtext200 \fs10 \f0 \fs24 \f1 \b \pard \s23 \posx11262 \posy8552 \phpg \pvpg \absh-315 \absw1236 \dxfrtext200 \li50 \ri50 \sl-253 \tx50 \tqr \tx1185 DCLEAR\par 
}\pard \sl-253 \tx50 \tqr \tx1185 \fs24 \f0 {\pard \posx11260 \posy8936 \phpg \pvpg \absh-1099 \absw7319 \dxfrtext200 \fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s24 \posx11260 \posy8936 \phpg \pvpg \absh-1099 \absw7319 \dxfrtext200 \qj \li50 \ri50 \sl-261 \tx50 \tqr \tx7268 This statement clears the contents of all currently open channels to disk files. It is used by programmers to insure the removal of any old data that may have been left in a channel from some previous file operation (see DCLOSE).\par 
}\pard \sl-261 \tx50 \tqr \tx7268 {\pard \posx11275 \posy10218 \phpg \pvpg \absh-315 \absw1216 \dxfrtext200 \fs10 \f0 \fs24 \f1 \b \pard \s25 \posx11275 \posy10218 \phpg \pvpg \absh-315 \absw1216 \dxfrtext200 \li50 \ri50 \sl-253 \tx50 \tqr \tx1165 DCLOSE\par 
}\pard \sl-253 \tx50 \tqr \tx1165 \fs24 \f0 {\pard \posx11263 \posy10606 \phpg \pvpg \absh-574 \absw7315 \dxfrtext200 \fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s26 \posx11263 \posy10606 \phpg \pvpg \absh-574 \absw7315 \dxfrtext200 \qj \li50 \ri50 \sl-259 \tx50 \tqr \tx7264 DCLOSE is used to close one or all currently opened channels to the disk drive. The term channel is used to indicate a specific communication\par 
}\pard \sl-259 \tx50 \tqr \tx7264 \page \lndscpsxn {\stylesheet {\snext0 Normal;}
{\s2 \tx50 \tqr \tx7283 \qj \li1668 \ri50 \sl252 \sbasedon0 \snext2 OmniPage #1537;}
{\s3 \tqr \tx1594 \ql \sl253 \li1668 \ri50 \sbasedon0 \snext3 OmniPage #1538;}
{\s4 \tqr \tx7254 \qj \li1668 \ri50 \sl265 \sbasedon0 \snext4 OmniPage #1539;}
{\s5 \tqr \tx1029 \ql \sl253 \li1668 \ri50 \sbasedon0 \snext5 OmniPage #1540;}
{\s6 \tqr \tx7268 \qj \li1668 \ri50 \sl260 \sbasedon0 \snext6 OmniPage #1541;}
{\s7 \tqr \tx991 \ql \sl253 \li1668 \ri50 \sbasedon0 \snext7 OmniPage #1542;}
{\s8 \tqr \tx7277 \qj \li1668 \ri50 \sl260 \sbasedon0 \snext8 OmniPage #1543;}
{\s9 \tqr \tx1271 \ql \sl253 \li1668 \ri50 \sbasedon0 \snext9 OmniPage #1544;}
{\s10 \tqr \tx7263 \qj \li1668 \ri50 \sl265 \sbasedon0 \snext10 OmniPage #1545;}
{\s11 \tqr \tx1199 \ql \sl253 \li1668 \ri50 \sbasedon0 \snext11 OmniPage #1546;}
{\s12 \tqr \tx7278 \qj \li1668 \ri50 \sl262 \sbasedon0 \snext12 OmniPage #1547;}
{\s13 \tqr \tx886 \ql \sl253 \li1668 \ri50 \sbasedon0 \snext13 OmniPage #1548;}
{\s14 \tqr \tx7277 \qj \li1668 \ri50 \sl261 \sbasedon0 \snext14 OmniPage #1549;}
{\s15 \tqr \tx1204 \ql \sl268 \li1668 \ri50 \sbasedon0 \snext15 OmniPage #1550;}
{\s16 \tqr \tx7273 \qj \li1668 \ri50 \sl264 \sbasedon0 \snext16 OmniPage #1551;}
{\s17 \tqr \tx426 \ql \sl450 \li1668 \ri50 \sbasedon0 \snext17 OmniPage #1552;}
{\s18 \tqr \tx1242 \ql \sl253 \li1668 \ri50 \sbasedon0 \snext18 OmniPage #1553;}
{\s19 \tqr \tx7269 \qj \li1668 \ri50 \sl269 \sbasedon0 \snext19 OmniPage #1554;}
{\s20 \tqr \tx820 \ql \sl253 \li1668 \ri50 \sbasedon0 \snext20 OmniPage #1555;}
{\s21 \tqr \tx7278 \qj \li1668 \ri50 \sl259 \sbasedon0 \snext21 OmniPage #1556;}
{\s22 \tqr \tx1343 \ql \sl253 \li1668 \ri50 \sbasedon0 \snext22 OmniPage #1557;}
{\s23 \tqr \tx7273 \qj \li1668 \ri50 \sl258 \sbasedon0 \snext23 OmniPage #1558;}
{\s24 \tqr \tx1095 \ql \sl253 \li1668 \ri50 \sbasedon0 \snext24 OmniPage #1559;}
{\s25 \tqr \tx7262 \qj \li1668 \ri50 \sl264 \sbasedon0 \snext25 OmniPage #1560;}
{\s26 \tx78 \tqr \tx3233 \ql \li1640 \ri4101 \sl312 \sbasedon0 \snext26 OmniPage #1561;}
{\s27 \tx50 \tqr \tx7284 \qj \li1668 \ri50 \sl259 \sbasedon0 \snext27 OmniPage #1562;}
{\s28 \tqr \tx4000 \ql \li1668 \ri50 \sl318 \sbasedon0 \snext28 OmniPage #1563;}
{\s29 \tqr \tx7277 \ql \li1668 \ri50 \sl260 \sbasedon0 \snext29 OmniPage #1564;}
}\par {\pard \posx1697 \posy174 \phpg \pvpg \absh-1328 \absw7334 \dxfrtext200 \fs24 \f0 \pard \s2 \posx1697 \posy174 \phpg \pvpg \absh-1328 \absw7334 \dxfrtext200 \qj \li50 \ri50 \sl-252 \tx50 \tqr \tx7283 path \fs24 \f1 \b between \fs24 \f0 \plain \lang1033 the C128 and the disk drive's internal computer. Under normal operation there can be a number of channels open (each to dif\-ferent files), but there is a finite limit to just how many are open at any one time. The DCLOSE statement is issued by a program to close channels that are no longer needed (see DOPEN).\par 
}\sect \sectd \linex0 \linemod0 \sbknone \lndscpsxn \marglsxn1638 \margrsxn1546 \pard \sl-252 \tx50 \tqr \tx7283 {\pard \posx1712 \posy1699 \phpg \pvpg \absh-315 \absw1645 \dxfrtext200 \fs10 \f0 \fs24 \f1 \b \pard \s3 \posx1712 \posy1699 \phpg \pvpg \absh-315 \absw1645 \dxfrtext200 \li50 \ri50 \sl-253 \tx50 \tqr \tx1594 DIRECTORY\par 
}\pard \sl-253 \tx50 \tqr \tx1594 \fs24 \f0 {\pard \posx1708 \posy2080 \phpg \pvpg \absh-582 \absw7305 \dxfrtext200 \fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s4 \posx1708 \posy2080 \phpg \pvpg \absh-582 \absw7305 \dxfrtext200 \qj \li50 \ri50 \sl-265 \tx50 \tqr \tx7254 The DIRECTORY command displays a disk directory on the \fs26 \f2 C128 \fs24 \f0 screen (same as CATALOG).\par 
}\pard \sl-265 \tx50 \tqr \tx7254 {\pard \posx1713 \posy2854 \phpg \pvpg \absh-315 \absw1080 \dxfrtext200 \fs10 \f0 \fs24 \f1 \b \pard \s5 \posx1713 \posy2854 \phpg \pvpg \absh-315 \absw1080 \dxfrtext200 \li50 \ri50 \sl-253 \tx50 \tqr \tx1029 DOPEN\par 
}\pard \sl-253 \tx50 \tqr \tx1029 \fs24 \f0 {\pard \posx1709 \posy3237 \phpg \pvpg \absh-575 \absw7319 \dxfrtext200 \fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s6 \posx1709 \posy3237 \phpg \pvpg \absh-575 \absw7319 \dxfrtext200 \qj \li50 \ri50 \sl-260 \tx50 \tqr \tx7268 This statement is used to open a communication channel to a disk drive. It is a disk\_specific version of the OPEN statement.\par 
}\pard \sl-260 \tx50 \tqr \tx7268 {\pard \posx1709 \posy4004 \phpg \pvpg \absh-315 \absw1042 \dxfrtext200 \fs10 \f0 \fs24 \f1 \b \pard \s7 \posx1709 \posy4004 \phpg \pvpg \absh-315 \absw1042 \dxfrtext200 \li50 \ri50 \sl-253 \tx50 \tqr \tx991 DSAVE\par 
}\pard \sl-253 \tx50 \tqr \tx991 \fs24 \f0 {\pard \posx1696 \posy4392 \phpg \pvpg \absh-835 \absw7328 \dxfrtext200 \fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s8 \posx1696 \posy4392 \phpg \pvpg \absh-835 \absw7328 \dxfrtext200 \qj \li50 \ri50 \sl-260 \tx50 \tqr \tx7277 The DSAVE command saves a program currently located in BASIC mem\-ory to a disk file. It is a disk\_specific form of the SAVE command (see BSAVE).\par 
}\pard \sl-260 \tx50 \tqr \tx7277 {\pard \posx1710 \posy5419 \phpg \pvpg \absh-315 \absw1322 \dxfrtext200 \fs10 \f0 \fs24 \f1 \b \pard \s9 \posx1710 \posy5419 \phpg \pvpg \absh-315 \absw1322 \dxfrtext200 \li50 \ri50 \sl-253 \tx50 \tqr \tx1271 DVERIFY\par 
}\pard \sl-253 \tx50 \tqr \tx1271 \fs24 \f0 {\pard \posx1696 \posy5802 \phpg \pvpg \absh-580 \absw7314 \dxfrtext200 \fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s10 \posx1696 \posy5802 \phpg \pvpg \absh-580 \absw7314 \dxfrtext200 \qj \li50 \ri50 \sl-265 \tx50 \tqr \tx7263 This command is used to compare a program in memory with one in a disk file. This is a disk\_specific version of VERIFY.\par 
}\pard \sl-265 \tx50 \tqr \tx7263 {\pard \posx1711 \posy6574 \phpg \pvpg \absh-315 \absw1250 \dxfrtext200 \fs10 \f0 \fs24 \f1 \b \pard \s11 \posx1711 \posy6574 \phpg \pvpg \absh-315 \absw1250 \dxfrtext200 \li50 \ri50 \sl-253 \tx50 \tqr \tx1199 HEADER\par 
}\pard \sl-253 \tx50 \tqr \tx1199 \fs24 \f0 {\pard \posx1692 \posy6957 \phpg \pvpg \absh-1364 \absw7329 \dxfrtext200 \fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s12 \posx1692 \posy6957 \phpg \pvpg \absh-1364 \absw7329 \dxfrtext200 \qj \li50 \ri50 \sl-262 \tx50 \tqr \tx7278 The HEADER command is used to prepare a new diskette for its first write and read operations. It formats a blank diskette into storage blocks and then establishes a fresh block allocation table and a blank disk direc\-tory. It also gives the disk a specific disk title and ID code. This is a destructive command as it totally erases any files already on a diskette.\par 
}\pard \sl-262 \tx50 \tqr \tx7278 {\pard \posx1707 \posy8514 \phpg \pvpg \absh-315 \absw937 \dxfrtext200 \fs10 \f0 \fs24 \f1 \b \pard \s13 \posx1707 \posy8514 \phpg \pvpg \absh-315 \absw937 \dxfrtext200 \li50 \ri50 \sl-253 \tx50 \tqr \tx886 LOAD\par 
}\pard \sl-253 \tx50 \tqr \tx886 \fs24 \f0 {\pard \posx1688 \posy8897 \phpg \pvpg \absh-1099 \absw7328 \dxfrtext200 \fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s14 \posx1688 \posy8897 \phpg \pvpg \absh-1099 \absw7328 \dxfrtext200 \qj \li50 \ri50 \sl-261 \tx50 \tqr \tx7277 LOAD is used to load a file from either a Dataset or a disk drive. Variations of this command can be used for regular file types (BASIC programs) and binary file types (non\_relocatable machine language programs of data) (see SAVE ).\par 
}\pard \sl-261 \tx50 \tqr \tx7277 {\pard \posx1703 \posy10191 \phpg \pvpg \absh-315 \absw1255 \dxfrtext200 \fs10 \f0 \fs24 \f0 \pard \s15 \posx1703 \posy10191 \phpg \pvpg \absh-315 \absw1255 \dxfrtext200 \li50 \ri50 \sl-268 \tx50 \tqr \tx1204 RECORD\par 
}\pard \sl-268 \tx50 \tqr \tx1204 {\pard \posx1689 \posy10572 \phpg \pvpg \absh-579 \absw7324 \dxfrtext200 \fs10 \f0 \fs24 \f0 \pard \s16 \posx1689 \posy10572 \phpg \pvpg \absh-579 \absw7324 \dxfrtext200 \qj \li50 \ri50 \sl-264 \tx50 \tqr \tx7273 This statement is used from within a program as a relative file pointer to select any byte of any record in a relative file.\par 
}\pard \sl-264 \tx50 \tqr \tx7273 {\pard \posx10384 \posy0 \phpg \pvpg \absh-430 \absw477 \dxfrtext200 \fs10 \f0 \fs48 \f3 \pard \s17 \posx10384 \posy0 \phpg \pvpg \absh-430 \absw477 \dxfrtext200 \li50 \ri50 \sl-450 \tx50 \tqr \tx426 r\par 
}\pard \sl-450 \tx50 \tqr \tx426 \fs24 \f0 {\pard \posx11211 \posy212 \phpg \pvpg \absh-315 \absw1293 \dxfrtext200 \fs10 \f0 \fs24 \f1 \b \pard \s18 \posx11211 \posy212 \phpg \pvpg \absh-315 \absw1293 \dxfrtext200 \li50 \ri50 \sl-253 \tx50 \tqr \tx1242 RENAME\par 
}\pard \sl-253 \tx50 \tqr \tx1242 \fs24 \f0 {\pard \posx11197 \posy566 \phpg \pvpg \absh-854 \absw7320 \dxfrtext200 \fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s19 \posx11197 \posy566 \phpg \pvpg \absh-854 \absw7320 \dxfrtext200 \qj \li50 \ri50 \sl-269 \tx50 \tqr \tx7269 The RENAME command is used to change the name of a disk file. You should note that no two files on a single diskette can ever have the same name.\par 
}\pard \sl-269 \tx50 \tqr \tx7269 {\pard \posx11217 \posy1612 \phpg \pvpg \absh-315 \absw871 \dxfrtext200 \fs10 \f0 \fs24 \f1 \b \pard \s20 \posx11217 \posy1612 \phpg \pvpg \absh-315 \absw871 \dxfrtext200 \li50 \ri50 \sl-253 \tx50 \tqr \tx820 SAVE\par 
}\pard \sl-253 \tx50 \tqr \tx820 \fs24 \f0 {\pard \posx11208 \posy1986 \phpg \pvpg \absh-1354 \absw7329 \dxfrtext200 \fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s21 \posx11208 \posy1986 \phpg \pvpg \absh-1354 \absw7329 \dxfrtext200 \qj \li50 \ri50 \sl-259 \tx50 \tqr \tx7278 This version of DSAVE can be used to save a file to any legal Commodore destination device such as a dataset, a screen, a modem, a printer, or a disk drive. It can only be used to save a program located in the standard BASIC memory area. Binary\_type programs must be saved using the \fs26 \f2 C128's \fs24 \f0 built\_in MONITOR utility (see LOAD).\par 
}\pard \sl-259 \tx50 \tqr \tx7278 {\pard \posx11223 \posy3532 \phpg \pvpg \absh-315 \absw1394 \dxfrtext200 \fs10 \f0 \fs24 \f1 \b \pard \s22 \posx11223 \posy3532 \phpg \pvpg \absh-315 \absw1394 \dxfrtext200 \li50 \ri50 \sl-253 \tx50 \tqr \tx1343 SCRATCH\par 
}\pard \sl-253 \tx50 \tqr \tx1343 \fs24 \f0 {\pard \posx11204 \posy3911 \phpg \pvpg \absh-1090 \absw7324 \dxfrtext200 \fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s23 \posx11204 \posy3911 \phpg \pvpg \absh-1090 \absw7324 \dxfrtext200 \qj \li50 \ri50 \sl-258 \tx50 \tqr \tx7273 This command is used to erase or delete a file or group of files from a diskette. It is recommended that it be used to delete an existing file before attempting to save another file by that same name. Commodore DOS will not allow you to save a file if one by that name already exists.\par 
}\pard \sl-258 \tx50 \tqr \tx7273 {\pard \posx11224 \posy5193 \phpg \pvpg \absh-315 \absw1146 \dxfrtext200 \fs10 \f0 \fs24 \f1 \b \pard \s24 \posx11224 \posy5193 \phpg \pvpg \absh-315 \absw1146 \dxfrtext200 \li50 \ri50 \sl-253 \tx50 \tqr \tx1095 VERIFY\par 
}\pard \sl-253 \tx50 \tqr \tx1095 \fs24 \f0 {\pard \posx11225 \posy5581 \phpg \pvpg \absh-579 \absw7313 \dxfrtext200 \fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s25 \posx11225 \posy5581 \phpg \pvpg \absh-579 \absw7313 \dxfrtext200 \qj \li50 \ri50 \sl-264 \tx50 \tqr \tx7262 This version of DVERIFY works for files found on the Datasette as well as those from a disk drive.\par 
}\pard \sl-264 \tx50 \tqr \tx7262 {\pard \posx11216 \posy6464 \phpg \pvpg \absh-2271 \absw7335 \dxfrtext200 \fs10 \f0 \fs30 \f4 \i \pard \s26 \posx11216 \posy6464 \phpg \pvpg \absh-2271 \absw7335 \dxfrtext200 \li78 \ri4101 \sl-312 \tx78 \tqr \tx3233 Can DOS Be Changed?\par 
\fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s27 \posx11216 \posy6464 \phpg \pvpg \absh-2271 \absw7335 \dxfrtext200 \qj \li50 \ri50 \sl-259 \tx50 \tqr \tx7284 The DOS we've referred to thus far is one of two possible DOS systems that you can use with the Commodore \fs26 \f2 128. \fs24 \f0 This particular DOS is the one already stored in the Commodore disk drives and is the easiest to access. It is also the only DOS you can use when the Commodore \fs26 \f2 12Sis \fs24 \f0 used in the \fs26 \f2 C128 \fs24 \f0 or C64 modes. However, the built\_in DOS can be replaced with another DOS called CP/M. How, why, and when you would want to use a different DOS will be explained in Chapter 5.\par 
}\pard \sl-259 \tx50 \tqr \tx7284 {\pard \posx10668 \posy8956 \phpg \pvpg \absh-760 \absw4051 \dxfrtext200 \fs10 \f0 \fs32 \f5 \pard \s28 \posx10668 \posy8956 \phpg \pvpg \absh-760 \absw4051 \dxfrtext200 \li50 \ri50 \sl-318 \tx50 \tqr \tx4000 Where Can You Learn More About the C128?\par 
}\pard \sl-318 \tx50 \tqr \tx4000 \fs24 \f0 {\pard \posx11237 \posy9777 \phpg \pvpg \absh-1366 \absw7328 \dxfrtext200 \fs10 \f0 \fs24 \f0 \pard \s29 \posx11237 \posy9777 \phpg \pvpg \absh-1366 \absw7328 \dxfrtext200 \li50 \ri50 \sl-260 \tx50 \tqr \tx7277 No matter how "friendly" and reliable a computer is, and how complete its operations manual may be, its owner will always want to have access to more in\_depth documentation, special training, service, and a number of other forms of system support. Fortunately, there are numerous resources available that answer these needs for Commodore \fs26 \f2 128 \fs24 \f0 owners.\par 
}\pard \sl-260 \tx50 \tqr \tx7277 \page \lndscpsxn {\stylesheet {\snext0 Normal;}
{\s2 \tx53 \tqr \tx3133 \ql \sl312 \li1665 \ri4200 \sbasedon0 \snext2 OmniPage #1793;}
{\s3 \tx50 \tqr \tx7283 \qj \li1668 \ri50 \sl258 \sbasedon0 \snext3 OmniPage #1794;}
{\s4 \tqr \tx3663 \ql \sl303 \li1668 \ri50 \sbasedon0 \snext4 OmniPage #1795;}
{\s5 \tx51 \tqr \tx7279 \qj \li1667 \ri61 \sl260 \sbasedon0 \snext5 OmniPage #1796;}
{\s6 \tx52 \tqr \tx7290 \qj \li1666 \ri50 \sl253 \sbasedon0 \snext6 OmniPage #1797;}
{\s7 \tqr \tx7290 \qj \li1666 \ri50 \sl253 \sbasedon0 \snext7 OmniPage #1798;}
{\s8 \tx54 \tqr \tx7290 \qj \li1664 \ri50 \sl253 \sbasedon0 \snext8 OmniPage #1799;}
{\s9 \tx50 \tqr \tx7290 \qj \li1668 \ri50 \sl253 \sbasedon0 \snext9 OmniPage #1800;}
{\s10 \tx56 \tqr \tx7290 \qj \li1662 \ri50 \sl253 \sbasedon0 \snext10 OmniPage #1801;}
{\s11 \tx66 \tqr \tx7290 \qj \li1652 \ri50 \sl253 \sbasedon0 \snext11 OmniPage #1802;}
{\s12 \tx79 \tqr \tx3426 \ql \sl312 \li1639 \ri3912 \sbasedon0 \snext12 OmniPage #1803;}
{\s13 \tx50 \tqr \tx7288 \qj \li1668 \ri50 \sl261 \sbasedon0 \snext13 OmniPage #1804;}
{\s14 \tx483 \tqr \tx7276 \qj \li1668 \fi433 \ri50 \sl258 \sbasedon0 \snext14 OmniPage #1805;}
{\s15 \tx50 \tqr \tx5055 \ql \sl312 \li1668 \ri50 \sbasedon0 \snext15 OmniPage #1806;}
{\s16 \tqr \tx7291 \qj \li1668 \ri50 \sl259 \sbasedon0 \snext16 OmniPage #1807;}
{\s17 \tqr \tx2858 \ql \sl312 \li1668 \ri50 \sbasedon0 \snext17 OmniPage #1808;}
{\s18 \tqr \tx7300 \qj \li1668 \ri50 \sl261 \sbasedon0 \snext18 OmniPage #1809;}
}\par {\pard \posx1715 \posy255 \phpg \pvpg \absh-3024 \absw7334 \dxfrtext200 \fs30 \f0 \i \pard \s2 \posx1715 \posy255 \phpg \pvpg \absh-3024 \absw7334 \dxfrtext200 \li53 \ri4200 \sl-312 \tx53 \tqr \tx3133 Bigots You Should Own\par 
\fs10 \f0 \fs24 \f1 \plain \f1 \lang1033 \pard \s3 \posx1715 \posy255 \phpg \pvpg \absh-3024 \absw7334 \dxfrtext200 \qj \li50 \ri50 \sl-258 \tx50 \tqr \tx7283 If the past Commodore 64 market is any indicator as to the number of books that will be written about the Commodore 128 then you will have a large number of books to choose from. Titles will cover such subjects as C128 BASIC programming, getting started with the C128, inside the C128, applications for the C128, using C128 graphics and sound, business and the C128, and machine language programming. In addition to specific interest books like these you will also find a large assortment of books containing interesting programming hints and software. A quick check at your local book store will reveal an ever\_increasing number of C128 book titles for you to choose from.\par 
}\sect \sectd \linex0 \linemod0 \sbknone \lndscpsxn \marglsxn1658 \margrsxn1520 \pard \sl-258 \tx50 \tqr \tx7283 \fs24 \f0 {\pard \posx1726 \posy3606 \phpg \pvpg \absh-651 \absw3714 \dxfrtext200 \fs10 \f0 \fs30 \f0 \i \pard \s4 \posx1726 \posy3606 \phpg \pvpg \absh-651 \absw3714 \dxfrtext200 \li50 \ri50 \sl-303 \tx50 \tqr \tx3663 Magazines for Commodore\par 
\pard \s4 \posx1726 \posy3606 \phpg \pvpg \absh-651 \absw3714 \dxfrtext200 \li50 \ri50 \sl-303 \tx50 \tqr \tx3663 Computer Owners\par 
}\pard \sl-303 \tx50 \tqr \tx3663 \fs24 \f0 {\pard \posx1711 \posy4311 \phpg \pvpg \absh-4189 \absw7341 \dxfrtext200 \fs10 \f0 \fs24 \f1 \plain \f1 \lang1033 \pard \s5 \posx1711 \posy4311 \phpg \pvpg \absh-4189 \absw7341 \dxfrtext200 \qj \li51 \ri61 \sl-260 \tx51 \tqr \tx7279 Commodore 128 owners will also have a wide range of magazines to choose from; many of them are completely devoted to Commodore com\-puter owners. Their editorial formats differ sufficiently so that you can easily choose one or two magazines that are particularly suited to your needs. Here is a partial list of Commodore oriented magazines listed from those attempting to primarily reach the beginning C128 users to those whose aim is to reach the more sophisticated C128 hobbyists and programmers.\par 
\fs10 \f0 \fs24 \f1 \pard \s6 \posx1711 \posy4311 \phpg \pvpg \absh-4189 \absw7341 \dxfrtext200 \qj \li52 \ri50 \sl-253 \tx52 \tqr \tx7290 Commodore Power Play by Contemporary Marketing, Inc.\par 
\fs10 \f0 \fs24 \f1 \pard \s7 \posx1711 \posy4311 \phpg \pvpg \absh-4189 \absw7341 \dxfrtext200 \qj \li52 \ri50 \sl-253 \tx52 \tqr \tx7290 Commodore Microcomputers by Contemporary Marketing, Inc.\par 
\fs10 \f0 \fs24 \f1 \pard \s8 \posx1711 \posy4311 \phpg \pvpg \absh-4189 \absw7341 \dxfrtext200 \qj \li54 \ri50 \sl-253 \tx54 \tqr \tx7290 COMPUTE!'s Gazette by COMPUTE! Publications, Inc.\par 
\fs10 \f0 \fs24 \f1 \pard \s9 \posx1711 \posy4311 \phpg \pvpg \absh-4189 \absw7341 \dxfrtext200 \qj \li50 \ri50 \sl-253 \tx50 \tqr \tx7290 COMPUTE! by COMPUTE! Publications, Inc.\par 
\fs10 \f0 \fs24 \f1 \pard \s10 \posx1711 \posy4311 \phpg \pvpg \absh-4189 \absw7341 \dxfrtext200 \qj \li56 \ri50 \sl-253 \tx56 \tqr \tx7290 RUN by CW Communications/Peterborough, Inc.\par 
\fs10 \f0 \fs24 \f1 \pard \s11 \posx1711 \posy4311 \phpg \pvpg \absh-4189 \absw7341 \dxfrtext200 \qj \li66 \ri50 \sl-253 \tx66 \tqr \tx7290 The Transactor by Transactor Publishing, Inc.\par 
}\pard \sl-253 \tx66 \tqr \tx7290 \fs24 \f0 {\pard \posx1708 \posy8827 \phpg \pvpg \absh-2023 \absw7339 \dxfrtext200 \fs10 \f0 \fs30 \f0 \i \pard \s12 \posx1708 \posy8827 \phpg \pvpg \absh-2023 \absw7339 \dxfrtext200 \li79 \ri3912 \sl-312 \tx79 \tqr \tx3426 Commodore User Groups\par 
\fs10 \f0 \fs24 \f1 \plain \f1 \lang1033 \pard \s13 \posx1708 \posy8827 \phpg \pvpg \absh-2023 \absw7339 \dxfrtext200 \qj \li50 \ri50 \sl-261 \tx50 \tqr \tx7288 One of the best and easiest organizations for \fs24 \f2 \b new Commodore 128 owners \fs24 \f1 \plain \f1 \lang1033 to get help from is their own local Commodore users group. There are over 600 of these organizations spread throughout 16 countries and 50 states. For example, there are 66 of these clubs in California alone. Complete lists of these user groups with their addresses are periodically published in magazines like Commodore Microcomputers and RUN.\par 
}\pard \sl-261 \tx50 \tqr \tx7288 \fs24 \f0 {\pard \posx11228 \posy212 \phpg \pvpg \absh-2642 \absw7327 \dxfrtext200 \fs10 \f0 \fs24 \f1 \pard \s14 \posx11228 \posy212 \phpg \pvpg \absh-2642 \absw7327 \dxfrtext200 \qj \li50 \fi433 \ri50 \sl-258 \tx50 \tx483 \tqr \tx7276 A computer user group is basically a club that is open to all parties who share common interests. The typical membership of a user group will be primarily new or fairly new computer users. Their goals will be to help each other by sharing information. Many user groups sponsor classes in applications and programming and maintain a library of public\-domain (free to the general public) software. Some Commodore user groups also maintain their own electronic bulletin boards (self\_answering com\-puter systems contacted with a C128 and a modem). These electronic bulletin boards provide many of the same functions as the clubs them\-selves, like question and answer forums and software libraries.\par 
}\pard \sl-258 \tx50 \tx483 \tqr \tx7276 \fs24 \f0 {\pard \posx11264 \posy3171 \phpg \pvpg \absh-348 \absw5106 \dxfrtext200 \fs10 \f0 \fs30 \f0 \i \pard \s15 \posx11264 \posy3171 \phpg \pvpg \absh-348 \absw5106 \dxfrtext200 \li50 \ri50 \sl-312 \tx50 \tqr \tx5055 The Commodore Information Network\par 
}\pard \sl-312 \tx50 \tqr \tx5055 \fs24 \f0 {\pard \posx11232 \posy3575 \phpg \pvpg \absh-3433 \absw7342 \dxfrtext200 \fs10 \f0 \fs24 \f1 \plain \f1 \lang1033 \pard \s16 \posx11232 \posy3575 \phpg \pvpg \absh-3433 \absw7342 \dxfrtext200 \qj \li50 \ri50 \sl-259 \tx50 \tqr \tx7291 The Commodore Information Network is available to anyone with an interest in Commodore computers who has access to CompuServe, an electronic database system. Unlike other electronic bulletin boards, this network is maintained and run by the Commodore corporation itself. The Commodore Information Network is actually broken down into a number of smaller special interest groups (SIGs) that are quite distinct from one another. Each has its own help forum, a message database and a software library. More information about the various Commodore SIGs can be ob\-tained by calling CompuServe, making a modem connection with your C128, and then following CompuServe's system of prompts till you get to their personal computing section (those more familiar with CompuServe's operation can use the command GO\_PCS at any prompt). Details on CompuServe can be obtained from any computer products store.\par 
}\pard \sl-259 \tx50 \tqr \tx7291 \fs24 \f0 {\pard \posx11266 \posy7335 \phpg \pvpg \absh-348 \absw2909 \dxfrtext200 \fs10 \f0 \fs30 \f0 \i \pard \s17 \posx11266 \posy7335 \phpg \pvpg \absh-348 \absw2909 \dxfrtext200 \li50 \ri50 \sl-312 \tx50 \tqr \tx2858 Software Directories\par 
}\pard \sl-312 \tx50 \tqr \tx2858 \fs24 \f0 {\pard \posx11240 \posy7733 \phpg \pvpg \absh-1359 \absw7351 \dxfrtext200 \fs10 \f0 \fs24 \f1 \plain \f1 \lang1033 \pard \s18 \posx11240 \posy7733 \phpg \pvpg \absh-1359 \absw7351 \dxfrtext200 \qj \li50 \ri50 \sl-261 \tx50 \tqr \tx7300 Another publication of interest to Commodore 128 owners is the Com\-modore Software Encyclopedia published and periodically updated by Commodore Business Machines. This encyclopedia contains hundreds of references describing the many different software products currently avail\-able for Commodore computers, including those for the Commodore 128.\par 
}\pard \sl-261 \tx50 \tqr \tx7300 \fs24 \f0 }