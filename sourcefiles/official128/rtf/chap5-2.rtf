{\rtf1\ansi \deff0 {\fonttbl {\f0\froman Times New Roman;}
{\f1\froman Times New Roman;}{\f2\froman Times New Roman;}{\f3\froman Times New Roman;}{\f4\fmodern MS LineDraw;}{\f5\fdecor Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue127;\red0\green127\blue0;\red0\green127\blue127;\red127\green0\blue0;\red127\green0\blue127;\red127\green127\blue0;\red127\green127\blue127;\red63\green63\blue63;\red0\green0\blue255;\red0\green255\blue0;\red0\green255\blue255;\red255\green0\blue0;\red255\green0\blue255;\red255\green255\blue0;\red255\green255\blue255;}\linex0 \sbknone 
\paperh12240 \paperw20160 \margl957 \margr1613 \margt64 \margb1479 \plain \lang1033 \lndscpsxn {\stylesheet {\snext0 Normal;}
{\s2 \tx50 \tqr \tx7273 \qj \li907 \ri50 \sl254 \sbasedon0 \snext2 OmniPage #1;}
{\s3 \tqr \tx1346 \ql \sl253 \li907 \ri50 \sbasedon0 \snext3 OmniPage #2;}
{\s4 \tqr \tx7292 \qj \li907 \ri50 \sl261 \sbasedon0 \snext4 OmniPage #3;}
{\s5 \tqr \tx3528 \ql \sl363 \li907 \ri50 \sbasedon0 \snext5 OmniPage #4;}
{\s6 \tqr \tx7287 \qj \li907 \ri62 \sl261 \sbasedon0 \snext6 OmniPage #5;}
{\s7 \tx497 \tqr \tx7299 \qj \li907 \fi447 \ri50 \sl261 \sbasedon0 \snext7 OmniPage #6;}
{\s8 \tx50 \tx100 \tx632 \tqr \tx938 \ql \sl52 \li907 \ri50 \sbasedon0 \snext8 OmniPage #7;}
{\s9 \tx483 \tqr \tx7287 \qj \li907 \fi433 \ri50 \sl258 \sbasedon0 \snext9 OmniPage #8;}
{\s10 \tx65 \tx498 \tqr \tx7269 \qj \li892 \fi433 \ri68 \sl262 \sbasedon0 \snext10 OmniPage #9;}
{\s11 \tx50 \tqr \tx5172 \ql \sl312 \li907 \ri50 \sbasedon0 \snext11 OmniPage #10;}
{\s12 \tqr \tx7267 \qj \li907 \ri50 \sl260 \sbasedon0 \snext12 OmniPage #11;}
{\s13 \tqr \tx1135 \ql \sl253 \li907 \ri50 \sbasedon0 \snext13 OmniPage #12;}
{\s14 \tqr \tx7278 \qj \li907 \ri50 \sl261 \sbasedon0 \snext14 OmniPage #13;}
}{\pard \posx1582 \posy167 \phpg \pvpg \absh-1585 \absw7324 \dxfrtext200 \fs24 \f0 \pard \s2 \posx1582 \posy167 \phpg \pvpg \absh-1585 \absw7324 \dxfrtext200 \qj \li50 \ri50 \sl-254 \tx50 \tqr \tx7273 compared to color graphics programs. You will find a host of text\_based games like Zork and Adventure. There are millions of CP/M games written in MBASIC such as Tic\_Tac\_Toe, Animals, Guess the Number, and Black\-jack, but don't expect much. Remember, many people cut their computer\-programming teeth with CP/M, and the games reflect this to a certain extent. The best games are written in machine language or C.\par 
}\linex0 \linemod0 \sbknone \lndscpsxn \pard \sl-254 \tx50 \tqr \tx7273 {\pard \posx1597 \posy1954 \phpg \pvpg \absh-315 \absw1397 \dxfrtext200 \fs10 \f0 \fs24 \f1 \b \pard \s3 \posx1597 \posy1954 \phpg \pvpg \absh-315 \absw1397 \dxfrtext200 \li50 \ri50 \sl-253 \tx50 \tqr \tx1346 Adventure\par 
}\pard \sl-253 \tx50 \tqr \tx1346 \fs24 \f0 {\pard \posx1585 \posy2337 \phpg \pvpg \absh-3188 \absw7343 \dxfrtext200 \fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s4 \posx1585 \posy2337 \phpg \pvpg \absh-3188 \absw7343 \dxfrtext200 \qj \li50 \ri50 \sl-261 \tx50 \tqr \tx7292 Adventure, from Adventure International, is a game where you explore a cave full of strange, magical creatures. You communicate with the game in plain English, typing instructions about what you want to do. The purpose is to find one of several treasures without getting killed in the process. You type things to Adventure like "kill dragon" or "pick up magic lantern". Adventure tells you things that happen along the way, like "you are in a large cavern and the walls are coated with jelly\'97you can't climb them". (You may find later that the only way out is to eat through the walls!) In Adventure games, you can get an inventory of what things you are carrying, look at your surroundings, pick stuff up, and so on. People become so enraptured by games like Adventure that winning becomes an obsession.\par 
}\pard \sl-261 \tx50 \tqr \tx7292 {\pard \posx1007 \posy5783 \phpg \pvpg \absh-428 \absw3579 \dxfrtext200 \fs10 \f0 \fs33 \f2 \pard \s5 \posx1007 \posy5783 \phpg \pvpg \absh-428 \absw3579 \dxfrtext200 \li50 \ri50 \sl-363 \tx50 \tqr \tx3528 Free Software for CP/M\par 
}\pard \sl-363 \tx50 \tqr \tx3528 \fs24 \f0 {\pard \posx1591 \posy6255 \phpg \pvpg \absh-4497 \absw7350 \dxfrtext200 \fs10 \f0 \fs24 \f0 \pard \s6 \posx1591 \posy6255 \phpg \pvpg \absh-4497 \absw7350 \dxfrtext200 \qj \li50 \ri62 \sl-261 \tx50 \tqr \tx7287 Earlier we mentioned that there existed free CP/M software\'97for example, we mentioned XMODEM. What we didn't tell you is that some of this free software is incredibly good, and that obtaining it is not hard. Public domain software is programs that have been written and made available for free to anyone who wants them. They are, in fact, owned by the public.\par 
\fs10 \f0 \fs24 \f0 \pard \s7 \posx1591 \posy6255 \phpg \pvpg \absh-4497 \absw7350 \dxfrtext200 \qj \li50 \fi447 \ri50 \sl-261 \tx50 \tx497 \tqr \tx7299 Since CP/M was one of the first operating systems, a large number of hobbyists, hackers, and esoteric programmers purchased CP/M computers and began to write programs for themselves. Keep in mind that, prior to the microcomputer revolution, programmers and hobbyists were locked out of using computers because only large companies could afford them. With the advent of the low\_cost microcomputer and CP/M, literally thou\-sands of hackers said, "Now I can write that program I've dreamed about," and set to work. The result of this was an incredible barrage of homespun, public\_donated code, most of it poor and shoddy, but some of it real gems. It was offered on the free market in the form of floppy disks distributed at computer "user groups". It was also made available on on\_line computer systems (we'll say more about these topics later).\par 
}\pard \sl-261 \tx50 \tx497 \tqr \tx7299 {\pard \posx2679 \posy8646 \phpg \pvpg \absh-315 \absw989 \dxfrtext200 \fs10 \f0 \fs24 \f0 \pard \s8 \posx2679 \posy8646 \phpg \pvpg \absh-315 \absw989 \dxfrtext200 \li50 \ri50 \sl-52 \tx50 \tx100 \tx632 \tqr \tx938 \tab \tab ~. .\par 
}\pard \sl-52 \tx50 \tx100 \tx632 \tqr \tx938 {\pard \posx11160 \posy171 \phpg \pvpg \absh-4194 \absw7338 \dxfrtext200 \fs10 \f0 \fs24 \f0 \pard \s9 \posx11160 \posy171 \phpg \pvpg \absh-4194 \absw7338 \dxfrtext200 \qj \li50 \fi433 \ri50 \sl-258 \tx50 \tx483 \tqr \tx7287 Free CP/M programs are the equivalent of a software gold mine. Buried behind the rubble of poor documentation and zero customer sup\-port exist hundreds of excellent programs, provided you can weed them out. How much free software exists? Public domain software is measured in volumes. A volume is a single diskette containing between 10 and 20 programs and holding 250,000 characters. One catalog lists over 250 volumes of free CP/M software! This free software is available from user groups located across the country who will send numerous volumes just for the cost of copying. A second major source is electronic bulletin board systems, called Remote CP/M computer systems or RCPMs. These on\_line CP/M computers have large hard disks containing hundreds of free CP/M programs. They are accessed by modem, and the programs are "down\-loaded" to your computer with special free communications software.\par 
\fs10 \f0 \fs24 \f0 \pard \s10 \posx11160 \posy171 \phpg \pvpg \absh-4194 \absw7338 \dxfrtext200 \qj \li65 \fi433 \ri68 \sl-262 \tx65 \tx498 \tqr \tx7269 In this section, we will examine the CP/M public domain phenome\-non, explore some of the better free programs, and tell you how to find them, how to buy them, and how to download them.\par 
}\pard \sl-262 \tx65 \tx498 \tqr \tx7269 {\pard \posx11200 \posy4688 \phpg \pvpg \absh-348 \absw5223 \dxfrtext200 \fs10 \f0 \fs31 \f3 \i \pard \s11 \posx11200 \posy4688 \phpg \pvpg \absh-348 \absw5223 \dxfrtext200 \li50 \ri50 \sl-312 \tx50 \tqr \tx5172 What Good Free Software is Available\par 
}\pard \sl-312 \tx50 \tqr \tx5172 \fs24 \f0 {\pard \posx11167 \posy5085 \phpg \pvpg \absh-1619 \absw7318 \dxfrtext200 \fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s12 \posx11167 \posy5085 \phpg \pvpg \absh-1619 \absw7318 \dxfrtext200 \qj \li50 \ri50 \sl-260 \tx50 \tqr \tx7267 The most popular programs in the public domain are programmer tools and system utilities. There are programs for fixing damaged disks and unerasing disk files, as well as for backup utilities and enhanced directory programs. There are also a dozen communication programs. Let's look at the most popular CP/M public domain programs that a Commodore 128 CP/M 3.0 user might want.\par 
}\pard \sl-260 \tx50 \tqr \tx7267 {\pard \posx11182 \posy6911 \phpg \pvpg \absh-315 \absw1186 \dxfrtext200 \fs10 \f0 \fs24 \f1 \b \pard \s13 \posx11182 \posy6911 \phpg \pvpg \absh-315 \absw1186 \dxfrtext200 \li50 \ri50 \sl-253 \tx50 \tqr \tx1135 Modem7\par 
}\pard \sl-253 \tx50 \tqr \tx1135 \fs24 \f0 {\pard \posx11164 \posy7294 \phpg \pvpg \absh-3708 \absw7329 \dxfrtext200 \fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s14 \posx11164 \posy7294 \phpg \pvpg \absh-3708 \absw7329 \dxfrtext200 \qj \li50 \ri50 \sl-261 \tx50 \tqr \tx7278 Modem7 (also associated with a companion program called XMODEM) is the most popular free program in the public domain, and, unlike most software, has literally hundreds of versions. Originally written by Ward Christensen, Modem7 has been revised and improved by dozens of pro\-grammers. Modem7, or a similar communications program with XMO\-DEM protocol capability, is the key to getting free software from bulletin boards. A special accuracy\_checking feature of Modem7 insures that not one single error occurs in the transfer. Without such checking, it is almost certain the program will not run properly. Since modems for CP/M are not standardized, Modem7 must be customized for each CP/M computer it runs on. Luckily, a version of Modem7 has been adapted for most of the CP/M machines and modems on the market, and it will not be long before you can find a version of Modem7 for the Commodore 123. As a tribute to the importance and ubiquity of Modem7, today most commercial CP/M\par 
}\pard \sl-261 \tx50 \tqr \tx7278 \page \lndscpsxn {\stylesheet {\snext0 Normal;}
{\s2 \tx1943 \tqr \tx3165 \ql \sl52 \li986 \ri4143 \sbasedon0 \snext2 OmniPage #257;}
{\s3 \tx50 \tqr \tx7258 \qj \li907 \ri50 \sl248 \sbasedon0 \snext3 OmniPage #258;}
{\s4 \tx73 \tqr \tx4436 \ql \sl268 \li884 \ri2900 \sbasedon0 \snext4 OmniPage #259;}
{\s5 \tx50 \tqr \tx7286 \qj \li907 \ri50 \sl259 \sbasedon0 \snext5 OmniPage #260;}
{\s6 \tx66 \tqr \tx2050 \ql \sl268 \li891 \ri5278 \sbasedon0 \snext6 OmniPage #261;}
{\s7 \tx50 \tqr \tx7278 \qj \li907 \ri50 \sl261 \sbasedon0 \snext7 OmniPage #262;}
{\s8 \tqr \tx2521 \ql \sl268 \li907 \ri50 \sbasedon0 \snext8 OmniPage #263;}
{\s9 \tqr \tx7280 \qj \li907 \ri50 \sl262 \sbasedon0 \snext9 OmniPage #264;}
{\s10 \tx64 \tqr \tx5345 \ql \sl268 \li893 \ri1977 \sbasedon0 \snext10 OmniPage #265;}
{\s11 \tx50 \tqr \tx7272 \qj \li907 \ri50 \sl261 \sbasedon0 \snext11 OmniPage #266;}
{\s12 \tqr \tx4211 \ql \sl268 \li907 \ri50 \sbasedon0 \snext12 OmniPage #267;}
{\s13 \tqr \tx7276 \qj \li907 \ri50 \sl261 \sbasedon0 \snext13 OmniPage #268;}
{\s14 \tx488 \tqr \tx7269 \qj \li907 \fi438 \ri50 \sl257 \sbasedon0 \snext14 OmniPage #269;}
{\s15 \tx50 \tqr \tx3503 \ql \sl312 \li907 \ri50 \sbasedon0 \snext15 OmniPage #270;}
{\s16 \tqr \tx7264 \qj \li907 \ri50 \sl263 \sbasedon0 \snext16 OmniPage #271;}
{\s17 \tqr \tx2219 \ql \sl268 \li907 \ri50 \sbasedon0 \snext17 OmniPage #272;}
{\s18 \tqr \tx7266 \qj \li907 \ri61 \sl262 \sbasedon0 \snext18 OmniPage #273;}
{\s19 \tx55 \tx490 \tqr \tx7272 \qj \li902 \fi435 \ri55 \sl259 \sbasedon0 \snext19 OmniPage #274;}
{\s20 \tx62 \tx497 \tqr \tx7274 \qj \li895 \fi435 \ri53 \sl261 \sbasedon0 \snext20 OmniPage #275;}
{\s21 \tx64 \tx499 \tqr \tx7277 \qj \li893 \fi435 \ri50 \sl260 \sbasedon0 \snext21 OmniPage #276;}
{\s22 \tx50 \tqr \tx1891 \ql \sl268 \li907 \ri50 \sbasedon0 \snext22 OmniPage #277;}
{\s23 \tqr \tx7274 \qj \li907 \ri50 \sl261 \sbasedon0 \snext23 OmniPage #278;}
}\par {\pard \posx1795 \posy0 \phpg \pvpg \absh-847 \absw7309 \dxfrtext200 \fs24 \f0 \pard \s2 \posx1795 \posy0 \phpg \pvpg \absh-847 \absw7309 \dxfrtext200 \li1943 \ri4143 \sl-52 \tx1943 \tqr \tx3165 \_ \_\par 
\fs10 \f0 \fs24 \f0 \pard \s3 \posx1795 \posy0 \phpg \pvpg \absh-847 \absw7309 \dxfrtext200 \qj \li50 \ri50 \sl-248 \tx50 \tqr \tx7258 communications programs on the market support the Modem7 file transfer protocol.\par 
}\sect \sectd \linex0 \linemod0 \sbknone \lndscpsxn \marglsxn1723 \margrsxn1527 \pard \sl-248 \tx50 \tqr \tx7258 {\pard \posx1790 \posy1039 \phpg \pvpg \absh-1730 \absw7337 \dxfrtext200 \fs10 \f0 \fs25 \f1 \b \pard \s4 \posx1790 \posy1039 \phpg \pvpg \absh-1730 \absw7337 \dxfrtext200 \li73 \ri2900 \sl-268 \tx73 \tqr \tx4436 Squeeze and Unsqueeze (SQ and USQ)\par 
\fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s5 \posx1790 \posy1039 \phpg \pvpg \absh-1730 \absw7337 \dxfrtext200 \qj \li50 \ri50 \sl-259 \tx50 \tqr \tx7286 The SQ program is used to squeeze files, that is, make them more compact in size, so that they can be transferred by modem in quicker time. Then the USQ, or unsqueeze program, is used to bring them back to normal. This can save telephone charges, as well as give more capacity than is obvious on a disk.\par 
}\pard \sl-259 \tx50 \tqr \tx7286 {\pard \posx1784 \posy2974 \phpg \pvpg \absh-2004 \absw7329 \dxfrtext200 \fs10 \f0 \fs25 \f1 \b \pard \s6 \posx1784 \posy2974 \phpg \pvpg \absh-2004 \absw7329 \dxfrtext200 \li66 \ri5278 \sl-268 \tx66 \tqr \tx2050 Disk Utility (DU)\par 
\fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s7 \posx1784 \posy2974 \phpg \pvpg \absh-2004 \absw7329 \dxfrtext200 \qj \li50 \ri50 \sl-261 \tx50 \tqr \tx7278 The disk utility (DU) lets you perform intelligent disk repair to recover erased files, isolate bad sectors from use, and make data transplants on a disk when the disk seems totally dead. DU is a fairly complex programmer tool, but is extremely popular because it allows a CP/M progammer to become a disk surgeon. DU is also popular for cracking disk protection schemes and analyzing CP/M storage formats.\par 
}\pard \sl-261 \tx50 \tqr \tx7278 {\pard \posx1798 \posy5178 \phpg \pvpg \absh-319 \absw2572 \dxfrtext200 \fs10 \f0 \fs25 \f1 \b \pard \s8 \posx1798 \posy5178 \phpg \pvpg \absh-319 \absw2572 \dxfrtext200 \li50 \ri50 \sl-268 \tx50 \tqr \tx2521 FindBad and UNERA\par 
}\pard \sl-268 \tx50 \tqr \tx2521 \fs24 \f0 {\pard \posx1781 \posy5563 \phpg \pvpg \absh-1364 \absw7331 \dxfrtext200 \fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s9 \posx1781 \posy5563 \phpg \pvpg \absh-1364 \absw7331 \dxfrtext200 \qj \li50 \ri50 \sl-262 \tx50 \tqr \tx7280 FindBad locates bad sectors on your disk and isolates them from future use so you can use a disk you might normally discard. UNERA helps you recover files you have accidentally erased from a disk. (Even though you erase a file with the ERASE command, the file still exists on the disk\'97 only its name has been removed from action.)\par 
}\pard \sl-262 \tx50 \tqr \tx7280 {\pard \posx1775 \posy7128 \phpg \pvpg \absh-2009 \absw7323 \dxfrtext200 \fs10 \f0 \fs25 \f1 \b \pard \s10 \posx1775 \posy7128 \phpg \pvpg \absh-2009 \absw7323 \dxfrtext200 \li64 \ri1977 \sl-268 \tx64 \tqr \tx5345 Dan's Information Management System (DIMS)\par 
\fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s11 \posx1775 \posy7128 \phpg \pvpg \absh-2009 \absw7323 \dxfrtext200 \qj \li50 \ri50 \sl-261 \tx50 \tqr \tx7272 Here is a complete database management system that is said to rival dBASEII. The program is a system of Microsoft BASIC programs chained together and designed so it can be used by anyone. Written by Dan Dugan, it is suitable for medium\_scale mailing\_list operations, indexes, ledgers, and similar operations. Records can be up to 256 characters long with up to 30 data fields, and file size can be the limits of the disk itself.\par 
}\pard \sl-261 \tx50 \tqr \tx7272 {\pard \posx1792 \posy9342 \phpg \pvpg \absh-319 \absw4262 \dxfrtext200 \fs10 \f0 \fs25 \f1 \b \pard \s12 \posx1792 \posy9342 \phpg \pvpg \absh-319 \absw4262 \dxfrtext200 \li50 \ri50 \sl-268 \tx50 \tqr \tx4211 Other Good Public Domain Software\par 
}\pard \sl-268 \tx50 \tqr \tx4211 \fs24 \f0 {\pard \posx1773 \posy9722 \phpg \pvpg \absh-1360 \absw7327 \dxfrtext200 \fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s13 \posx1773 \posy9722 \phpg \pvpg \absh-1360 \absw7327 \dxfrtext200 \qj \li50 \ri50 \sl-261 \tx50 \tqr \tx7276 The Osborne/McGraw\_Hill CBASIC2 Accounting System provides a com\-plete small business accounting system with books to back it up, provided by the publisher Osborne/McGraw\_Hill. There are dozens of languages, including a BASIC\_E compiler from Lawrence Livermore Laboratory, BDS\_C, several versions of Forth, a PILOT, and even a Pascal compiler.\par 
}\pard \sl-261 \tx50 \tqr \tx7276 {\pard \posx11228 \posy348 \phpg \pvpg \absh-1344 \absw7320 \dxfrtext200 \fs10 \f0 \fs24 \f0 \pard \s14 \posx11228 \posy348 \phpg \pvpg \absh-1344 \absw7320 \dxfrtext200 \qj \li50 \fi438 \ri50 \sl-257 \tx50 \tx488 \tqr \tx7269 You'll also find game programs like the original StarTrek program, and other pre\_video\_game games. There are also assemblers, search\_and\-rescue programs, speedup utilities, music programs that play three\_part harmony, disk cataloging systems, ham radio programs, fast copy pro\-grams, and lots more.\par 
}\pard \sl-257 \tx50 \tx488 \tqr \tx7269 {\pard \posx11234 \posy2016 \phpg \pvpg \absh-348 \absw3554 \dxfrtext200 \fs10 \f0 \fs30 \f2 \i \pard \s15 \posx11234 \posy2016 \phpg \pvpg \absh-348 \absw3554 \dxfrtext200 \li50 \ri50 \sl-312 \tx50 \tqr \tx3503 How to Get Free Software\par 
}\pard \sl-312 \tx50 \tqr \tx3503 \fs24 \f0 {\pard \posx11232 \posy2388 \phpg \pvpg \absh-841 \absw7315 \dxfrtext200 \fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s16 \posx11232 \posy2388 \phpg \pvpg \absh-841 \absw7315 \dxfrtext200 \qj \li50 \ri50 \sl-263 \tx50 \tqr \tx7264 The two methods of exchanging free software are by disk via user groups and by computer\_computer connection over the telephone lines via bulletin boards. Let's look at these in turn.\par 
}\pard \sl-263 \tx50 \tqr \tx7264 {\pard \posx11252 \posy3448 \phpg \pvpg \absh-319 \absw2270 \dxfrtext200 \fs10 \f0 \fs25 \f1 \b \pard \s17 \posx11252 \posy3448 \phpg \pvpg \absh-319 \absw2270 \dxfrtext200 \li50 \ri50 \sl-268 \tx50 \tqr \tx2219 CP/M User Groups\par 
}\pard \sl-268 \tx50 \tqr \tx2219 \fs24 \f0 {\pard \posx11242 \posy3809 \phpg \pvpg \absh-5537 \absw7328 \dxfrtext200 \fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s18 \posx11242 \posy3809 \phpg \pvpg \absh-5537 \absw7328 \dxfrtext200 \qj \li50 \ri61 \sl-262 \tx50 \tqr \tx7266 A CP/M user group is a group that is devoted to cataloging and exchanging information about CP/M for nonprofit. User groups usually meet twice a month and are located across the country. You can find out about user groups in your area by reading the magazines listed at the end of the chapter, by reading the local newspapers that advertise computer con\-sulting, and by asking around at a local school or computer store. User groups usually offer free software to anyone, even nonmembers, and some of the larger ones will duplicate and mail disks of software for a nominal charge.\par 
\fs10 \f0 \fs24 \f0 \pard \s19 \posx11242 \posy3809 \phpg \pvpg \absh-5537 \absw7328 \dxfrtext200 \qj \li55 \fi435 \ri55 \sl-259 \tx55 \tx490 \tqr \tx7272 One of the largest groups offering CP/M public domain software suitable for Commodore 128 users is called CP/MUG, which stands for CP/M User Group. This group is supported by Lifeboat Associates in New York. CP/MUG provides 51/. inch CP/M single\_density disks in the Kaypro formats for $18 per disk.\par 
\fs10 \f0 \fs24 \f0 \pard \s20 \posx11242 \posy3809 \phpg \pvpg \absh-5537 \absw7328 \dxfrtext200 \qj \li62 \fi435 \ri53 \sl-261 \tx62 \tx497 \tqr \tx7274 Another large user group is the First Osborne Group (FOG) located in Daly City, California. FOG distributes CP/M public domain software in Osborne, Kaypro II, Morrow, CompuPro, PCM Micromate, and Zorba for\-mats. FOG has over 15,000 members worldwide and costs $24 to join.\par 
\fs10 \f0 \fs24 \f0 \pard \s21 \posx11242 \posy3809 \phpg \pvpg \absh-5537 \absw7328 \dxfrtext200 \qj \li64 \fi435 \ri50 \sl-260 \tx64 \tx499 \tqr \tx7277 The New Jersey or New York SIG/M (Special Interest Group/Micro\-computers) offer perhaps the largest catalog of CP/M public domain soft\-ware. Unfortunately, this is not provided on 5\_1/4 inch formats.\par 
}\pard \sl-260 \tx64 \tx499 \tqr \tx7277 {\pard \posx11272 \posy9550 \phpg \pvpg \absh-319 \absw1942 \dxfrtext200 \fs10 \f0 \fs25 \f1 \b \pard \s22 \posx11272 \posy9550 \phpg \pvpg \absh-319 \absw1942 \dxfrtext200 \li50 \ri50 \sl-268 \tx50 \tqr \tx1891 Bulletin Boards\par 
}\pard \sl-268 \tx50 \tqr \tx1891 \fs24 \f0 {\pard \posx11259 \posy9935 \phpg \pvpg \absh-1360 \absw7325 \dxfrtext200 \fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s23 \posx11259 \posy9935 \phpg \pvpg \absh-1360 \absw7325 \dxfrtext200 \qj \li50 \ri50 \sl-261 \tx50 \tqr \tx7274 The second way to get free public domain CP/M software is by calling up a remote CP/M system bulletin board and downloading it. Thousands of these systems exist across the country, maintained by kind, diligent, be\-nevolent individuals, who simply live to see people use their CP/M sys\-tems. Most of these systems contain the latest releases of volumes of\par 
}\pard \sl-261 \tx50 \tqr \tx7274 \page \lndscpsxn {\stylesheet {\snext0 Normal;}
{\s2 \tx50 \tqr \tx7266 \qj \li907 \ri70 \sl254 \sbasedon0 \snext2 OmniPage #513;}
{\s3 \tx65 \tx504 \tqr \tx7286 \qj \li892 \fi439 \ri50 \sl258 \sbasedon0 \snext3 OmniPage #514;}
{\s4 \tx50 \tqr \tx4548 \ql \li907 \ri50 \sl323 \sbasedon0 \snext4 OmniPage #515;}
{\s5 \tqr \tx7273 \qj \li907 \ri50 \sl261 \sbasedon0 \snext5 OmniPage #516;}
{\s6 \tqr \tx2881 \ql \li907 \ri50 \sl319 \sbasedon0 \snext6 OmniPage #517;}
{\s7 \tqr \tx7276 \qj \li907 \ri74 \sl261 \sbasedon0 \snext7 OmniPage #518;}
{\s8 \tx59 \tx493 \tqr \tx7289 \qj \li898 \fi434 \ri61 \sl261 \sbasedon0 \snext8 OmniPage #519;}
{\s9 \tx75 \tx509 \tqr \tx7300 \qj \li882 \fi434 \ri50 \sl262 \sbasedon0 \snext9 OmniPage #520;}
{\s10 \tx50 \tqr \tx494 \ql \sl448 \li907 \ri50 \sbasedon0 \snext10 OmniPage #521;}
{\s11 \tqr \tx7274 \qj \li907 \ri50 \sl256 \sbasedon0 \snext11 OmniPage #522;}
{\s12 \tqr \tx3277 \ql \sl319 \li907 \ri50 \sbasedon0 \snext12 OmniPage #523;}
{\s13 \tqr \tx7268 \qj \li907 \ri50 \sl259 \sbasedon0 \snext13 OmniPage #524;}
{\s14 \tqr \tx5177 \ql \li907 \ri50 \sl197 \sbasedon0 \snext14 OmniPage #525;}
{\s15 \tqr \tx441 \ql \sl204 \li907 \ri50 \sbasedon0 \snext15 OmniPage #526;}
{\s16 \tx485 \tqr \tx7274 \qj \li907 \fi435 \ri50 \sl261 \sbasedon0 \snext16 OmniPage #527;}
{\s17 \tx54 \tqr \tx7262 \qj \li903 \ri54 \sl240 \sbasedon0 \snext17 OmniPage #528;}
{\s18 \tx50 \tqr \tx7266 \qj \li907 \ri50 \sl260 \sbasedon0 \snext18 OmniPage #529;}
}\par {\pard \posx1781 \posy388 \phpg \pvpg \absh-2622 \absw7337 \dxfrtext200 \fs23 \f0 \pard \s2 \posx1781 \posy388 \phpg \pvpg \absh-2622 \absw7337 \dxfrtext200 \qj \li50 \ri70 \sl-254 \tx50 \tqr \tx7266 SIG/M, FOG, \fs25 \f1 and \fs23 \f0 C/MUG \fs25 \f1 software. You can preview these programs before downloading them by reading a special description file first. These \fs23 \f0 RCP/Ms \fs25 \f1 serve as distribution points for \fs23 \f0 SIG/M \fs25 \f1 and \fs23 \f0 FOG \fs25 \f1 software, and their tele\-phone numbers are distributed by these user groups. There are over twenty\-five \fs23 \f0 FOG RCP/Ms \fs25 \f1 across the United States. Contact \fs23 \f0 FOG \fs25 \f1 at the address in Appendix A for the exact phone numbers for your area.\par 
\fs10 \f0 \fs25 \f1 \pard \s3 \posx1781 \posy388 \phpg \pvpg \absh-2622 \absw7337 \dxfrtext200 \qj \li65 \fi439 \ri50 \sl-258 \tx65 \tx504 \tqr \tx7286 CompuServe and The Source are other sources of free CP/M software. Both these on\_line services have CP/M special interest groups. Programs written in \fs23 \f0 CP/M \fs25 \f1 are available for downloading to your computer, and a way of leaving mail for other \fs23 \f0 CP/M \fs25 \f1 members is provided.\par 
}\sect \sectd \linex0 \linemod0 \sbknone \lndscpsxn \marglsxn1151 \margrsxn1534 \pard \sl-258 \tx65 \tx504 \tqr \tx7286 \fs24 \f0 {\pard \posx1201 \posy3264 \phpg \pvpg \absh-765 \absw4599 \dxfrtext200 \fs10 \f0 \fs33 \f2 \pard \s4 \posx1201 \posy3264 \phpg \pvpg \absh-765 \absw4599 \dxfrtext200 \li50 \ri50 \sl-323 \tx50 \tqr \tx4548 The Structure of CP/M: Layout, Commands, and Utilities\par 
}\pard \sl-323 \tx50 \tqr \tx4548 \fs24 \f0 {\pard \posx1790 \posy4065 \phpg \pvpg \absh-1095 \absw7324 \dxfrtext200 \fs10 \f0 \fs25 \f1 \pard \s5 \posx1790 \posy4065 \phpg \pvpg \absh-1095 \absw7324 \dxfrtext200 \qj \li50 \ri50 \sl-261 \tx50 \tqr \tx7273 Now that you are familiar with what kinds of software can be found for \fs23 \f0 CP/M, you \fs25 \f1 are ready to get an overview of how CP/M is structured, the numerous commands it offers, and the utility programs provided to make your work easier.\par 
}\pard \sl-261 \tx50 \tqr \tx7273 \fs24 \f0 {\pard \posx1836 \posy5463 \phpg \pvpg \absh-372 \absw2932 \dxfrtext200 \fs10 \f0 \fs29 \f3 \i \pard \s6 \posx1836 \posy5463 \phpg \pvpg \absh-372 \absw2932 \dxfrtext200 \li50 \ri50 \sl-319 \tx50 \tqr \tx2881 Welcome to CP/M 3.0\par 
}\pard \sl-319 \tx50 \tqr \tx2881 \fs24 \f0 {\pard \posx1798 \posy5893 \phpg \pvpg \absh-5270 \absw7351 \dxfrtext200 \fs10 \f0 \fs23 \f0 \plain \fs23 \lang1033 \pard \s7 \posx1798 \posy5893 \phpg \pvpg \absh-5270 \absw7351 \dxfrtext200 \qj \li50 \ri74 \sl-261 \tx50 \tqr \tx7276 CP/M \fs25 \f1 has been around for some time. It first appeared in 1975 as \fs23 \f0 CP/M \fs25 \f1 version 1.3, and, shortly after, as version 1.4. In 1979, \fs23 \f0 CP/M \fs25 \f1 version 2.2 was introduced. It took advantage of larger memories and cheaper disk drives made available by the microcomputer boom, and has remained the most popular version to date. It is estimated that there were over 1.5 million copies of \fs23 \f0 CP/M \fs25 \f1 in circulation in early 1983.\par 
\fs10 \f0 \fs25 \f1 \pard \s8 \posx1798 \posy5893 \phpg \pvpg \absh-5270 \absw7351 \dxfrtext200 \qj \li59 \fi434 \ri61 \sl-261 \tx59 \tx493 \tqr \tx7289 In 1983, Digital Research developed a new version of CP/M called \fs23 \f0 CP/M \fs25 \f1 3.0. Its name was switched to \fs23 \f0 CP/M PLUS \fs25 \f1 at the last minute, but the name \fs23 \f0 CP/M \fs25 \f1 3.0 caught on and has been used ever since. \fs23 \f0 CP/M \fs25 \f1 3.0 was an improved version of 2.2, with a couple of new commands and one major difference: it was capable of working with larger memories then 64K. Two versions of \fs23 \f0 CP/M \fs25 \f1 3.0 were created: a banked version for larger memories and a nonbanked version for smaller 64K memories. The banked version of \fs23 \f0 CP/M \fs25 \f1 was intended to allow two programs to run at the same time, each in its own area of memory. For technical reasons, the Commo\-dore 128 uses the nonbanked version of \fs23 \f0 CP/M \fs25 \f1 3.0 and does not directly use the extra memory in the computer. However, it is possible through rather subtle methods, to access portions of the extra memory area.\par 
\fs10 \f0 \fs25 \f1 \pard \s9 \posx1798 \posy5893 \phpg \pvpg \absh-5270 \absw7351 \dxfrtext200 \qj \li75 \fi434 \ri50 \sl-262 \tx75 \tx509 \tqr \tx7300 Although programs are not written in \fs23 \f0 CP/M \fs25 \f1 1.3/1.4, some still exist. You should know that from a compatibility standpoint, programs designed\par 
}\pard \sl-262 \tx75 \tx509 \tqr \tx7300 \fs24 \f0 {\pard \posx10505 \posy0 \phpg \pvpg \absh-562 \absw545 \dxfrtext200 \fs10 \f0 \fs33 \f0 \pard \s10 \posx10505 \posy0 \phpg \pvpg \absh-562 \absw545 \dxfrtext200 \li50 \ri50 \sl-448 \tx50 \tqr \tx494 r\par 
}\pard \sl-448 \tx50 \tqr \tx494 \fs24 \f0 {\pard \posx11252 \posy375 \phpg \pvpg \absh-1082 \absw7325 \dxfrtext200 \fs10 \f0 \fs25 \f1 \pard \s11 \posx11252 \posy375 \phpg \pvpg \absh-1082 \absw7325 \dxfrtext200 \qj \li50 \ri50 \sl-256 \tx50 \tqr \tx7274 to run under CP/M version 1.3/1.4 will not always run under version 2.2 and 3.0. Further, programs that run under 2.2 and 3.0 won't always work under version 1.3/1.4. However, most programs written for version 2.2 will run under version 3.0 without alteration.\par 
}\pard \sl-256 \tx50 \tqr \tx7274 \fs24 \f0 {\pard \posx11286 \posy1758 \phpg \pvpg \absh-372 \absw3328 \dxfrtext200 \fs10 \f0 \fs29 \f3 \i \pard \s12 \posx11286 \posy1758 \phpg \pvpg \absh-372 \absw3328 \dxfrtext200 \li50 \ri50 \sl-319 \tx50 \tqr \tx3277 Getting Started in CPIM\par 
}\pard \sl-319 \tx50 \tqr \tx3277 \fs24 \f0 {\pard \posx11248 \posy2175 \phpg \pvpg \absh-3425 \absw7319 \dxfrtext200 \fs10 \f0 \fs25 \f1 \plain \fs25 \f1 \lang1033 \pard \s13 \posx11248 \posy2175 \phpg \pvpg \absh-3425 \absw7319 \dxfrtext200 \qj \li50 \ri50 \sl-259 \tx50 \tqr \tx7268 Unlike BASIC 7.0, which is installed in a ROM inside the Commodore 128, the program for \fs23 \f0 CP/M is \fs25 \f1 stored on the disk and must be read into memory before it can be used. This process is called booting \fs23 \f0 CP/M \fs25 \f1 be\-cause it is like kicking it to get it running (see Figure 5\_3). There are two programs on the disk that are loaded when the \fs23 \f0 CP/M \fs25 \f1 disk is started: \fs23 \f0 CPM.SYS \fs25 \f1 and \fs23 \f0 CCP.COM \fs25 \f1 (we will explain these names later\'97for now they are just programs on the disk). When this booting process is com\-pleted, \fs23 \f0 CP/M \fs25 \f1 has fully "installed" itself in memory and will keep running until you turn the computer off. When you start a program under \fs23 \f0 CP/M, \fs25 \f1 it will run until you tell it to stop, and then you will end up back with the \fs23 \f0 CP/M \fs25 \f1 program running. Assuming you have an 80\_column monitor, after you boot your \fs23 \f0 CP/M \fs25 \f1 disk, your screen should show something like this:\par 
}\pard \sl-259 \tx50 \tqr \tx7268 \fs24 \f0 {\pard \posx10707 \posy5847 \phpg \pvpg \absh-459 \absw5228 \dxfrtext200 \fs10 \f0 \fs22 \f0 \pard \s14 \posx10707 \posy5847 \phpg \pvpg \absh-459 \absw5228 \dxfrtext200 \li50 \ri50 \sl-197 \tx50 \tqr \tx5177 CP/M 3. 0 On the Commodore 128 13 March 85 80 column display\par 
}\pard \sl-197 \tx50 \tqr \tx5177 \fs24 \f0 {\pard \posx10702 \posy6501 \phpg \pvpg \absh-262 \absw492 \dxfrtext200 \fs10 \f0 \fs22 \f0 \pard \s15 \posx10702 \posy6501 \phpg \pvpg \absh-262 \absw492 \dxfrtext200 \li50 \ri50 \sl-204 \tx50 \tqr \tx441 A>\par 
}\pard \sl-204 \tx50 \tqr \tx441 \fs24 \f0 {\pard \posx11240 \posy6976 \phpg \pvpg \absh-3183 \absw7325 \dxfrtext200 \fs10 \f0 \fs25 \f1 \pard \s16 \posx11240 \posy6976 \phpg \pvpg \absh-3183 \absw7325 \dxfrtext200 \qj \li50 \fi435 \ri50 \sl-261 \tx50 \tx485 \tqr \tx7274 The A> will be at the bottom of the screen. It represents the \fs23 \f0 CP/M \fs25 \f1 prompt. A prompt is a symbol or character sequence the operating system displays when it's awaiting your input. It means, "I'm waiting for you to type something." The letter A refers to the drive that we are using; the booting drive is called the A drive. By booting drive, we mean the drive that \fs23 \f0 CP/M \fs25 \f1 was started from. If you have a dual drive connected to your Commodore 128, the second drive is referred to as the B drive. This lettering allows you to switch between drives and to specify programs as being on either drive. The "greater than" symbol (>) is \fs23 \f0 CP/M's \fs25 \f1 way of saying "type your input right here". Following it is the Commodore 128 \fs23 \f0 CP/M \fs25 \f1 blinking underline cursor. The cursor represents where the next character you type will actually appear.\par 
}\pard \sl-261 \tx50 \tx485 \tqr \tx7274 \fs24 \f0 {\pard \posx11239 \posy10367 \phpg \pvpg \absh-957 \absw7317 \dxfrtext200 \fs10 \f0 \fs23 \f0 \pard \s17 \posx11239 \posy10367 \phpg \pvpg \absh-957 \absw7317 \dxfrtext200 \qj \li54 \ri54 \tx54 \tqr \tx7262 So Where \fs23 \f0 \b Is CP/M?\par 
\fs10 \f0 \fs25 \f1 \plain \fs25 \f1 \lang1033 \pard \s18 \posx11239 \posy10367 \phpg \pvpg \absh-957 \absw7317 \dxfrtext200 \qj \li50 \ri50 \sl-260 \tx50 \tqr \tx7266 Keeping track of where CP/M is located in memory is not important to its everyday use. However, it is important when it comes to purchasing ap\-\pard \posx11239 \posy10367 \phpg \pvpg \absh-957 \absw7317 \dxfrtext200 \qj \li50 \ri50 \sl-260 \tx50 \tqr \tx7266 \par 
}\pard \sl-260 \tx50 \tqr \tx7266 \fs24 \f0 \page \lndscpsxn {\stylesheet {\snext0 Normal;}
{\s2 \tx50 \tqr \tx7282 \qj \li907 \ri50 \sl254 \sbasedon0 \snext2 OmniPage #769;}
{\s3 \tx70 \tx507 \tqr \tx7274 \qj \li887 \fi437 \ri58 \sl263 \sbasedon0 \snext3 OmniPage #770;}
{\s4 \tx50 \tqr \tx5085 \qc \sl247 \sbasedon0 \snext4 OmniPage #771;}
{\s5 \tx50 \tqr \tx7278 \qj \li907 \ri50 \sl257 \sbasedon0 \snext5 OmniPage #772;}
{\s6 \tqr \tx5835 \ql \li907 \ri50 \sl260 \sbasedon0 \snext6 OmniPage #773;}
{\s7 \tqr \tx1896 \ql \sl304 \li907 \ri50 \sbasedon0 \snext7 OmniPage #774;}
{\s8 \tx51 \tqr \tx7278 \qj \li906 \ri50 \sl259 \sbasedon0 \snext8 OmniPage #775;}
{\s9 \tx50 \tx485 \tqr \tx7271 \qj \li907 \fi435 \ri57 \sl260 \sbasedon0 \snext9 OmniPage #776;}
{\s10 \tx50 \tqr \tx1145 \ql \sl331 \li907 \ri50 \sbasedon0 \snext10 OmniPage #777;}
{\s11 \tqr \tx1083 \ql \sl253 \li907 \ri50 \sbasedon0 \snext11 OmniPage #778;}
{\s12 \tqr \tx1444 \ql \sl253 \li907 \ri50 \sbasedon0 \snext12 OmniPage #779;}
{\s13 \tqr \tx1105 \ql \sl253 \li907 \ri50 \sbasedon0 \snext13 OmniPage #780;}
{\s14 \tqr \tx752 \ql \sl253 \li907 \ri50 \sbasedon0 \snext14 OmniPage #781;}
{\s15 \tqr \tx1118 \ql \sl253 \li907 \ri50 \sbasedon0 \snext15 OmniPage #782;}
{\s16 \tqr \tx1016 \ql \sl253 \li907 \ri50 \sbasedon0 \snext16 OmniPage #783;}
{\s17 \tqr \tx4981 \ql \li907 \ri50 \sl253 \sbasedon0 \snext17 OmniPage #784;}
{\s18 \tx492 \tqr \tx7263 \ql \li907 \fi442 \ri50 \sl253 \sbasedon0 \snext18 OmniPage #785;}
}\par {\pard \posx1645 \posy228 \phpg \pvpg \absh-1847 \absw7333 \dxfrtext200 \fs24 \f0 \pard \s2 \posx1645 \posy228 \phpg \pvpg \absh-1847 \absw7333 \dxfrtext200 \qj \li50 \ri50 \sl-254 \tx50 \tqr \tx7282 plication software that was not designed specifically for the Commodore 128 CP/M. The reason is that different CP/M programs expect and need different amounts of memory space to operate. You want to make sure you understand how much memory the C128 version of CP/M provides, so you can be sure these programs will run.\par 
\fs10 \f0 \fs24 \f0 \pard \s3 \posx1645 \posy228 \phpg \pvpg \absh-1847 \absw7333 \dxfrtext200 \qj \li70 \fi437 \ri58 \sl-263 \tx70 \tx507 \tqr \tx7274 Inside the Commodore 128 memory, the part of CP/M that was loaded off the disk is now situated starting at about the 59,000th memory location\par 
}\sect \sectd \linex0 \linemod0 \sbknone \lndscpsxn \marglsxn1595 \margrsxn1607 \pard \sl-263 \tx70 \tx507 \tqr \tx7274 {\pard \posx2813 \posy2712 \phpg \pvpg \absh-562 \absw5136 \dxfrtext200 \fs10 \f0 \fs24 \f1 \b \pard \s4 \posx2813 \posy2712 \phpg \pvpg \absh-562 \absw5136 \dxfrtext200 \qc \sl-247 \tx50 \tqr \tx5085 Figure 5\_3. The CP/M Mode Uses the Z80A Chip\par 
\pard \s4 \posx2813 \posy2712 \phpg \pvpg \absh-562 \absw5136 \dxfrtext200 \qc \sl-247 \tx50 \tqr \tx5085 and Either \fs18 \f2 \plain \fs18 \f2 \lang1033 Disolav \fs21 \f3 Chin\par 
}\pard \sl-247 \tx50 \tqr \tx5085 \fs24 \f0 {\pard \posx11175 \posy212 \phpg \pvpg \absh-2115 \absw7329 \dxfrtext200 \fs24 \f0 \fs24 \f0 \pard \s5 \posx11175 \posy212 \phpg \pvpg \absh-2115 \absw7329 \dxfrtext200 \qj \li50 \ri50 \sl-257 \tx50 \tqr \tx7278 and extending up to approximately the 64,000th location. Below this is a larger memory area where CP/M programs are loaded and run from. This area below the location CP/M is called the TPA (which means transient program area: it is where transient programs are loaded and run). As long as the CP/M program you wish to run does not need more than 59K, it will work fine in CP/M 3.0. Very few CP/M programs on the market will require a TPA larger than 48K. Thus the Commodore 59K TPA provides more than enough room.\par 
}\pard \sl-257 \tx50 \tqr \tx7278 {\pard \posx11891 \posy2509 \phpg \pvpg \absh-589 \absw5886 \dxfrtext200 \fs10 \f0 \fs24 \f1 \b \pard \s6 \posx11891 \posy2509 \phpg \pvpg \absh-589 \absw5886 \dxfrtext200 \li50 \ri50 \sl-260 \tx50 \tqr \tx5835 As long as the \fs24 \f0 \i CP/M \fs24 \f1 \plain \b \f1 \lang1033 program you \fs24 \f0 \i wish \fs24 \f1 \plain \b \f1 \lang1033 to run does not need more than 59K, it \fs24 \f0 \i \plain \i \lang1033 will work \fs24 \f1 \plain \f1 \lang1033 \b fine in \fs24 \f0 \i \plain \i \lang1033 CP/M 3.0.\par 
}\pard \sl-260 \tx50 \tqr \tx5835 {\pard \posx11179 \posy3424 \phpg \pvpg \absh-354 \absw1947 \dxfrtext200 \fs10 \f0 \fs27 \f0 \pard \s7 \posx11179 \posy3424 \phpg \pvpg \absh-354 \absw1947 \dxfrtext200 \li50 \ri50 \sl-304 \tx50 \tqr \tx1896 Files in CP/M\par 
}\pard \sl-304 \tx50 \tqr \tx1896 \fs24 \f0 {\pard \posx11174 \posy3831 \phpg \pvpg \absh-3693 \absw7329 \dxfrtext200 \fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s8 \posx11174 \posy3831 \phpg \pvpg \absh-3693 \absw7329 \dxfrtext200 \qj \li51 \ri50 \sl-259 \tx51 \tqr \tx7278 CP/M accesses and manipulates information stored on disks in files. A file is any information that is stored as a single entity and given a unique name. A file can be a single program, a chapter of this book, an entire mailing list, the data for a program, a single letter, or a complete novel. A file can be as short as a single character or as long as all the capacity of the disk. There are no basic rules for what goes in a file\'97you define its contents when you create the file.\par 
\fs10 \f0 \fs24 \f0 \pard \s9 \posx11174 \posy3831 \phpg \pvpg \absh-3693 \absw7329 \dxfrtext200 \qj \li50 \fi435 \ri57 \sl-260 \tx50 \tx485 \tqr \tx7271 There are rules for telling one file from another; these rules are to give each file a distinctive and unique name. In CP/M, all files are referred to by a name consisting of one to eight characters called the filename. In CP/M, no two files can have the exact same name and only uppercase letters are allowed in filenames. There are also limitations in CP/M as to what letters and symbols may be used in filenames. Characters you can't use include: < ~ .:\par 
}\pard \sl-260 \tx50 \tx485 \tqr \tx7271 {\pard \posx11187 \posy7551 \phpg \pvpg \absh-652 \absw1196 \dxfrtext200 \fs10 \f0 \fs24 \f0 \pard \s10 \posx11187 \posy7551 \phpg \pvpg \absh-652 \absw1196 \dxfrtext200 \li50 \ri50 \sl-331 \tx50 \tqr \tx1145 CHAP\_12\par 
\pard \s10 \posx11187 \posy7551 \phpg \pvpg \absh-652 \absw1196 \dxfrtext200 \li50 \ri50 \sl-331 \tx50 \tqr \tx1145 PIP\par 
}\pard \sl-331 \tx50 \tqr \tx1145 {\pard \posx11189 \posy8230 \phpg \pvpg \absh-315 \absw1134 \dxfrtext200 \fs10 \f0 \fs24 \f0 \pard \s11 \posx11189 \posy8230 \phpg \pvpg \absh-315 \absw1134 \dxfrtext200 \li50 \ri50 \sl-253 \tx50 \tqr \tx1083 BASKET\par 
}\pard \sl-253 \tx50 \tqr \tx1083 {\pard \posx11186 \posy8571 \phpg \pvpg \absh-315 \absw1495 \dxfrtext200 \fs10 \f0 \fs24 \f0 \pard \s12 \posx11186 \posy8571 \phpg \pvpg \absh-315 \absw1495 \dxfrtext200 \li50 \ri50 \sl-253 \tx50 \tqr \tx1444 PROGRAMS\par 
}\pard \sl-253 \tx50 \tqr \tx1444 {\pard \posx11188 \posy8913 \phpg \pvpg \absh-315 \absw1156 \dxfrtext200 \fs10 \f0 \fs24 \f0 \pard \s13 \posx11188 \posy8913 \phpg \pvpg \absh-315 \absw1156 \dxfrtext200 \li50 \ri50 \sl-253 \tx50 \tqr \tx1105 A347689\par 
}\pard \sl-253 \tx50 \tqr \tx1105 {\pard \posx11185 \posy9255 \phpg \pvpg \absh-315 \absw803 \dxfrtext200 \fs10 \f0 \fs24 \f0 \pard \s14 \posx11185 \posy9255 \phpg \pvpg \absh-315 \absw803 \dxfrtext200 \li50 \ri50 \sl-253 \tx50 \tqr \tx752 ME@\par 
}\pard \sl-253 \tx50 \tqr \tx752 {\pard \posx11192 \posy9596 \phpg \pvpg \absh-315 \absw1169 \dxfrtext200 \fs10 \f0 \fs24 \f0 \pard \s15 \posx11192 \posy9596 \phpg \pvpg \absh-315 \absw1169 \dxfrtext200 \li50 \ri50 \sl-253 \tx50 \tqr \tx1118 BIG\_FILE\par 
}\pard \sl-253 \tx50 \tqr \tx1118 {\pard \posx11189 \posy9938 \phpg \pvpg \absh-315 \absw1067 \dxfrtext200 \fs10 \f0 \fs24 \f0 \pard \s16 \posx11189 \posy9938 \phpg \pvpg \absh-315 \absw1067 \dxfrtext200 \li50 \ri50 \sl-253 \tx50 \tqr \tx1016 RT+XT\par 
}\pard \sl-253 \tx50 \tqr \tx1016 {\pard \posx13089 \posy7215 \phpg \pvpg \absh-315 \absw5032 \dxfrtext200 \fs10 \f0 \fs24 \f0 \pard \s17 \posx13089 \posy7215 \phpg \pvpg \absh-315 \absw5032 \dxfrtext200 \li50 \ri50 \sl-253 \tx50 \tqr \tx4981 :: = ? * [ ] ~ ) / or tab. Some valid filenames are:\par 
}\pard \sl-253 \tx50 \tqr \tx4981 {\pard \posx11184 \posy10469 \phpg \pvpg \absh-568 \absw7314 \dxfrtext200 \fs10 \f0 \fs24 \f0 \pard \s18 \posx11184 \posy10469 \phpg \pvpg \absh-568 \absw7314 \dxfrtext200 \li50 \fi442 \ri50 \sl-253 \tx50 \tx492 \tqr \tx7263 CP/M contains numerous commands that allow you to manipulate these files. Usually you must specify the name of the file you wish to\par 
}\pard \sl-253 \tx50 \tx492 \tqr \tx7263 \page \lndscpsxn {\stylesheet {\snext0 Normal;}
{\s2 \tx50 \tqr \tx7272 \qj \li907 \ri50 \sl252 \sbasedon0 \snext2 OmniPage #1025;}
{\s3 \tx63 \tqr \tx1207 \ql \sl261 \li894 \ri6154 \sbasedon0 \snext3 OmniPage #1026;}
{\s4 \tx50 \tqr \tx7270 \qj \li907 \ri91 \sl261 \sbasedon0 \snext4 OmniPage #1027;}
{\s5 \tx57 \tx494 \tqr \tx7278 \qj \li900 \fi437 \ri83 \sl261 \sbasedon0 \snext5 OmniPage #1028;}
{\s6 \tx65 \tx502 \tqr \tx7285 \qj \li892 \fi437 \ri76 \sl261 \sbasedon0 \snext6 OmniPage #1029;}
{\s7 \tx73 \tx510 \tqr \tx7311 \qj \li884 \fi437 \ri50 \sl263 \sbasedon0 \snext7 OmniPage #1030;}
{\s8 \tx50 \tqr \tx4645 \ql \sl334 \li907 \ri50 \sbasedon0 \snext8 OmniPage #1031;}
{\s9 \tqr \tx5313 \ql \sl334 \li907 \ri50 \sbasedon0 \snext9 OmniPage #1032;}
{\s10 \tqr \tx3643 \ql \sl312 \li907 \ri50 \sbasedon0 \snext10 OmniPage #1033;}
{\s11 \tqr \tx7279 \qj \li907 \ri50 \sl257 \sbasedon0 \snext11 OmniPage #1034;}
{\s12 \tx65 \tx498 \tqr \tx7268 \qj \li892 \fi433 \ri61 \sl260 \sbasedon0 \snext12 OmniPage #1035;}
{\s13 \tx50 \tqr \tx3227 \qc \sl247 \sbasedon0 \snext13 OmniPage #1036;}
{\s14 \tx50 \tqr \tx1079 \ql \sl247 \li907 \ri50 \sbasedon0 \snext14 OmniPage #1037;}
{\s15 \tqr \tx646 \ql \sl247 \li907 \ri50 \sbasedon0 \snext15 OmniPage #1038;}
{\s16 \tqr \tx671 \qj \li907 \ri82 \sl241 \sbasedon0 \snext16 OmniPage #1039;}
{\s17 \tx104 \tqr \tx703 \qc \sl139 \sbasedon0 \snext17 OmniPage #1040;}
{\s18 \tqr \tx4461 \ql \sl241 \li907 \ri50 \sbasedon0 \snext18 OmniPage #1041;}
}\par {\pard \posx1665 \posy208 \phpg \pvpg \absh-802 \absw7323 \dxfrtext200 \fs24 \f0 \pard \s2 \posx1665 \posy208 \phpg \pvpg \absh-802 \absw7323 \dxfrtext200 \qj \li50 \ri50 \sl-252 \tx50 \tqr \tx7272 manipulate. To make this a little easier, CP/M provides special characters, called \fs25 \f1 \i wildcards, \fs24 \f2 \plain \f2 \lang1033 \b that let you operate on more than \fs24 \f0 \plain \lang1033 one file at a time, and let you perform operations on groups.\par 
}\sect \sectd \linex0 \linemod0 \sbknone \lndscpsxn \marglsxn1615 \margrsxn1559 \pard \sl-252 \tx50 \tqr \tx7272 {\pard \posx1672 \posy1217 \phpg \pvpg \absh-7219 \absw7362 \dxfrtext200 \fs10 \f0 \fs24 \f3 \pard \s3 \posx1672 \posy1217 \phpg \pvpg \absh-7219 \absw7362 \dxfrtext200 \li63 \ri6154 \sl-261 \tx63 \tqr \tx1207 Filetypes\par 
\fs10 \f0 \fs24 \f0 \pard \s4 \posx1672 \posy1217 \phpg \pvpg \absh-7219 \absw7362 \dxfrtext200 \qj \li50 \ri91 \sl-261 \tx50 \tqr \tx7270 When you use CP/M it is useful to be able to identify files in a way that lets you know what they are going to be used for. For example, a text file and a program file are really different, but you might not know it by their filenames. CP/M allows you to tell what kind of file you are using by way of a three\_character extension added to the right of the filename and chosen from the list in Table 5\_1. The pletype is separated from the filename by a period; that is why a period can't be used in the filename.\par 
\fs10 \f0 \fs24 \f0 \pard \s5 \posx1672 \posy1217 \phpg \pvpg \absh-7219 \absw7362 \dxfrtext200 \qj \li57 \fi437 \ri83 \sl-261 \tx57 \tx494 \tqr \tx7278 If you can identify the filetype, you can pretty easily figure out what kind of file you are dealing with. First, it is important to distinguish between two kinds of files: data files and program files. A data file is usually one that contains text, numbers, and collections of characters. A typical data file is a document created on your word processor that is made up of text. In CP/M, this would normally have the extension TXT to stand for text or DOC to stand for document. Data files can usually be examined from CP/M using the TYPE command (as we shall soon see).\par 
\fs10 \f0 \fs24 \f0 \pard \s6 \posx1672 \posy1217 \phpg \pvpg \absh-7219 \absw7362 \dxfrtext200 \qj \li65 \fi437 \ri76 \sl-261 \tx65 \tx502 \tqr \tx7285 A program file, on the other hand, contains instructions and codes in a particular computer language. For example, a file with the extension COM is called a command file and contains codes that run the ZBOA in your C128. A program you wrote in Microsoft BASIC might have the extension BAS. Table 5\_1 lists the most common filetypes for CP/M. The books listed at the end of this chapter, as well as the Commodore 128 manual, explain these in more detail.\par 
\fs10 \f0 \fs24 \f0 \pard \s7 \posx1672 \posy1217 \phpg \pvpg \absh-7219 \absw7362 \dxfrtext200 \qj \li73 \fi437 \ri50 \sl-263 \tx73 \tx510 \tqr \tx7311 Note that you do not have to stick to the list of filetypes given in Table 5\_1. You can be creative and use names that make the type of file apparent. Here are some typical examples of complete filenames with filetype extensions:\par 
}\pard \sl-263 \tx73 \tx510 \tqr \tx7311 {\pard \posx1705 \posy8475 \phpg \pvpg \absh-644 \absw4696 \dxfrtext200 \fs10 \f0 \fs24 \f0 \pard \s8 \posx1705 \posy8475 \phpg \pvpg \absh-644 \absw4696 \dxfrtext200 \li50 \ri50 \sl-334 \tx50 \tqr \tx4645 MYPROG.BAS (a BASIC program)\par 
\pard \s8 \posx1705 \posy8475 \phpg \pvpg \absh-644 \absw4696 \dxfrtext200 \li50 \ri50 \sl-334 \tx50 \tqr \tx4645 JOE\_3\_14.LET (a letter to Joe written on 3\_14)\par 
}\pard \sl-334 \tx50 \tqr \tx4645 {\pard \posx1716 \posy9159 \phpg \pvpg \absh-1317 \absw5364 \dxfrtext200 \fs10 \f0 \fs24 \f0 \pard \s9 \posx1716 \posy9159 \phpg \pvpg \absh-1317 \absw5364 \dxfrtext200 \li50 \ri50 \sl-334 \tx50 \tqr \tx5313 PIP.COM (a CP/M program for copying files)\par 
\pard \s9 \posx1716 \posy9159 \phpg \pvpg \absh-1317 \absw5364 \dxfrtext200 \li50 \ri50 \sl-334 \tx50 \tqr \tx5313 CHAP2.BAK (a backup of the text file CHAP2.TXT)\par 
\pard \s9 \posx1716 \posy9159 \phpg \pvpg \absh-1317 \absw5364 \dxfrtext200 \li50 \ri50 \sl-334 \tx50 \tqr \tx5313 PERFECT.OVL (an overlay file for Perfect Writer)\par 
\pard \s9 \posx1716 \posy9159 \phpg \pvpg \absh-1317 \absw5364 \dxfrtext200 \li50 \ri50 \sl-334 \tx50 \tqr \tx5313 A347689.PBS (a poor choice for a name)\par 
}\pard \sl-334 \tx50 \tqr \tx5313 {\pard \posx11260 \posy287 \phpg \pvpg \absh-348 \absw3694 \dxfrtext200 \fs10 \f0 \fs30 \f0 \i \pard \s10 \posx11260 \posy287 \phpg \pvpg \absh-348 \absw3694 \dxfrtext200 \li50 \ri50 \sl-312 \tx50 \tqr \tx3643 CP/M's Built\_in Commands\par 
}\pard \sl-312 \tx50 \tqr \tx3643 \fs24 \f0 {\pard \posx11222 \posy699 \phpg \pvpg \absh-3396 \absw7330 \dxfrtext200 \fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s11 \posx11222 \posy699 \phpg \pvpg \absh-3396 \absw7330 \dxfrtext200 \qj \li50 \ri50 \sl-257 \tx50 \tqr \tx7279 Commands are instructions that tell CP/M what to do. We give commands to C\fs24 \f0 \ul P/M \fs24 \f0 \plain \lang1033 by typing the command's name after the A> prompt and pressing the \fs18 \f0 I \fs18 \f0 \ul Return \fs18 \f0 \plain \fs18 \lang1033 I \fs24 \f0 key. There are two kinds of commands in CP/M and the dis\-tinction between them is a subtle one. There are "built\_in commands" and "transient commands". The short programs that carry out built\_in commands are always in memory when CP/M is started up and are a part of CP/M itsel\'a3 The programs that carry out transient commands are not part of CP/M and are not automatically loaded when CP/M is first started. Instead, when you issue a transient command, CP/M goes out to the disk and searches for the program containing the command, loads it into memory, and then executes it.\par 
\fs10 \f0 \fs24 \f0 \pard \s12 \posx11222 \posy699 \phpg \pvpg \absh-3396 \absw7330 \dxfrtext200 \qj \li65 \fi433 \ri61 \sl-260 \tx65 \tx498 \tqr \tx7268 The CP/M built\_in commands execute quickly because they are al\-ready sitting in memory. The transients, on the other hand, are slower\par 
}\pard \sl-260 \tx65 \tx498 \tqr \tx7268 {\pard \posx13285 \posy4471 \phpg \pvpg \absh-305 \absw3278 \dxfrtext200 \fs10 \f0 \fs24 \f2 \b \pard \s13 \posx13285 \posy4471 \phpg \pvpg \absh-305 \absw3278 \dxfrtext200 \qc \sl-247 \tx50 \tqr \tx3227 Table 5\_1. CP/M 3.0 Filetypes\par 
}\pard \sl-247 \tx50 \tqr \tx3227 \fs24 \f0 {\pard \posx11850 \posy5029 \phpg \pvpg \absh-297 \absw1130 \dxfrtext200 \fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s14 \posx11850 \posy5029 \phpg \pvpg \absh-297 \absw1130 \dxfrtext200 \li50 \ri50 \sl-247 \tx50 \tqr \tx1079 Extension\par 
}\pard \sl-247 \tx50 \tqr \tx1079 {\pard \posx15440 \posy5039 \phpg \pvpg \absh-297 \absw697 \dxfrtext200 \fs10 \f0 \fs24 \f0 \pard \s15 \posx15440 \posy5039 \phpg \pvpg \absh-297 \absw697 \dxfrtext200 \li50 \ri50 \sl-247 \tx50 \tqr \tx646 Type\par 
}\pard \sl-247 \tx50 \tqr \tx646 {\pard \posx11980 \posy5510 \phpg \pvpg \absh-5384 \absw754 \dxfrtext200 \fs10 \f0 \fs24 \f0 \pard \s16 \posx11980 \posy5510 \phpg \pvpg \absh-5384 \absw754 \dxfrtext200 \qj \li50 \ri82 \sl-241 \tx50 \tqr \tx671 .ASM .BAK .BAS .COM .DAT .DOC .FOR .HEX .INT .LIB .PAS .OVL .OVR .PLI .PRN .REL .SUB .SYM .SYS .TXT .XRF\par 
\fs10 \f0 \fs24 \f0 \pard \s17 \posx11980 \posy5510 \phpg \pvpg \absh-5384 \absw754 \dxfrtext200 \qc \sl-139 \tx104 \tqr \tx703 ~$~\par 
\pard \s17 \posx11980 \posy5510 \phpg \pvpg \absh-5384 \absw754 \dxfrtext200 \qc \sl-139 \tx104 \tqr \tx703 .4' 4'\par 
}\pard \sl-139 \tx104 \tqr \tx703 {\pard \posx13493 \posy5513 \phpg \pvpg \absh-5365 \absw4512 \dxfrtext200 \fs10 \f0 \fs24 \f0 \pard \s18 \posx13493 \posy5513 \phpg \pvpg \absh-5365 \absw4512 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tqr \tx4461 Assembly language source file\par 
\pard \s18 \posx13493 \posy5513 \phpg \pvpg \absh-5365 \absw4512 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tqr \tx4461 Backup file\par 
\pard \s18 \posx13493 \posy5513 \phpg \pvpg \absh-5365 \absw4512 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tqr \tx4461 BASIC source program\par 
\pard \s18 \posx13493 \posy5513 \phpg \pvpg \absh-5365 \absw4512 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tqr \tx4461 Z80 or 8080 program\par 
\pard \s18 \posx13493 \posy5513 \phpg \pvpg \absh-5365 \absw4512 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tqr \tx4461 A data file\par 
\pard \s18 \posx13493 \posy5513 \phpg \pvpg \absh-5365 \absw4512 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tqr \tx4461 A document file\par 
\pard \s18 \posx13493 \posy5513 \phpg \pvpg \absh-5365 \absw4512 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tqr \tx4461 FORTRAN program\par 
\pard \s18 \posx13493 \posy5513 \phpg \pvpg \absh-5365 \absw4512 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tqr \tx4461 Hexadecimal file created by ASM and MAC\par 
\pard \s18 \posx13493 \posy5513 \phpg \pvpg \absh-5365 \absw4512 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tqr \tx4461 Intermediate work file\par 
\pard \s18 \posx13493 \posy5513 \phpg \pvpg \absh-5365 \absw4512 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tqr \tx4461 Library file used by ASM, MAC, and RMAC\par 
\pard \s18 \posx13493 \posy5513 \phpg \pvpg \absh-5365 \absw4512 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tqr \tx4461 Pascal source program\par 
\pard \s18 \posx13493 \posy5513 \phpg \pvpg \absh-5365 \absw4512 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tqr \tx4461 Overlay file used by another program\par 
\pard \s18 \posx13493 \posy5513 \phpg \pvpg \absh-5365 \absw4512 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tqr \tx4461 Overlay file used by another program\par 
\pard \s18 \posx13493 \posy5513 \phpg \pvpg \absh-5365 \absw4512 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tqr \tx4461 PL/I source program\par 
\pard \s18 \posx13493 \posy5513 \phpg \pvpg \absh-5365 \absw4512 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tqr \tx4461 Print file created by ASM, MAC, and RMAC\par 
\pard \s18 \posx13493 \posy5513 \phpg \pvpg \absh-5365 \absw4512 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tqr \tx4461 Relocatable file created by RMAC\par 
\pard \s18 \posx13493 \posy5513 \phpg \pvpg \absh-5365 \absw4512 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tqr \tx4461 Source file used by SUBMIT\par 
\pard \s18 \posx13493 \posy5513 \phpg \pvpg \absh-5365 \absw4512 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tqr \tx4461 Symbol table created by ASM, MAC, and RMAC\par 
\pard \s18 \posx13493 \posy5513 \phpg \pvpg \absh-5365 \absw4512 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tqr \tx4461 A CP/M system file (used by CP/M)\par 
\pard \s18 \posx13493 \posy5513 \phpg \pvpg \absh-5365 \absw4512 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tqr \tx4461 A text file\par 
\pard \s18 \posx13493 \posy5513 \phpg \pvpg \absh-5365 \absw4512 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tqr \tx4461 A cross reference file\par 
\pard \s18 \posx13493 \posy5513 \phpg \pvpg \absh-5365 \absw4512 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tqr \tx4461 A temporary file\par 
}\pard \sl-241 \tx50 \tqr \tx4461 \page \lndscpsxn {\stylesheet {\snext0 Normal;}
{\s2 \tx50 \tqr \tx7295 \qj \li907 \ri64 \sl256 \sbasedon0 \snext2 OmniPage #1281;}
{\s3 \tx64 \tx506 \tqr \tx7309 \qj \li893 \fi442 \ri50 \sl261 \sbasedon0 \snext3 OmniPage #1282;}
{\s4 \tx69 \tx511 \tqr \tx7294 \qj \li888 \fi442 \ri65 \sl260 \sbasedon0 \snext4 OmniPage #1283;}
{\s5 \tx86 \tx528 \tqr \tx7302 \qj \li871 \fi442 \ri57 \sl261 \sbasedon0 \snext5 OmniPage #1284;}
{\s6 \tx50 \tqr \tx4290 \qc \sl253 \sbasedon0 \snext6 OmniPage #1285;}
{\s7 \tx50 \tx100 \tx3034 \tqr \tx4799 \ql \sl253 \li907 \ri50 \sbasedon0 \snext7 OmniPage #1286;}
{\s8 \tqr \tx1052 \ql \sl240 \li907 \ri50 \sbasedon0 \snext8 OmniPage #1287;}
{\s9 \tqr \tx3433 \ql \sl241 \li907 \ri50 \sbasedon0 \snext9 OmniPage #1288;}
{\s10 \tx487 \tqr \tx7293 \qj \li907 \fi437 \ri50 \sl257 \sbasedon0 \snext10 OmniPage #1289;}
{\s11 \tx55 \tx492 \tqr \tx7266 \qj \li902 \fi437 \ri77 \sl260 \sbasedon0 \snext11 OmniPage #1290;}
{\s12 \tx59 \tx496 \tqr \tx7278 \qj \li898 \fi437 \ri65 \sl261 \sbasedon0 \snext12 OmniPage #1291;}
{\s13 \tx50 \tqr \tx2034 \ql \sl253 \li907 \ri50 \sbasedon0 \snext13 OmniPage #1292;}
{\s14 \tqr \tx7275 \qj \li907 \ri50 \sl262 \sbasedon0 \snext14 OmniPage #1293;}
{\s15 \tqr \tx3511 \ql \sl253 \li907 \ri50 \sbasedon0 \snext15 OmniPage #1294;}
{\s16 \tx51 \tqr \tx7269 \qj \li906 \ri67 \sl261 \sbasedon0 \snext16 OmniPage #1295;}
{\s17 \tx50 \tx483 \tqr \tx7286 \qj \li907 \fi433 \ri50 \sl260 \sbasedon0 \snext17 OmniPage #1296;}
}\par {\pard \posx1568 \posy299 \phpg \pvpg \absh-7336 \absw7360 \dxfrtext200 \fs24 \f0 \pard \s2 \posx1568 \posy299 \phpg \pvpg \absh-7336 \absw7360 \dxfrtext200 \qj \li50 \ri64 \sl-256 \tx50 \tqr \tx7295 because they are programs that must first be located on the disk and then loaded into memory. However, transients can be much larger in size than the resident memory\_based commands and, consequently, can do more. Transients are frequently referred to as "utility" commands because they normally help you manage and perform utility operation on files and disks.\par 
\fs10 \f0 \fs24 \f0 \pard \s3 \posx1568 \posy299 \phpg \pvpg \absh-7336 \absw7360 \dxfrtext200 \qj \li64 \fi442 \ri50 \sl-261 \tx64 \tx506 \tqr \tx7309 In the case of CP/M 3.0, the distinction between built\_in and transient commands is even more vague. Four of the built\_in commands have tran\-sient "extensions" that are executed if you need additional features. The six built\_in commands are listed in Table 5\_2. As a user of CP/M, the only reason you need to care about whether a command is transient or built\-in is that, if it is transient, it must be on the disk. If you type the name of a transient command and it is not on the disk, you will get a message: File not found, meaning CP/M could not find a file with the name you gave. Thus, built\_in commands are more convenient to use than transients.\par 
\fs10 \f0 \fs24 \f0 \pard \s4 \posx1568 \posy299 \phpg \pvpg \absh-7336 \absw7360 \dxfrtext200 \qj \li69 \fi442 \ri65 \sl-260 \tx69 \tx511 \tqr \tx7294 Of these six built\_in commands, two do not have transient extensions (that is, counterparts), namely DIRSYS and USER. When you look on your CP/M system disks, you will find, in addition to numerous utilities, the programs DIR.COM , ERASE .COM , RENAME .COM , and TYPE .COM. These are the transient extensions that are executed if we request additional parameters that the in\_memory built\_in commands can't offer. Additional parameters are called "options" or option parameters in CP/M 3.0 and are indicated by placing additional information in brackets after the command itself.\par 
\fs10 \f0 \fs24 \f0 \pard \s5 \posx1568 \posy299 \phpg \pvpg \absh-7336 \absw7360 \dxfrtext200 \qj \li86 \fi442 \ri57 \sl-261 \tx86 \tx528 \tqr \tx7302 For example, to get a simple listing of the files on a disk, you can use the built\_in DIR command, but to get the listing along with the size of the files, you use DIR[SIZE] which will automatically invoke the transient version of DIR. All options in CP/M 3.0 are typed between brackets.\par 
}\sect \sectd \linex0 \linemod0 \sbknone \lndscpsxn \marglsxn1518 \margrsxn1521 \pard \sl-261 \tx86 \tx528 \tqr \tx7302 {\pard \posx3143 \posy8377 \phpg \pvpg \absh-318 \absw4341 \dxfrtext200 \fs10 \f0 \fs24 \f1 \b \pard \s6 \posx3143 \posy8377 \phpg \pvpg \absh-318 \absw4341 \dxfrtext200 \qc \sl-253 \tx50 \tqr \tx4290 Table \fs24 \f0 \plain \lang1033 5\_2. \fs24 \f1 \b Built\_In CP/M 3.0 Commands\par 
}\pard \sl-253 \tx50 \tqr \tx4290 \fs24 \f0 {\pard \posx2481 \posy8926 \phpg \pvpg \absh-315 \absw4850 \dxfrtext200 \fs10 \f0 \fs24 \f1 \fs24 \f0 \plain \lang1033 \pard \s7 \posx2481 \posy8926 \phpg \pvpg \absh-315 \absw4850 \dxfrtext200 \li50 \ri50 \sl-253 \tx50 \tx100 \tx3034 \tqr \tx4799 \tab Command\tab Function Provided\par 
}\pard \sl-253 \tx50 \tx100 \tx3034 \tqr \tx4799 {\pard \posx2477 \posy9407 \phpg \pvpg \absh-1517 \absw1103 \dxfrtext200 \fs10 \f0 \fs24 \f0 \pard \s8 \posx2477 \posy9407 \phpg \pvpg \absh-1517 \absw1103 \dxfrtext200 \li50 \ri50 \tx50 \tqr \tx1052 DIR\par 
\pard \s8 \posx2477 \posy9407 \phpg \pvpg \absh-1517 \absw1103 \dxfrtext200 \li50 \ri50 \tx50 \tqr \tx1052 DIRSYS\par 
\pard \s8 \posx2477 \posy9407 \phpg \pvpg \absh-1517 \absw1103 \dxfrtext200 \li50 \ri50 \tx50 \tqr \tx1052 ERASE\par 
\pard \s8 \posx2477 \posy9407 \phpg \pvpg \absh-1517 \absw1103 \dxfrtext200 \li50 \ri50 \tx50 \tqr \tx1052 RENAME\par 
\pard \s8 \posx2477 \posy9407 \phpg \pvpg \absh-1517 \absw1103 \dxfrtext200 \li50 \ri50 \tx50 \tqr \tx1052 TYPE\par 
\pard \s8 \posx2477 \posy9407 \phpg \pvpg \absh-1517 \absw1103 \dxfrtext200 \li50 \ri50 \tx50 \tqr \tx1052 USER\par 
}\pard \tx50 \tqr \tx1052 {\pard \posx4657 \posy9397 \phpg \pvpg \absh-1523 \absw3484 \dxfrtext200 \fs10 \f0 \fs24 \f0 \pard \s9 \posx4657 \posy9397 \phpg \pvpg \absh-1523 \absw3484 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tqr \tx3433 Displays the disk directory\par 
\pard \s9 \posx4657 \posy9397 \phpg \pvpg \absh-1523 \absw3484 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tqr \tx3433 Displays the directory of system files\par 
\pard \s9 \posx4657 \posy9397 \phpg \pvpg \absh-1523 \absw3484 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tqr \tx3433 Erases a disk file\par 
\pard \s9 \posx4657 \posy9397 \phpg \pvpg \absh-1523 \absw3484 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tqr \tx3433 Renames a disk file\par 
\pard \s9 \posx4657 \posy9397 \phpg \pvpg \absh-1523 \absw3484 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tqr \tx3433 Displays a text file on the screen\par 
\pard \s9 \posx4657 \posy9397 \phpg \pvpg \absh-1523 \absw3484 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tqr \tx3433 Changes the user area\par 
}\pard \sl-241 \tx50 \tqr \tx3433 {\pard \posx11246 \posy301 \phpg \pvpg \absh-4460 \absw7344 \dxfrtext200 \fs10 \f0 \fs24 \f0 \pard \s10 \posx11246 \posy301 \phpg \pvpg \absh-4460 \absw7344 \dxfrtext200 \qj \li50 \fi437 \ri50 \sl-257 \tx50 \tx487 \tqr \tx7293 The new rules for CP/M 3.0 are as follows: If RENAME, ERASE, or TYPE are given without a filename, then the transient version is executed and you are prompted for more information. For example, if you enter the command TYPE without any filename after it, the transient version is invoked (read off the disk and executed), and you'll be prompted with the message "Enter filename:". If the commands DIR, ERASE, or TYPE are given with a filename and with an option parameter, the extended transient version will operate. If this seems overly complicated, you're right, it is. Before CP/M 3.0, transients and built\_in commands did not overlap. Bas\-ically, the reason for the overlap is to allow the built\_in commands to have additional and more powerful actions without changing their names.\par 
\fs10 \f0 \fs24 \f0 \pard \s11 \posx11246 \posy301 \phpg \pvpg \absh-4460 \absw7344 \dxfrtext200 \qj \li55 \fi437 \ri77 \sl-260 \tx55 \tx492 \tqr \tx7266 Another CP/M built\_in command changes the \fs24 \f2 \i default \fs24 \f0 \plain \lang1033 disk drive (de\-fault means the one showing the prompt). If the current drive is A and you enter the new drive followed by a colon (that is, you type B:), CP/M will change the default drive to B.\par 
\fs10 \f0 \fs24 \f0 \pard \s12 \posx11246 \posy301 \phpg \pvpg \absh-4460 \absw7344 \dxfrtext200 \qj \li59 \fi437 \ri65 \sl-261 \tx59 \tx496 \tqr \tx7278 Now that you understand the differences between the built\_in and transient commands, let's examine the built\_in commands in more detail.\par 
}\pard \sl-261 \tx59 \tx496 \tqr \tx7278 {\pard \posx11256 \posy4962 \phpg \pvpg \absh-315 \absw2085 \dxfrtext200 \fs10 \f0 \fs24 \f1 \b \pard \s13 \posx11256 \posy4962 \phpg \pvpg \absh-315 \absw2085 \dxfrtext200 \li50 \ri50 \sl-253 \tx50 \tqr \tx2034 DIR and DIRSYS\par 
}\pard \sl-253 \tx50 \tqr \tx2034 \fs24 \f0 {\pard \posx11237 \posy5326 \phpg \pvpg \absh-2418 \absw7326 \dxfrtext200 \fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s14 \posx11237 \posy5326 \phpg \pvpg \absh-2418 \absw7326 \dxfrtext200 \qj \li50 \ri50 \sl-262 \tx50 \tqr \tx7275 The DIR command (pronounced dee\_eye\_are) is used to display the names of the files on a diskette on the screen. The files can be on either the A or the B drive. The built\_in version of DIR simply displays the names of any or all files. On the other hand, the transient version of DIR allows eighteen different options, including the ability to get the size of each file in bytes, the total number of bytes consumed by all the files, and a sorted listing of the filenames. You can also have DIR.COM tell you the attributes of the files\'97that is, if they are read\_only, system files, read/write, or directory files.\par 
}\pard \sl-262 \tx50 \tqr \tx7275 {\pard \posx11248 \posy7946 \phpg \pvpg \absh-315 \absw3562 \dxfrtext200 \fs10 \f0 \fs24 \f1 \b \pard \s15 \posx11248 \posy7946 \phpg \pvpg \absh-315 \absw3562 \dxfrtext200 \li50 \ri50 \sl-253 \tx50 \tqr \tx3511 ERASE, RENAME, AND TYPE\par 
}\pard \sl-253 \tx50 \tqr \tx3511 \fs24 \f0 {\pard \posx11234 \posy8334 \phpg \pvpg \absh-2664 \absw7337 \dxfrtext200 \fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s16 \posx11234 \posy8334 \phpg \pvpg \absh-2664 \absw7337 \dxfrtext200 \qj \li51 \ri67 \sl-261 \tx51 \tqr \tx7269 The ERASE command is used when you want to remove a file from the CP/M diskette. Once the file is removed, you cannot get it back (unless you have a special utility that unerases\'97see the previous section on CP/M software utilities), so you must be very careful when using this command.\par 
\fs10 \f0 \fs24 \f0 \pard \s17 \posx11234 \posy8334 \phpg \pvpg \absh-2664 \absw7337 \dxfrtext200 \qj \li50 \fi433 \ri50 \sl-260 \tx50 \tx483 \tqr \tx7286 The RENAME command is used to change the names of any files. For example, you might want to rename a file CHAPONE.TXT to CHAP\-TWO.TXT. RENAME will do this without affecting the contents of the file. When you use DIR to list the files, you will see CHAPTWO where you used to see CHAPONE.\par 
}\pard \sl-260 \tx50 \tx483 \tqr \tx7286 \page \lndscpsxn {\stylesheet {\snext0 Normal;}
{\s2 \tx50 \tx486 \tqr \tx7279 \qj \li907 \fi436 \ri50 \sl255 \sbasedon0 \snext2 OmniPage #1537;}
{\s3 \tx50 \tqr \tx844 \ql \sl253 \li907 \ri50 \sbasedon0 \snext3 OmniPage #1538;}
{\s4 \tqr \tx7292 \qj \li907 \ri55 \sl260 \sbasedon0 \snext4 OmniPage #1539;}
{\s5 \tx59 \tx500 \tqr \tx7297 \qj \li898 \fi441 \ri50 \sl261 \sbasedon0 \snext5 OmniPage #1540;}
{\s6 \tx50 \tqr \tx4003 \ql \sl312 \li907 \ri50 \sbasedon0 \snext6 OmniPage #1541;}
{\s7 \tqr \tx7248 \qj \li907 \ri50 \sl260 \sbasedon0 \snext7 OmniPage #1542;}
{\s8 \tqr \tx2708 \ql \sl253 \li907 \ri50 \sbasedon0 \snext8 OmniPage #1543;}
{\s9 \tqr \tx7277 \qj \li907 \ri50 \sl260 \sbasedon0 \snext9 OmniPage #1544;}
{\s10 \tx85 \tqr \tx5082 \ql \sl253 \li872 \ri2269 \sbasedon0 \snext10 OmniPage #1545;}
{\s11 \tx50 \tqr \tx7286 \qj \li907 \ri65 \sl258 \sbasedon0 \snext11 OmniPage #1546;}
{\s12 \tx62 \tx498 \tqr \tx7301 \qj \li895 \fi436 \ri50 \sl260 \sbasedon0 \snext12 OmniPage #1547;}
{\s13 \tx50 \tqr \tx5286 \qc \sl253 \sbasedon0 \snext13 OmniPage #1548;}
{\s14 \tx50 \tqr \tx1138 \ql \sl253 \li907 \ri50 \sbasedon0 \snext14 OmniPage #1549;}
{\s15 \tqr \tx1803 \ql \sl253 \li907 \ri50 \sbasedon0 \snext15 OmniPage #1550;}
{\s16 \tqr \tx1136 \ql \sl240 \li907 \ri50 \sbasedon0 \snext16 OmniPage #1551;}
{\s17 \tqr \tx3879 \ql \sl241 \li907 \ri50 \sbasedon0 \snext17 OmniPage #1552;}
}\par {\pard \posx1581 \posy203 \phpg \pvpg \absh-1848 \absw7330 \dxfrtext200 \fs24 \f0 \pard \s2 \posx1581 \posy203 \phpg \pvpg \absh-1848 \absw7330 \dxfrtext200 \qj \li50 \fi436 \ri50 \sl-255 \tx50 \tx486 \tqr \tx7279 TYPE is the CP/M built\_in command for viewing the contents of a text file or data file. TYPE is one of the first commands to become familiar with, as it provides an easy method for examining the contents of a file on the screen. You do not want to use TYPE to try to view the contents of a nontext file, such as a COM file. This may send improper characters to the video screen that could make it lock up and require a rebooting of CP/M.\par 
}\sect \sectd \linex0 \linemod0 \sbknone \lndscpsxn \marglsxn1531 \margrsxn1474 \pard \sl-255 \tx50 \tx486 \tqr \tx7279 {\pard \posx1596 \posy2257 \phpg \pvpg \absh-315 \absw895 \dxfrtext200 \fs10 \f0 \fs24 \f1 \b \pard \s3 \posx1596 \posy2257 \phpg \pvpg \absh-315 \absw895 \dxfrtext200 \li50 \ri50 \sl-253 \tx50 \tqr \tx844 USER\par 
}\pard \sl-253 \tx50 \tqr \tx844 \fs24 \f0 {\pard \posx1584 \posy2641 \phpg \pvpg \absh-4231 \absw7348 \dxfrtext200 \fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s4 \posx1584 \posy2641 \phpg \pvpg \absh-4231 \absw7348 \dxfrtext200 \qj \li50 \ri55 \sl-260 \tx50 \tqr \tx7292 Each CP/M disk can be partitioned or divided into 16 regions or areas, called user areas, which are numbered 0 to 15. Each area can be assigned to hold files for different users of the disk or different subject areas. User's areas are best used on a hard disk where several people may share it. Since you probably won't have multiple users on the Commodore 128, the USER command will most likely be used occasionally for storing different categories of files.\par 
\fs10 \f0 \fs24 \f0 \pard \s5 \posx1584 \posy2641 \phpg \pvpg \absh-4231 \absw7348 \dxfrtext200 \qj \li59 \fi441 \ri50 \sl-261 \tx59 \tx500 \tqr \tx7297 When you first start CP/M, the system automatically selects area 0. You can change to another area by giving the USER command followed by the user number. The files in one user area are not accessible by a different user area unless they are first copied to that area. All the built\_in com\-mands are available when you are in a user area. When you switch to a new user area, the CP/M prompt reflects the new area. For example, typing USER 9 will change to user area 9 and produce the prompt 9A>. Use the user areas with caution, as it is easy to misplace files in the areas, and finding them is time consuming.\par 
}\pard \sl-261 \tx59 \tx500 \tqr \tx7297 {\pard \posx1623 \posy7200 \phpg \pvpg \absh-348 \absw4054 \dxfrtext200 \fs10 \f0 \fs30 \f2 \i \pard \s6 \posx1623 \posy7200 \phpg \pvpg \absh-348 \absw4054 \dxfrtext200 \li50 \ri50 \sl-312 \tx50 \tqr \tx4003 CPIM liansients and UtiliDes\par 
}\pard \sl-312 \tx50 \tqr \tx4003 \fs24 \f0 {\pard \posx1603 \posy7602 \phpg \pvpg \absh-575 \absw7299 \dxfrtext200 \fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s7 \posx1603 \posy7602 \phpg \pvpg \absh-575 \absw7299 \dxfrtext200 \qj \li50 \ri50 \sl-260 \tx50 \tqr \tx7248 There are six important CP/M 3.0 transients that are used fairly often, and these are listed in Table 5\_3. Let's go over each, one at a time.\par 
}\pard \sl-260 \tx50 \tqr \tx7248 {\pard \posx1611 \posy8384 \phpg \pvpg \absh-315 \absw2759 \dxfrtext200 \fs10 \f0 \fs24 \f1 \b \pard \s8 \posx1611 \posy8384 \phpg \pvpg \absh-315 \absw2759 \dxfrtext200 \li50 \ri50 \sl-253 \tx50 \tqr \tx2708 CP/M Video Aid: HELP\par 
}\pard \sl-253 \tx50 \tqr \tx2708 \fs24 \f0 {\pard \posx1598 \posy8772 \phpg \pvpg \absh-2399 \absw7328 \dxfrtext200 \fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s9 \posx1598 \posy8772 \phpg \pvpg \absh-2399 \absw7328 \dxfrtext200 \qj \li50 \ri50 \sl-260 \tx50 \tqr \tx7277 One new feature of CP/M 3.0 that is lacking from earlier versions is the HELP transient. HELP.COM is used to display on the screen information about the different commands and transients in CP/M. It uses a very large work file called HELP.HLP, that contains most of the text it uses. To use it, you type HELP followed by a topic, such as HELP PIP. It in turn displays a terse listing of what the command (PIP) does. HELP can't be used when the computer is running a program. If you have a good book on CP/M, you may not want to use the HELP command and its large file to save room on the disk.\par 
}\pard \sl-260 \tx50 \tqr \tx7277 {\pard \posx11285 \posy199 \phpg \pvpg \absh-6652 \absw7352 \dxfrtext200 \fs10 \f0 \fs24 \f1 \b \pard \s10 \posx11285 \posy199 \phpg \pvpg \absh-6652 \absw7352 \dxfrtext200 \li85 \ri2269 \sl-253 \tx85 \tqr \tx5082 Setting Up CP/M Disks: FORMAT, COPYSYS\par 
\fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s11 \posx11285 \posy199 \phpg \pvpg \absh-6652 \absw7352 \dxfrtext200 \qj \li50 \ri65 \sl-258 \tx50 \tqr \tx7286 Information is stored on the surface of the CP/M diskette as a series of blocks (called sectors). There are many different arrangements possible for locating these sectors on a disk, and because of this each disk must first be prepared to receive information in the desired format. We call this preparation "formatting", and it must be done before a blank, out\_of\_the\-box diskette can be used to store CP/M files. The transient command for formatting a CP/M disk is called FORMAT. Once you have run FORMAT on a blank disk, it is in a state that can be read, but it contains no information. A DIR performed on a formatted blank disk will give the message: no files. Because of its intelligent disk drives, the Commodore 128 version of FORMAT requests you to tell it the type of CP/M computer you wish the diskettes to be compatible with.\par 
\fs10 \f0 \fs24 \f0 \pard \s12 \posx11285 \posy199 \phpg \pvpg \absh-6652 \absw7352 \dxfrtext200 \qj \li62 \fi436 \ri50 \sl-260 \tx62 \tx498 \tqr \tx7301 Once a CP/M disk is formatted, it is ready to receive files. But such a disk cannot be used to "boot" or start CP/M because it still does not have the CP/M program itself on it. In CP/M 3.0, the CP/M program or "system", as it is called, is stored partially in some invisible sectors of the disk and partially as two visible files: CPM.SYS and CCP.COM. When the C128 is first started, it checks if a CP/M disk is in the drive. If one is found, the first thing that happens is the CP/M system is loaded off the invisible sectors and into memory. Control is passed to the system program in memory, and it in turn reads the larger files, CPM.SYS and CCP.COM, into memory. These files contain the bulk of the code to complete the CP/M system. The COPYSYS program is used to both format a disk and to copy the CP/M system in the invisible sectors from one disk to another.\par 
}\pard \sl-260 \tx62 \tx498 \tqr \tx7301 {\pard \posx12340 \posy8152 \phpg \pvpg \absh-315 \absw5337 \dxfrtext200 \fs10 \f0 \fs24 \f1 \b \pard \s13 \posx12340 \posy8152 \phpg \pvpg \absh-315 \absw5337 \dxfrtext200 \qc \sl-253 \tx50 \tqr \tx5286 Table 5\_3. Often\_Used CP/M Transient Commands\par 
}\pard \sl-253 \tx50 \tqr \tx5286 \fs24 \f0 {\pard \posx12052 \posy8725 \phpg \pvpg \absh-315 \absw1189 \dxfrtext200 \fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s14 \posx12052 \posy8725 \phpg \pvpg \absh-315 \absw1189 \dxfrtext200 \li50 \ri50 \sl-253 \tx50 \tqr \tx1138 Command\par 
}\pard \sl-253 \tx50 \tqr \tx1138 {\pard \posx15055 \posy8720 \phpg \pvpg \absh-315 \absw1854 \dxfrtext200 \fs10 \f0 \fs24 \f0 \pard \s15 \posx15055 \posy8720 \phpg \pvpg \absh-315 \absw1854 \dxfrtext200 \li50 \ri50 \sl-253 \tx50 \tqr \tx1803 Function Provided\par 
}\pard \sl-253 \tx50 \tqr \tx1803 {\pard \posx12048 \posy9230 \phpg \pvpg \absh-1487 \absw1187 \dxfrtext200 \fs10 \f0 \fs19 \f3 \pard \s16 \posx12048 \posy9230 \phpg \pvpg \absh-1487 \absw1187 \dxfrtext200 \li50 \ri50 \tx50 \tqr \tx1136 HELP\par 
\pard \s16 \posx12048 \posy9230 \phpg \pvpg \absh-1487 \absw1187 \dxfrtext200 \li50 \ri50 \tx50 \tqr \tx1136 FORMAT\par 
\pard \s16 \posx12048 \posy9230 \phpg \pvpg \absh-1487 \absw1187 \dxfrtext200 \li50 \ri50 \tx50 \tqr \tx1136 COPYSYS\par 
\pard \s16 \posx12048 \posy9230 \phpg \pvpg \absh-1487 \absw1187 \dxfrtext200 \li50 \ri50 \tx50 \tqr \tx1136 PIP\par 
\pard \s16 \posx12048 \posy9230 \phpg \pvpg \absh-1487 \absw1187 \dxfrtext200 \li50 \ri50 \tx50 \tqr \tx1136 SHOW\par 
\pard \s16 \posx12048 \posy9230 \phpg \pvpg \absh-1487 \absw1187 \dxfrtext200 \li50 \ri50 \tx50 \tqr \tx1136 ED\par 
}\pard \tx50 \tqr \tx1136 \fs24 \f0 {\pard \posx14023 \posy9203 \phpg \pvpg \absh-1524 \absw3930 \dxfrtext200 \fs24 \f0 \fs24 \f0 \pard \s17 \posx14023 \posy9203 \phpg \pvpg \absh-1524 \absw3930 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tqr \tx3879 Provides help on CP/M subjects on screen\par 
\pard \s17 \posx14023 \posy9203 \phpg \pvpg \absh-1524 \absw3930 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tqr \tx3879 Used to format a blank diskette\par 
\pard \s17 \posx14023 \posy9203 \phpg \pvpg \absh-1524 \absw3930 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tqr \tx3879 Creates a new bootable CP/M disk\par 
\pard \s17 \posx14023 \posy9203 \phpg \pvpg \absh-1524 \absw3930 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tqr \tx3879 Used to copy files and backup files\par 
\pard \s17 \posx14023 \posy9203 \phpg \pvpg \absh-1524 \absw3930 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tqr \tx3879 Gives statistics on files\par 
\pard \s17 \posx14023 \posy9203 \phpg \pvpg \absh-1524 \absw3930 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tqr \tx3879 Standard CP/M editing program\par 
}\pard \sl-241 \tx50 \tqr \tx3879 \page \lndscpsxn {\stylesheet {\snext0 Normal;}
{\s2 \tx50 \tqr \tx2180 \ql \sl268 \li907 \ri50 \sbasedon0 \snext2 OmniPage #1793;}
{\s3 \tqr \tx7271 \qj \li907 \ri52 \sl257 \sbasedon0 \snext3 OmniPage #1794;}
{\s4 \tx52 \tx491 \tqr \tx7273 \qj \li905 \fi439 \ri50 \sl261 \sbasedon0 \snext4 OmniPage #1795;}
{\s5 \tx50 \tqr \tx3408 \ql \sl268 \li907 \ri50 \sbasedon0 \snext5 OmniPage #1796;}
{\s6 \tqr \tx7291 \qj \li907 \ri50 \sl263 \sbasedon0 \snext6 OmniPage #1797;}
{\s7 \tqr \tx2635 \ql \sl268 \li907 \ri50 \sbasedon0 \snext7 OmniPage #1798;}
{\s8 \tqr \tx7279 \qj \li907 \ri50 \sl256 \sbasedon0 \snext8 OmniPage #1799;}
{\s9 \tqr \tx4256 \ql \sl297 \li907 \ri50 \sbasedon0 \snext9 OmniPage #1800;}
{\s10 \tqr \tx7265 \qj \li907 \ri50 \sl259 \sbasedon0 \snext10 OmniPage #1801;}
{\s11 \tqr \tx2113 \ql \sl268 \li907 \ri50 \sbasedon0 \snext11 OmniPage #1802;}
{\s12 \tqr \tx7286 \qj \li907 \ri50 \sl259 \sbasedon0 \snext12 OmniPage #1803;}
{\s13 \tx51 \tx490 \tqr \tx7269 \qj \li906 \fi439 \ri67 \sl267 \sbasedon0 \snext13 OmniPage #1804;}
{\s14 \tx66 \tqr \tx4303 \ql \sl268 \li891 \ri3019 \sbasedon0 \snext14 OmniPage #1805;}
{\s15 \tx50 \tqr \tx7272 \qj \li907 \ri50 \sl259 \sbasedon0 \snext15 OmniPage #1806;}
{\s16 \tqr \tx5150 \qc \sl253 \sbasedon0 \snext16 OmniPage #1807;}
{\s17 \tqr \tx1138 \ql \sl189 \li907 \ri50 \sbasedon0 \snext17 OmniPage #1808;}
{\s18 \tqr \tx1812 \ql \sl232 \li907 \ri50 \sbasedon0 \snext18 OmniPage #1809;}
{\s19 \tx100 \tx1349 \tqr \tx6165 \ql \sl241 \li907 \ri50 \sbasedon0 \snext19 OmniPage #1810;}
}\par {\pard \posx1691 \posy173 \phpg \pvpg \absh-319 \absw2231 \dxfrtext200 \fs24 \f0 \b \pard \s2 \posx1691 \posy173 \phpg \pvpg \absh-319 \absw2231 \dxfrtext200 \li50 \ri50 \sl-268 \tx50 \tqr \tx2180 Copying Files: PIP\par 
}\sect \sectd \linex0 \linemod0 \sbknone \lndscpsxn \marglsxn1629 \margrsxn1492 \pard \sl-268 \tx50 \tqr \tx2180 {\pard \posx1679 \posy544 \phpg \pvpg \absh-3950 \absw7324 \dxfrtext200 \fs10 \f0 \fs23 \f1 \plain \fs23 \f1 \lang1033 \pard \s3 \posx1679 \posy544 \phpg \pvpg \absh-3950 \absw7324 \dxfrtext200 \qj \li50 \ri52 \sl-257 \tx50 \tqr \tx7271 Once you have formatted a diskette and installed the CP/M system with COPYSYS, you are ready to copy files to the disk with the PIP utility. PIP stands for Peripheral Interchange Program (PIP), and allows CP/M to move files not only between disks, but also from disk files to printers or from disk files to the screen. In CP/M, the disk drive, printer, and screen are all "peripherals" that can be accessed directly from CP/M.\par 
\fs10 \f0 \fs23 \f1 \pard \s4 \posx1679 \posy544 \phpg \pvpg \absh-3950 \absw7324 \dxfrtext200 \qj \li52 \fi439 \ri50 \sl-261 \tx52 \tx491 \tqr \tx7273 PIP's most important function is copying files from disk to disk. There are a large number of options you can use with PIP. For example, you can ask PIP to "archive" files, meaning you only copy a file if it was modified since it was last copied. This feature saves time when you are "backing\-up" the files on a disk. Other PIP options request permission to continue, echo the copying on the screen, filter out special characters, or convert uppercase letters to lowercase. PIP can copy single files or groups of files, change names as it copies, print a group of files, extract a portion of a file, join several files into a single file, and much more.\par 
}\pard \sl-261 \tx52 \tx491 \tqr \tx7273 \fs24 \f0 {\pard \posx1698 \posy4692 \phpg \pvpg \absh-319 \absw3459 \dxfrtext200 \fs10 \f0 \fs24 \f0 \b \pard \s5 \posx1698 \posy4692 \phpg \pvpg \absh-319 \absw3459 \dxfrtext200 \li50 \ri50 \sl-268 \tx50 \tqr \tx3408 Determining File Size: SHOW\par 
}\pard \sl-268 \tx50 \tqr \tx3408 {\pard \posx1683 \posy5058 \phpg \pvpg \absh-2688 \absw7342 \dxfrtext200 \fs10 \f0 \fs23 \f1 \plain \fs23 \f1 \lang1033 \pard \s6 \posx1683 \posy5058 \phpg \pvpg \absh-2688 \absw7342 \dxfrtext200 \qj \li50 \ri50 \sl-263 \tx50 \tqr \tx7291 Before you can copy files from disk to disk, you need to make sure there is enough room or space on the destination disk to hold the file. The SHOW transient is used to find the remaining disk space. When it is executed, SHOW returns the amount of Read/Write space on the disk. SHOW is also used to tell the number of directory entries. CP/M limits the maximum number of files that can be on the disk to 64. A third feature of SHOW, invoked with the option [USER], will reveal the number of active user areas and the number of files contained in each area. Another option of SHOW, called [DRIVE], will produce a listing of the disk char\-acteristics, such as total capacity, directory space, and block size.\par 
}\pard \sl-263 \tx50 \tqr \tx7291 \fs24 \f0 {\pard \posx1700 \posy7946 \phpg \pvpg \absh-324 \absw2686 \dxfrtext200 \fs10 \f0 \fs24 \f0 \b \pard \s7 \posx1700 \posy7946 \phpg \pvpg \absh-324 \absw2686 \dxfrtext200 \li50 \ri50 \sl-268 \tx50 \tqr \tx2635 The System Editor: \fs24 \f2 \plain \f2 \lang1033 ED\par 
}\pard \sl-268 \tx50 \tqr \tx2635 \fs24 \f0 {\pard \posx1685 \posy8331 \phpg \pvpg \absh-1581 \absw7330 \dxfrtext200 \fs10 \f0 \fs23 \f1 \pard \s8 \posx1685 \posy8331 \phpg \pvpg \absh-1581 \absw7330 \dxfrtext200 \qj \li50 \ri50 \sl-256 \tx50 \tqr \tx7279 ED is a very primitive text\_editing program called a "line editor" that is provided on every CP/M diskette. ED is not useful for serious word pro\-cessing, but is rather for entering very short text files, such as batch files or short messages. Anyone considering serious text editing should pur\-chase a professional word processing program, such as Perfect Writer or \fs16 \f3 Wr~rfl.Rt:~r\par 
}\pard \sl-256 \tx50 \tqr \tx7279 \fs24 \f0 {\pard \posx11316 \posy182 \phpg \pvpg \absh-375 \absw4307 \dxfrtext200 \fs28 \f0 \fs28 \f0 \i \b \pard \s9 \posx11316 \posy182 \phpg \pvpg \absh-375 \absw4307 \dxfrtext200 \li50 \ri50 \sl-297 \tx50 \tqr \tx4256 The Less\_Used CPIM Transients\par 
}\pard \sl-297 \tx50 \tqr \tx4256 \fs24 \f0 {\pard \posx11283 \posy590 \phpg \pvpg \absh-834 \absw7316 \dxfrtext200 \fs10 \f0 \fs23 \f1 \plain \fs23 \f1 \lang1033 \plain \fs23 \f1 \lang1033 \pard \s10 \posx11283 \posy590 \phpg \pvpg \absh-834 \absw7316 \dxfrtext200 \qj \li50 \ri50 \sl-259 \tx50 \tqr \tx7265 There are many more transient commands in CP/M 3.0 which are less often used than the previous ones we have learned about. Table 5\_4 lists these. Let's examine these further.\par 
}\pard \sl-259 \tx50 \tqr \tx7265 \fs24 \f0 {\pard \posx11295 \posy1619 \phpg \pvpg \absh-319 \absw2164 \dxfrtext200 \fs10 \f0 \fs24 \f0 \b \pard \s11 \posx11295 \posy1619 \phpg \pvpg \absh-319 \absw2164 \dxfrtext200 \li50 \ri50 \sl-268 \tx50 \tqr \tx2113 DATE and FKEYS\par 
}\pard \sl-268 \tx50 \tqr \tx2113 {\pard \posx11282 \posy2000 \phpg \pvpg \absh-2394 \absw7337 \dxfrtext200 \fs10 \f0 \fs23 \f1 \plain \fs23 \f1 \lang1033 \pard \s12 \posx11282 \posy2000 \phpg \pvpg \absh-2394 \absw7337 \dxfrtext200 \qj \li50 \ri50 \sl-259 \tx50 \tqr \tx7286 The DATE transient command is used to set or to display the internal time and date. The Commodore 128 keeps this information in a real\_time clock. When you use DATE without options, it displays the date and time. With options, it sets the date and time.\par 
\fs10 \f0 \fs23 \f1 \pard \s13 \posx11282 \posy2000 \phpg \pvpg \absh-2394 \absw7337 \dxfrtext200 \qj \li51 \fi439 \ri67 \sl-267 \tx51 \tx490 \tqr \tx7269 FKEYS is used to customize the Commodore 128 function keys so they can elicit complete CP/M commands. For example, you could set up the F1 function key so that when pressed it reproduces DIR *.COM [FULL, EXCLUDE], and RETURN. This will cause a full listing of all the non\-COM files on the disk and save typing 26 keystrokes.\par 
}\pard \sl-267 \tx51 \tx490 \tqr \tx7269 \fs24 \f0 {\pard \posx11284 \posy4589 \phpg \pvpg \absh-2264 \absw7323 \dxfrtext200 \fs10 \f0 \fs24 \f0 \b \pard \s14 \posx11284 \posy4589 \phpg \pvpg \absh-2264 \absw7323 \dxfrtext200 \li66 \ri3019 \sl-268 \tx66 \tqr \tx4303 DEVICE and Logical/Physical Devices\par 
\fs10 \f0 \fs23 \f1 \plain \fs23 \f1 \lang1033 \pard \s15 \posx11284 \posy4589 \phpg \pvpg \absh-2264 \absw7323 \dxfrtext200 \qj \li50 \ri50 \sl-259 \tx50 \tqr \tx7272 CP/M was designed from the start to work with different kinds of periph\-eral units or "devices". In Commodore 128 CP/M, the keyboard, printer, screen, and phone modem are all considered peripheral devices. CP/M also has what are called "logical devices". A logical device represents a particular function of your computer, while a physical device is the spe\-cific piece of equipment you choose to perform that function. We convey our choices to the Commodore 128 by using the DEVICE transient command.\par 
}\pard \sl-259 \tx50 \tqr \tx7272 \fs24 \f0 {\pard \posx12396 \posy7275 \phpg \pvpg \absh-315 \absw5201 \dxfrtext200 \fs10 \f0 \fs23 \f0 \b \pard \s16 \posx12396 \posy7275 \phpg \pvpg \absh-315 \absw5201 \dxfrtext200 \qc \sl-253 \tx50 \tqr \tx5150 Table 5\_4. Less Used CP/M Transient Commands\par 
}\pard \sl-253 \tx50 \tqr \tx5150 \fs24 \f0 {\pard \posx11716 \posy7800 \phpg \pvpg \absh-315 \absw1189 \dxfrtext200 \fs10 \f0 \fs23 \f1 \plain \fs23 \f1 \lang1033 \pard \s17 \posx11716 \posy7800 \phpg \pvpg \absh-315 \absw1189 \dxfrtext200 \li50 \ri50 \sl-189 \tx50 \tqr \tx1138 Commond\par 
}\pard \sl-189 \tx50 \tqr \tx1138 \fs24 \f0 {\pard \posx14710 \posy7818 \phpg \pvpg \absh-286 \absw1863 \dxfrtext200 \fs10 \f0 \fs21 \f0 \pard \s18 \posx14710 \posy7818 \phpg \pvpg \absh-286 \absw1863 \dxfrtext200 \li50 \ri50 \sl-232 \tx50 \tqr \tx1812 Function Provided\par 
}\pard \sl-232 \tx50 \tqr \tx1812 \fs24 \f0 {\pard \posx11711 \posy8307 \phpg \pvpg \absh-2457 \absw6216 \dxfrtext200 \fs21 \f0 \pard \s19 \posx11711 \posy8307 \phpg \pvpg \absh-2457 \absw6216 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tx100 \tx1349 \tqr \tx6165 \tab DATE\tab Displays and alters the time and date\par 
\pard \s19 \posx11711 \posy8307 \phpg \pvpg \absh-2457 \absw6216 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tx100 \tx1349 \tqr \tx6165 \tab DEVICE\tab Displays and alters peripheral assignments\par 
\pard \s19 \posx11711 \posy8307 \phpg \pvpg \absh-2457 \absw6216 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tx100 \tx1349 \tqr \tx6165 \tab FKEYS\tab Assigns commands to C128 function keys\par 
\pard \s19 \posx11711 \posy8307 \phpg \pvpg \absh-2457 \absw6216 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tx100 \tx1349 \tqr \tx6165 \tab GET\tab Inputs information from a file instead of keyboard\par 
\pard \s19 \posx11711 \posy8307 \phpg \pvpg \absh-2457 \absw6216 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tx100 \tx1349 \tqr \tx6165 \tab INITDIR\tab Prepares a disk for time\_ and date\_stamping of files\par 
\pard \s19 \posx11711 \posy8307 \phpg \pvpg \absh-2457 \absw6216 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tx100 \tx1349 \tqr \tx6165 \tab PUT\tab Sends ouput to a disk file instead of screen or printer\par 
\pard \s19 \posx11711 \posy8307 \phpg \pvpg \absh-2457 \absw6216 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tx100 \tx1349 \tqr \tx6165 \tab SET\tab Changes file attributes, assigns a label, sets up a\par 
\pard \s19 \posx11711 \posy8307 \phpg \pvpg \absh-2457 \absw6216 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tx100 \tx1349 \tqr \tx6165 \tab \tab password\par 
\pard \s19 \posx11711 \posy8307 \phpg \pvpg \absh-2457 \absw6216 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tx100 \tx1349 \tqr \tx6165 \tab SETDEF\tab Sets up the disk search path for finding files\par 
\pard \s19 \posx11711 \posy8307 \phpg \pvpg \absh-2457 \absw6216 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tx100 \tx1349 \tqr \tx6165 \tab SUBMIT\tab Executes commands from a disk file\par 
}\pard \sl-241 \tx50 \tx100 \tx1349 \tqr \tx6165 \fs24 \f0 \page \lndscpsxn {\stylesheet {\snext0 Normal;}
{\s2 \tx50 \tx477 \tqr \tx7263 \qj \li907 \fi427 \ri50 \sl252 \sbasedon0 \snext2 OmniPage #2049;}
{\s3 \tx50 \tqr \tx2822 \ql \sl276 \li907 \ri50 \sbasedon0 \snext3 OmniPage #2050;}
{\s4 \tx52 \tqr \tx7279 \qj \li905 \ri55 \sl260 \sbasedon0 \snext4 OmniPage #2051;}
{\s5 \tx490 \tqr \tx7262 \qj \li905 \fi438 \ri72 \sl262 \sbasedon0 \snext5 OmniPage #2052;}
{\s6 \tx50 \tx488 \tqr \tx7284 \qj \li907 \fi438 \ri50 \sl260 \sbasedon0 \snext6 OmniPage #2053;}
{\s7 \tx50 \tqr \tx4464 \ql \sl276 \li907 \ri50 \sbasedon0 \snext7 OmniPage #2054;}
{\s8 \tqr \tx7291 \qj \li907 \ri50 \sl261 \sbasedon0 \snext8 OmniPage #2055;}
{\s9 \tqr \tx7269 \qj \li907 \ri71 \sl256 \sbasedon0 \snext9 OmniPage #2056;}
{\s10 \tx56 \tx493 \tqr \tx7290 \qj \li901 \fi437 \ri50 \sl259 \sbasedon0 \snext10 OmniPage #2057;}
{\s11 \tx58 \tx495 \tqr \tx7274 \qj \li899 \fi437 \ri66 \sl260 \sbasedon0 \snext11 OmniPage #2058;}
{\s12 \tx50 \tqr \tx3903 \ql \sl304 \li907 \ri3412 \sbasedon0 \snext12 OmniPage #2059;}
{\s13 \tx58 \tqr \tx7265 \qj \li899 \ri50 \sl261 \sbasedon0 \snext13 OmniPage #2060;}
{\s14 \tx50 \tqr \tx5561 \qc \sl247 \sbasedon0 \snext14 OmniPage #2061;}
{\s15 \tx50 \tx100 \tx1369 \tqr \tx4808 \ql \sl247 \li907 \ri50 \sbasedon0 \snext15 OmniPage #2062;}
{\s16 \tx100 \tx1369 \tqr \tx6492 \ql \sl241 \li907 \ri50 \sbasedon0 \snext16 OmniPage #2063;}
}\par {\pard \posx1621 \posy194 \phpg \pvpg \absh-1308 \absw7314 \dxfrtext200 \fs24 \f0 \pard \s2 \posx1621 \posy194 \phpg \pvpg \absh-1308 \absw7314 \dxfrtext200 \qj \li50 \fi427 \ri50 \sl-252 \tx50 \tx477 \tqr \tx7263 This selection of choices makes it possible to assign different physical devices to different logical entities that CP/M communicates through. This may come in handy when you are trying to control several different devices connected to your Commodore 128. The DEVICE transient is used both to set the assignments and to display their current settings.\par 
}\sect \sectd \linex0 \linemod0 \sbknone \lndscpsxn \marglsxn1557 \margrsxn1574 \pard \sl-252 \tx50 \tx477 \tqr \tx7263 {\pard \posx1641 \posy1698 \phpg \pvpg \absh-337 \absw2873 \dxfrtext200 \fs10 \f0 \fs25 \f1 \b \pard \s3 \posx1641 \posy1698 \phpg \pvpg \absh-337 \absw2873 \dxfrtext200 \li50 \ri50 \sl-276 \tx50 \tqr \tx2822 GET, PUT, and INITDIR\par 
}\pard \sl-276 \tx50 \tqr \tx2822 \fs24 \f0 {\pard \posx1612 \posy2105 \phpg \pvpg \absh-6043 \absw7335 \dxfrtext200 \fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s4 \posx1612 \posy2105 \phpg \pvpg \absh-6043 \absw7335 \dxfrtext200 \qj \li52 \ri55 \sl-260 \tx52 \tqr \tx7279 The GET command allows what is known as true I/O redirection, that is it lets you take input from a source other than the keyboard\'97in this case a disk file. GET is handy for automatically running programs, or portions of programs, that require the same input each time they are run, such as the repetitive and annoying requests that programs sometimes make. To use GET, you would produce a file with your text editor or word processor that contains the information you want to feed to the next program. Then you type GET FILE filename.typ. Next you run the program that you want the GET information sent to. Your program will run, but it will automat\-ically be filled in by the contents of the GET file you created. You might use GET to start a word processing program and give it the commands to log in the B drive and open a certain file.\par 
\fs10 \f0 \fs24 \f0 \pard \s5 \posx1612 \posy2105 \phpg \pvpg \absh-6043 \absw7335 \dxfrtext200 \qj \li52 \fi438 \ri72 \sl-262 \tx52 \tx490 \tqr \tx7262 PUT is the opposite of GET, and, instead of receiving input from a file, PUT writes a program's output to a file for later use. For example, you might want to capture several program outputs as text files and then enter them in a word processing program for editing.\par 
\fs10 \f0 \fs24 \f0 \pard \s6 \posx1612 \posy2105 \phpg \pvpg \absh-6043 \absw7335 \dxfrtext200 \qj \li50 \fi438 \ri50 \sl-260 \tx50 \tx488 \tqr \tx7284 CP/M 3.0 includes the feature of time\_ and date\_stamping of files. What this means is that when you create or alter a file in CP/M 3.0 and time\_ and date\_stamping is enabled, the file will be saved with the time and date attached to it. This same time and date will be displayed in the directory with DIR and SHOW. To enable time\_ and date\_stamping, the INITDIR command must be issued after the disk has been formatted and before any files are copied to it.\par 
}\pard \sl-260 \tx50 \tx488 \tqr \tx7284 {\pard \posx1622 \posy8334 \phpg \pvpg \absh-337 \absw4515 \dxfrtext200 \fs10 \f0 \fs25 \f1 \b \pard \s7 \posx1622 \posy8334 \phpg \pvpg \absh-337 \absw4515 \dxfrtext200 \li50 \ri50 \sl-276 \tx50 \tqr \tx4464 Passwords, SET, SETDEF, and SUBMIT\par 
}\pard \sl-276 \tx50 \tqr \tx4464 \fs24 \f0 {\pard \posx1607 \posy8756 \phpg \pvpg \absh-2126 \absw7342 \dxfrtext200 \fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s8 \posx1607 \posy8756 \phpg \pvpg \absh-2126 \absw7342 \dxfrtext200 \qj \li50 \ri50 \sl-261 \tx50 \tqr \tx7291 SET is used for several purposes. The most common use of SET is in controlling the read/write attributes of the disk files. File attributes are the way we indicate what kind of file we are dealing with. A file can be R/O, or read only, R/W or read/write, SYS, meaning a system file, or DIR, meaning a directory file (this is the normal attribute given to all files). With SET, you can prevent anyone from modifying a file or a group of files. You can also prevent anyone from even reading or copying a file by specifying that a password first be typed before the file can be accessed.\par 
}\pard \sl-261 \tx50 \tqr \tx7291 {\pard \posx11192 \posy234 \phpg \pvpg \absh-5470 \absw7341 \dxfrtext200 \fs10 \f0 \fs24 \f0 \pard \s9 \posx11192 \posy234 \phpg \pvpg \absh-5470 \absw7341 \dxfrtext200 \qj \li50 \ri71 \sl-256 \tx50 \tqr \tx7269 Passwords are names that are assigned to individual files. When a pass\-word has been assigned, a user cannot copy, delete, or read that file without typing in the correct password. SET also allows you to turn the time\_ and date\_stamping feature of CP/M 3.0 on and off.\par 
\fs10 \f0 \fs24 \f0 \pard \s10 \posx11192 \posy234 \phpg \pvpg \absh-5470 \absw7341 \dxfrtext200 \qj \li56 \fi437 \ri50 \sl-259 \tx56 \tx493 \tqr \tx7290 First\_time users of CP/M often have problems when they are logged onto another drive (say B) and type in a command that is stored on drive A. SETDEF, among other things, allows you to set up a "search path" for CP/M to try when responding to a typed command. Thus you could tell CP/M to first look on the A drive, then on the B for a particular program.\par 
\fs10 \f0 \fs24 \f0 \pard \s11 \posx11192 \posy234 \phpg \pvpg \absh-5470 \absw7341 \dxfrtext200 \qj \li58 \fi437 \ri66 \sl-260 \tx58 \tx495 \tqr \tx7274 A sequence of commands that is normally given to CP/M from the keyboard can be placed in a disk file and processed by the SUBMIT transient. Input to a program can be included. CP/M will execute the file just as if these commands were coming from the keyboard. When the list of commands is exhausted, control returns to the keyboard. This operation is known as batch processing. You would normally use SUBMIT when you wanted to give CP/M a frequently used list of commands\'97for example, if you wanted to copy ten different files to ten different disks. A submit file could contain the ten filenames and the PIP operations, and you would only have to submit the file to SUBMIT ten times instead of 1,000. You could even make the submit file automatically request that you enter the next diskette.\par 
}\pard \sl-260 \tx58 \tx495 \tqr \tx7274 {\pard \posx11221 \posy6026 \phpg \pvpg \absh-1502 \absw7316 \dxfrtext200 \fs10 \f0 \fs29 \f2 \i \pard \s12 \posx11221 \posy6026 \phpg \pvpg \absh-1502 \absw7316 \dxfrtext200 \li50 \ri3412 \sl-304 \tx50 \tqr \tx3903 Programmer's CP/M UtiliNes\par 
\fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s13 \posx11221 \posy6026 \phpg \pvpg \absh-1502 \absw7316 \dxfrtext200 \qj \li58 \ri50 \sl-261 \tx58 \tqr \tx7265 There are several utilities used primarily by assembly language program\-mers provided in CP/M 3.0. If you are not going to be writing assembly language programs, you won't need to worry about them. Table 5\_5 lists these utilities.\par 
}\pard \sl-261 \tx58 \tqr \tx7265 {\pard \posx12126 \posy8036 \phpg \pvpg \absh-305 \absw5612 \dxfrtext200 \fs10 \f0 \fs24 \f3 \b \pard \s14 \posx12126 \posy8036 \phpg \pvpg \absh-305 \absw5612 \dxfrtext200 \qc \sl-247 \tx50 \tqr \tx5561 Table 5\_5. Programmer's CP/M Transient Commands\par 
}\pard \sl-247 \tx50 \tqr \tx5561 \fs24 \f0 {\pard \posx11657 \posy8603 \phpg \pvpg \absh-297 \absw4859 \dxfrtext200 \fs10 \f0 \fs24 \f3 \fs24 \f0 \plain \lang1033 \pard \s15 \posx11657 \posy8603 \phpg \pvpg \absh-297 \absw4859 \dxfrtext200 \li50 \ri50 \sl-247 \tx50 \tx100 \tx1369 \tqr \tx4808 \tab Command\tab Function Provided\par 
}\pard \sl-247 \tx50 \tx100 \tx1369 \tqr \tx4808 {\pard \posx11657 \posy9079 \phpg \pvpg \absh-1746 \absw6543 \dxfrtext200 \fs10 \f0 \fs24 \f0 \pard \s16 \posx11657 \posy9079 \phpg \pvpg \absh-1746 \absw6543 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tx100 \tx1369 \tqr \tx6492 \tab DUMP\tab Displays hexadecimal contents of COM files on screen\par 
\fs20 \f0 \pard \s16 \posx11657 \posy9079 \phpg \pvpg \absh-1746 \absw6543 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tx100 \tx1369 \tqr \tx6492 \tab HEXCOM\fs24 \f0 \tab Generates an executable \fs20 \f0 COM \fs24 \f0 file from an Intel \fs20 \f0 HEX \fs24 \f0 file\par 
\pard \s16 \posx11657 \posy9079 \phpg \pvpg \absh-1746 \absw6543 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tx100 \tx1369 \tqr \tx6492 \tab LINK\tab Creates executable COM file from relocatable modules\par 
\pard \s16 \posx11657 \posy9079 \phpg \pvpg \absh-1746 \absw6543 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tx100 \tx1369 \tqr \tx6492 \tab MAC\tab The CP/M Macroassembler\par 
\pard \s16 \posx11657 \posy9079 \phpg \pvpg \absh-1746 \absw6543 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tx100 \tx1369 \tqr \tx6492 \tab RMAC\tab The CP/M relocatable macroassembler\par 
\pard \s16 \posx11657 \posy9079 \phpg \pvpg \absh-1746 \absw6543 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tx100 \tx1369 \tqr \tx6492 \tab SAVE\tab Saves a portion of memory as a disk file\par 
\pard \s16 \posx11657 \posy9079 \phpg \pvpg \absh-1746 \absw6543 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tx100 \tx1369 \tqr \tx6492 \tab XREF\tab Creates a cross reference listing from MAC/RMAC tables\par 
}\pard \sl-241 \tx50 \tx100 \tx1369 \tqr \tx6492 \page \lndscpsxn {\stylesheet {\snext0 Normal;}
{\s2 \tx50 \tx487 \tqr \tx7288 \qj \li907 \fi437 \ri50 \sl258 \sbasedon0 \snext2 OmniPage #2305;}
{\s3 \tx54 \tx491 \tqr \tx7277 \qj \li903 \fi437 \ri61 \sl261 \sbasedon0 \snext3 OmniPage #2306;}
{\s4 \tx50 \tqr \tx4038 \ql \li907 \ri50 \sl322 \sbasedon0 \snext4 OmniPage #2307;}
{\s5 \tqr \tx7277 \qj \li907 \ri50 \sl262 \sbasedon0 \snext5 OmniPage #2308;}
{\s6 \tqr \tx7273 \qj \li907 \ri50 \sl260 \sbasedon0 \snext6 OmniPage #2309;}
{\s7 \tqr \tx7284 \qj \li907 \ri50 \sl260 \sbasedon0 \snext7 OmniPage #2310;}
{\s8 \tqr \tx7304 \qj \li907 \ri50 \sl260 \sbasedon0 \snext8 OmniPage #2311;}
{\s9 \tqr \tx7269 \qj \li907 \ri50 \sl256 \sbasedon0 \snext9 OmniPage #2312;}
{\s10 \tx55 \tqr \tx7263 \qj \li902 \ri56 \sl259 \sbasedon0 \snext10 OmniPage #2313;}
{\s11 \tx51 \tx485 \tqr \tx7255 \qj \li906 \fi434 \ri59 \sl261 \sbasedon0 \snext11 OmniPage #2314;}
{\s12 \tx54 \tqr \tx7264 \qj \li903 \ri50 \sl267 \sbasedon0 \snext12 OmniPage #2315;}
{\s13 \tx50 \tqr \tx7254 \qj \li907 \ri60 \sl260 \sbasedon0 \snext13 OmniPage #2316;}
{\s14 \tx492 \tqr \tx5058 \ql \li465 \ri2253 \sl253 \sbasedon0 \snext14 OmniPage #2317;}
{\s15 \tx50 \tqr \tx7252 \qj \li907 \ri59 \sl264 \sbasedon0 \snext15 OmniPage #2318;}
{\s16 \tqr \tx7261 \qj \li907 \ri50 \sl260 \sbasedon0 \snext16 OmniPage #2319;}
}\par {\pard \posx1672 \posy164 \phpg \pvpg \absh-4198 \absw7339 \dxfrtext200 \fs24 \f0 \pard \s2 \posx1672 \posy164 \phpg \pvpg \absh-4198 \absw7339 \dxfrtext200 \qj \li50 \fi437 \ri50 \sl-258 \tx50 \tx487 \tqr \tx7288 The MAC and RMAC transients are very powerful programs called assemblers. An assembler converts a program typed in by a programmer into a group of special codes that are instructions to the Z80 chip in your Commodore 128. The original source file is written with a word processor. The language used is called assembly language. The code produced by the assembler is called object code. MAC is an enhancement of an older CP/M assembler called ASM and has the addition of "macros". A macro is a compact single\_line instruction that actually represents a much more elaborate collection of instructions. RMAC is a relocatable assembler, which means it allows the programmer to write code that can be relocated anywhere in memory and still run. MAC creates absolute nonrelocating code.\par 
\fs10 \f0 \fs24 \f0 \pard \s3 \posx1672 \posy164 \phpg \pvpg \absh-4198 \absw7339 \dxfrtext200 \qj \li54 \fi437 \ri61 \sl-261 \tx54 \tx491 \tqr \tx7277 HEXCOM, LINK, and XREF are tools that MAC and RMAC program\-mers use. SAVE is a transient that is used to take the contents of the TPA and save it to a file. Only assembly language programmers will normally use SAVE.\par 
}\sect \sectd \linex0 \linemod0 \sbknone \lndscpsxn \marglsxn1038 \margrsxn1594 \pard \sl-261 \tx54 \tx491 \tqr \tx7277 {\pard \posx1088 \posy4630 \phpg \pvpg \absh-742 \absw4089 \dxfrtext200 \fs10 \f0 \fs32 \f1 \pard \s4 \posx1088 \posy4630 \phpg \pvpg \absh-742 \absw4089 \dxfrtext200 \li50 \ri50 \sl-322 \tx50 \tqr \tx4038 Where Can You Learn More About CP/M?\par 
}\pard \sl-322 \tx50 \tqr \tx4038 \fs24 \f0 {\pard \posx1675 \posy5409 \phpg \pvpg \absh-1629 \absw7328 \dxfrtext200 \fs10 \f0 \fs24 \f0 \pard \s5 \posx1675 \posy5409 \phpg \pvpg \absh-1629 \absw7328 \dxfrtext200 \qj \li50 \ri50 \sl-262 \tx50 \tqr \tx7277 There are numerous ways to find out more about CP/M. Many good books are available which explain in great detail how to use the CP/M operating system. There are books that show you how to write programs that run under CP/M and that expose the internal structure of CP/M. There are even books which describe the best CP/M software. Here are some useful books:\par 
}\pard \sl-262 \tx50 \tqr \tx7277 {\pard \posx1674 \posy7060 \phpg \pvpg \absh-1095 \absw7324 \dxfrtext200 \fs10 \f0 \fs24 \f0 \pard \s6 \posx1674 \posy7060 \phpg \pvpg \absh-1095 \absw7324 \dxfrtext200 \qj \li50 \ri50 \sl-260 \tx50 \tqr \tx7273 CP/M Primer, Second Edition, by Stephen Murtha and Mitchell Waite (Indianapolis: Howard W. Sams & Co., Inc., 1983). A simple, low\_pressure introduction to CP/M and its utilities. Unique in its accessibility to beginners.\par 
}\pard \sl-260 \tx50 \tqr \tx7273 {\pard \posx1682 \posy8186 \phpg \pvpg \absh-1355 \absw7335 \dxfrtext200 \fs10 \f0 \fs24 \f0 \pard \s7 \posx1682 \posy8186 \phpg \pvpg \absh-1355 \absw7335 \dxfrtext200 \qj \li50 \ri50 \sl-260 \tx50 \tqr \tx7284 Osborne/McGraw\_Hill CP/M User Guide, Third Edition, by Thom Hogan (Berkeley: Osborne McGraw\_Hill, 1984). This book is more detailed and comprehensive than CP/M Primer but also more complex to learn from. Includes all versions of CP/M, including CP/M 3.0 as used in the Com\-modore 128.\par 
}\pard \sl-260 \tx50 \tqr \tx7284 {\pard \posx1671 \posy9567 \phpg \pvpg \absh-1095 \absw7355 \dxfrtext200 \fs10 \f0 \fs24 \f0 \pard \s8 \posx1671 \posy9567 \phpg \pvpg \absh-1095 \absw7355 \dxfrtext200 \qj \li50 \ri50 \sl-260 \tx50 \tqr \tx7304 The CP/M Plus Handbook, by Alan R. Miller (Berkeley: Sybex Computer Books, 1984). This book is completely devoted to CP/M 3.0 and, except for a few details, is compatible with the CP/M used in the Commodore 128. Not as comprehensive as the Osborne/McGraw\_Hill CP/M User Guide.\par 
}\pard \sl-260 \tx50 \tqr \tx7304 {\pard \posx11192 \posy194 \phpg \pvpg \absh-1941 \absw7320 \dxfrtext200 \fs10 \f0 \fs24 \f0 \pard \s9 \posx11192 \posy194 \phpg \pvpg \absh-1941 \absw7320 \dxfrtext200 \qj \li50 \ri50 \sl-256 \tx50 \tqr \tx7269 Soul of CP/M, by Mitchell Waite and Robert Lafore (Indianapolis: Howard W. Sams & Co., Inc., 1983). This is a very easy introduction into the internal structure and programming of CP/M. Shows how to write assem\-bly language programs that use the built\_in CP/M system calls.\par 
\fs10 \f0 \fs24 \f0 \pard \s10 \posx11192 \posy194 \phpg \pvpg \absh-1941 \absw7320 \dxfrtext200 \qj \li55 \ri56 \sl-259 \tx55 \tqr \tx7263 CP/M Bible, by Mitchell Waite and John Angermeyer (Indianapolis: How\-ard W. Sams & Co., Inc., 1984). This book catalogs all the CP/M commands and transients in a unique, accessible format.\par 
}\pard \sl-259 \tx55 \tqr \tx7263 {\pard \posx11195 \posy2326 \phpg \pvpg \absh-3077 \absw7315 \dxfrtext200 \fs10 \f0 \fs24 \f0 \pard \s11 \posx11195 \posy2326 \phpg \pvpg \absh-3077 \absw7315 \dxfrtext200 \qj \li51 \fi434 \ri59 \sl-261 \tx51 \tx485 \tqr \tx7255 Another source of CP/M information is magazines. In these, you will find names and addresses of companies that sell hardware for your CP/M computers, as well as commercial software and articles on using CP/M programs. Here are a few of the better magazines:\par 
\fs10 \f0 \fs24 \f0 \pard \s12 \posx11195 \posy2326 \phpg \pvpg \absh-3077 \absw7315 \dxfrtext200 \qj \li54 \ri50 \sl-267 \tx54 \tqr \tx7264 Byte, Peterborough, NH. Byte often discusses CP/M and provides reviews of hardware and software. Jerry Pournelle is a spokesperson for CP/M and gives his sometimes caustic opinions each month.\par 
\fs10 \f0 \fs24 \f0 \pard \s13 \posx11195 \posy2326 \phpg \pvpg \absh-3077 \absw7315 \dxfrtext200 \qj \li50 \ri60 \sl-260 \tx50 \tqr \tx7254 InfoWorld, Menlo Park, CA. This magazine has a long history of breaking the latest news in the micro and personal computer industry. It has several reviews each month and rates all products. Its coverage of CP/M has waned over the years as the IBM PC has grown.\par 
}\pard \sl-260 \tx50 \tqr \tx7254 {\pard \posx11205 \posy5603 \phpg \pvpg \absh-1778 \absw7312 \dxfrtext200 \fs10 \f0 \fs24 \f0 \pard \s14 \posx11205 \posy5603 \phpg \pvpg \absh-1778 \absw7312 \dxfrtext200 \li492 \ri2253 \sl-253 \tx492 \tqr \tx5058 Newsletters are a good source of CP/M news.\par 
\fs10 \f0 \fs24 \f0 \pard \s15 \posx11205 \posy5603 \phpg \pvpg \absh-1778 \absw7312 \dxfrtext200 \qj \li50 \ri59 \sl-264 \tx50 \tqr \tx7252 Digital Research News is produced by the creators of CP/M and presents the newest product releases, program developments, and bugs and fixes.\par 
\fs10 \f0 \fs24 \f0 \pard \s16 \posx11205 \posy5603 \phpg \pvpg \absh-1778 \absw7312 \dxfrtext200 \qj \li50 \ri50 \sl-260 \tx50 \tqr \tx7261 Lifelines is a newsletter/magazine produced by Lifeboat Associates that provides many helpful hints about CP/M, including the latest public do\-main software offerings.\par 
}\pard \sl-260 \tx50 \tqr \tx7261 }