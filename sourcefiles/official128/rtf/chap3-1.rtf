{\rtf1\ansi \deff0 {\fonttbl {\f0\froman Times New Roman;}
{\f1\froman Times New Roman;}{\f2\froman Times New Roman;}{\f3\fmodern Courier New;}{\f4\froman Times New Roman;}{\f5\fmodern MS LineDraw;}
{\f6\fdecor Symbol;}}
{\colortbl;\red0\green0\blue0;\red0\green0\blue127;\red0\green127\blue0;\red0\green127\blue127;\red127\green0\blue0;\red127\green0\blue127;\red127\green127\blue0;\red127\green127\blue127;\red63\green63\blue63;\red0\green0\blue255;\red0\green255\blue0;\red0\green255\blue255;\red255\green0\blue0;\red255\green0\blue255;\red255\green255\blue0;\red255\green255\blue255;}\linex0 \sbknone 
\paperh12240 \paperw20160 \margl10577 \margr865 \margt63 \margb1341 \plain \lang1033 \lndscpsxn {\stylesheet {\snext0 Normal;}
{\s2 \tx50 \tqr \tx3436 \ql \sl522 \li10527 \ri50 \sbasedon0 \snext2 OmniPage #1;}
{\s3 \tqr \tx3148 \ql \sl261 \li10527 \ri50 \sbasedon0 \snext3 OmniPage #2;}
{\s4 \tqr \tx2662 \ql \sl261 \li10527 \ri50 \sbasedon0 \snext4 OmniPage #3;}
{\s5 \tqr \tx3675 \ql \sl261 \li10527 \ri50 \sbasedon0 \snext5 OmniPage #4;}
{\s6 \tqr \tx5311 \ql \sl261 \li10527 \ri50 \sbasedon0 \snext6 OmniPage #5;}
{\s7 \tqr \tx6815 \qj \li10527 \ri50 \sl261 \sbasedon0 \snext7 OmniPage #6;}
{\s8 \tqr \tx4275 \qj \li10527 \ri50 \sl261 \sbasedon0 \snext8 OmniPage #7;}
{\s9 \tqr \tx3828 \qj \li10527 \ri50 \sl261 \sbasedon0 \snext9 OmniPage #8;}
{\s10 \tqr \tx7280 \qj \li10527 \ri50 \sl261 \sbasedon0 \snext10 OmniPage #9;}
{\s11 \tqr \tx3645 \ql \li10527 \ri50 \sl363 \sbasedon0 \snext11 OmniPage #10;}
{\s12 \tqr \tx7280 \ql \li10527 \ri50 \sl262 \sbasedon0 \snext12 OmniPage #11;}
}{\pard \posx10627 \posy1114 \phpg \pvpg \absh-642 \absw3487 \dxfrtext200 \fs46 \f0 \pard \s2 \posx10627 \posy1114 \phpg \pvpg \absh-642 \absw3487 \dxfrtext200 \li50 \ri50 \sl-522 \tx50 \tqr \tx3436 The C128 Mode\par 
}\linex0 \linemod0 \sbknone \lndscpsxn \pard \sl-522 \tx50 \tqr \tx3436 \fs24 \f0 {\pard \posx13591 \posy0 \phpg \pvpg \absh-189 \absw5655 \dxfrtext200 \pard \posx13591 \posy0 \phpg \pvpg \absh-189 \absw5655 \dxfrtext200 \tx50 {\pict \wmetafile8 \picw5655 \pich189 \picwGoal5655 \pichGoal189 \picscalex100 \picscaley100 010009000003370300000100dc0200000000050000000b0200000000050000000c0209002801040000000201010025000000f70000031000ffffff00eeeeee00dddddd00cccccc00bbbbbb00aaaaaa009999990088888800777777006666660055555500444444003333330022222200111111000000000004000000340200000300000035000400000003010800050000000102ffffff0004000000020102000400000004010d000400000007010300dc020000430f2000cc0000000900280100000000090028010000000028000000280100000900000001000400000000000000000000000000000000001000000000000000ffffff00eeeeee00dddddd00cccccc00bbbbbb00aaaaaa}\par }\pard \tx50 {\pard \posx11642 \posy2419 \phpg \pvpg \absh-312 \absw3199 \dxfrtext200 \fs10 \f0 \fs25 \f1 \b \pard \s3 \posx11642 \posy2419 \phpg \pvpg \absh-312 \absw3199 \dxfrtext200 \li50 \ri50 \sl-261 \tx50 \tqr \tx3148 In this chapter you'll learn:\par 
}\sect \sectd \linex0 \linemod0 \sbknone \lndscpsxn \pard \sl-261 \tx50 \tqr \tx3148 \fs24 \f0 {\pard \posx12078 \posy2892 \phpg \pvpg \absh-312 \absw2713 \dxfrtext200 \fs10 \f0 \fs25 \f1 \pard \s4 \posx12078 \posy2892 \phpg \pvpg \absh-312 \absw2713 \dxfrtext200 \li50 \ri50 \sl-261 \tx50 \tqr \tx2662 What the C128 mode is\par 
}\pard \sl-261 \tx50 \tqr \tx2662 \fs24 \f0 {\pard \posx12081 \posy3369 \phpg \pvpg \absh-312 \absw3726 \dxfrtext200 \fs10 \f0 \fs25 \f1 \pard \s5 \posx12081 \posy3369 \phpg \pvpg \absh-312 \absw3726 \dxfrtext200 \li50 \ri50 \sl-261 \tx50 \tqr \tx3675 What the C128 mode has to offer\par 
}\pard \sl-261 \tx50 \tqr \tx3675 \fs24 \f0 {\pard \posx12079 \posy3850 \phpg \pvpg \absh-312 \absw5362 \dxfrtext200 \fs10 \f0 \fs25 \f1 \pard \s6 \posx12079 \posy3850 \phpg \pvpg \absh-312 \absw5362 \dxfrtext200 \li50 \ri50 \sl-261 \tx50 \tqr \tx5311 What equipment you will need to use this mode\par 
}\pard \sl-261 \tx50 \tqr \tx5311 \fs24 \f0 {\pard \posx11435 \posy4774 \phpg \pvpg \absh-766 \absw573 \dxfrtext200 \pard \posx11435 \posy4774 \phpg \pvpg \absh-766 \absw573 \dxfrtext200 \tx50 {\pict \wmetafile8 \picw573 \pich766 \picwGoal573 \pichGoal766 \picscalex100 \picscaley100 010009000003dd0100000100820100000000050000000b0200000000050000000c0228002000040000000201010025000000f70000031000ffffff00eeeeee00dddddd00cccccc00bbbbbb00aaaaaa009999990088888800777777006666660055555500444444003333330022222200111111000000000004000000340200000300000035000400000003010800050000000102ffffff0004000000020102000400000004010d00040000000701030082010000430f2000cc0000002800200000000000280020000000000028000000200000002800000001000400000000000000000000000000000000001000000000000000ffffff00eeeeee00dddddd00cccccc00bbbbbb00aaaaaa00999999008888880077777700666666005555550044444400333333002222220011111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000155555544000000000000000000000003bbbbbbba100000000000000000000003bbcbcbbb000000000000000000000004bbbbbbbb000000000000000000000004bbbbbbbb100000000000000000000004ccbbcbcb100000000000000000000004bcbccbbb100000000000000000000004bcbbbbbb100000000000000000000003bbbbbbbbbbbcbbba000000000000000000000005bccbbbba000000000000000000000005bbbbbcba000000000000000000000005bbbbbbca000000000000000000000005bbbccbb9000000000000000000000005cccbccba000000000000000000000006bcbbcbca000000000000000000000005babbbbb90000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000030000000000}\par }\pard \tx50 {\pard \posx11644 \posy4331 \phpg \pvpg \absh-316 \absw6866 \dxfrtext200 \fs10 \f0 \fs25 \f2 \plain \fs25 \f2 \lang1033 \pard \s7 \posx11644 \posy4331 \phpg \pvpg \absh-316 \absw6866 \dxfrtext200 \qj \li50 \ri50 \sl-261 \tx50 \tqr \tx6815 \'b7 \fs25 \f1 \b The new features of BASIC \fs25 \f2 \plain \fs25 \f2 \lang1033 7.0\par 
}\sect \sectd \linex0 \linemod0 \sbknone \lndscpsxn \pard \sl-261 \tx50 \tqr \tx6815 \fs24 \f0 {\pard \posx12079 \posy4808 \phpg \pvpg \absh-312 \absw4326 \dxfrtext200 \fs10 \f0 \fs25 \f1 \b \pard \s8 \posx12079 \posy4808 \phpg \pvpg \absh-312 \absw4326 \dxfrtext200 \qj \li50 \ri50 \sl-261 \tx50 \tqr \tx4275 About the C128 Disk Operating System\par 
}\pard \sl-261 \tx50 \tqr \tx4275 \fs24 \f0 {\pard \posx12072 \posy5275 \phpg \pvpg \absh-312 \absw3879 \dxfrtext200 \fs10 \f0 \fs25 \f1 \pard \s9 \posx12072 \posy5275 \phpg \pvpg \absh-312 \absw3879 \dxfrtext200 \qj \li50 \ri50 \sl-261 \tx50 \tqr \tx3828 Sources for additional information\par 
}\pard \sl-261 \tx50 \tqr \tx3828 \fs24 \f0 {\pard \posx11188 \posy6434 \phpg \pvpg \absh-2930 \absw7331 \dxfrtext200 \fs10 \f0 \fs25 \f2 \plain \fs25 \f2 \lang1033 \pard \s10 \posx11188 \posy6434 \phpg \pvpg \absh-2930 \absw7331 \dxfrtext200 \qj \li50 \ri50 \sl-261 \tx50 \tqr \tx7280 The \fs26 \f3 C128 \fs25 \f2 Mode is one of three possible operating modes for the Com\-modore \fs26 \f3 128 \fs25 \f2 personal computer. It is in this mode that the \fs26 \f3 C128 \fs25 \f2 distin\-guishes itself as more than just a slightly enhanced version of the Commodore 64. The purpose of the first part of this chapter will be to clarify this mode's more interesting features and its more unusual characteristics, and to explain the various applications suited to the \fs26 \f3 C128 \fs25 \f2 mode. The next part of the chapter explains which extra system components you should have to use this mode. Then we'll summarize the operations possible from the new version of BASIC, and the disk drive support provided by the new DOS. Lastly, we tell where you can go to get additional information or help about this mode.\par 
}\pard \sl-261 \tx50 \tqr \tx7280 \fs24 \f0 {\pard \posx10629 \posy9548 \phpg \pvpg \absh-428 \absw3696 \dxfrtext200 \fs10 \f0 \fs34 \f4 \pard \s11 \posx10629 \posy9548 \phpg \pvpg \absh-428 \absw3696 \dxfrtext200 \li50 \ri50 \sl-363 \tx50 \tqr \tx3645 What Is the C128 Mode?\par 
}\pard \sl-363 \tx50 \tqr \tx3645 \fs24 \f0 {\pard \posx11202 \posy10034 \phpg \pvpg \absh-848 \absw7331 \dxfrtext200 \fs10 \f0 \fs25 \f2 \pard \s12 \posx11202 \posy10034 \phpg \pvpg \absh-848 \absw7331 \dxfrtext200 \li50 \ri50 \sl-262 \tx50 \tqr \tx7280 As you will recall from the introduction, Commodore had three different markets in mind when it designed the Commodore \fs26 \f3 128. \fs25 \f2 It wanted the \fs26 \f3 C128 \fs25 \f2 to be "absolutely compatible" with the Commodore 64 (the C64\par 
}\pard \sl-262 \tx50 \tqr \tx7280 \fs24 \f0 \page \lndscpsxn {\stylesheet {\snext0 Normal;}
{\s2 \tx55 \tqr \tx7299 \qj \li10522 \ri50 \sl255 \sbasedon0 \snext2 OmniPage #257;}
{\s3 \tx50 \tx493 \tqr \tx7296 \qj \li10527 \fi443 \ri53 \sl261 \sbasedon0 \snext3 OmniPage #258;}
{\s4 \tx50 \tqr \tx4925 \ql \li10527 \ri50 \sl355 \sbasedon0 \snext4 OmniPage #259;}
{\s5 \tqr \tx7281 \qj \li10527 \ri52 \sl260 \sbasedon0 \snext5 OmniPage #260;}
{\s6 \tx492 \tqr \tx7283 \qj \li10527 \fi442 \ri50 \sl261 \sbasedon0 \snext6 OmniPage #261;}
{\s7 \tx50 \tx488 \tqr \tx7285 \qj \li10527 \fi438 \ri50 \sl258 \sbasedon0 \snext7 OmniPage #262;}
{\s8 \tx50 \tqr \tx4142 \qc \sl253 \sbasedon0 \snext8 OmniPage #263;}
}\par {\pard \posx1463 \posy0 \phpg \pvpg \absh-51 \absw7696 \dxfrtext200 \pard \posx1463 \posy0 \phpg \pvpg \absh-51 \absw7696 \dxfrtext200 \tx50 {\pict \wmetafile8 \picw7696 \pich51 \picwGoal7696 \pichGoal51 \picscalex100 \picscaley100 0100090000036501000001000a0100000000050000000b0200000000050000000c0202009001040000000201010025000000f70000031000ffffff00eeeeee00dddddd00cccccc00bbbbbb00aaaaaa009999990088888800777777006666660055555500444444003333330022222200111111000000000004000000340200000300000035000400000003010800050000000102ffffff0004000000020102000400000004010d0004000000070103000a010000430f2000cc0000000200900100000000020090010000000028000000900100000200000001000400000000000000000000000000000000001000000000000000ffffff00eeeeee00dddddd00cccccc00bbbbbb00aaaaaa}\par }\sect \sectd \linex0 \linemod0 \sbknone \lndscpsxn \marglsxn900 \margrsxn1899 \pard \tx50 {\pard \posx1534 \posy77 \phpg \pvpg \absh-5758 \absw7350 \dxfrtext200 \fs24 \f0 \pard \s2 \posx1534 \posy77 \phpg \pvpg \absh-5758 \absw7350 \dxfrtext200 \qj \li55 \ri50 \sl-255 \tx55 \tqr \tx7299 mode), but it also wanted the C128 to have sufficiently enhanced features, as compared to the C64, to attract new buying interest (the C128 mode). It also wanted the C128 to run software written for CP/M\_based computers (the CP/M mode). In order to meet these three design goals Commodore had to literally design three modes of operation into the C128. At first thought, such a feat might seem very difficult, especially if the three personalities were really different, as they are in the case of the C64, C128, and CP/M modes.\par 
\fs10 \f0 \fs24 \f0 \pard \s3 \posx1534 \posy77 \phpg \pvpg \absh-5758 \absw7350 \dxfrtext200 \qj \li50 \fi443 \ri53 \sl-261 \tx50 \tx493 \tqr \tx7296 Building three computers into one multimode computer would have been an impossible task had Commodore limited itself to traditional computer designs. Instead, it compared the various hardware and software components that make up a C64, a C128, and a CP/M machine to see exactly how they overlapped with one another. Then it built the Commo\-dore 128 using a composite pool of all these components, and used an organizer function (an intelligent memory/device manager) to arrange the parts to make a C64, a C128, or a CP/M computer on the fly. Figure 3\_1 shows this arrangement of different components as used in the C128 mode. As you can see, some components of the Commodore 128 are not used in the C128 mode, and others are. The overall selection was to ensure the best possible arrangement of all C128 features. Details on how these components are rearranged for the C64 and CP/M modes will be found in chapters 4 and 5.\par 
}\sect \sectd \linex0 \linemod0 \sbknone \lndscpsxn \marglsxn900 \margrsxn1899 \pard \sl-261 \tx50 \tx493 \tqr \tx7296 {\pard \posx950 \posy6082 \phpg \pvpg \absh-442 \absw4976 \dxfrtext200 \fs10 \f0 \fs33 \f1 \pard \s4 \posx950 \posy6082 \phpg \pvpg \absh-442 \absw4976 \dxfrtext200 \li50 \ri50 \sl-355 \tx50 \tqr \tx4925 What Does the C128 Mode O'er?\par 
}\pard \sl-355 \tx50 \tqr \tx4925 \fs24 \f0 {\pard \posx1534 \posy6565 \phpg \pvpg \absh-3972 \absw7334 \dxfrtext200 \fs10 \f0 \fs24 \f0 \pard \s5 \posx1534 \posy6565 \phpg \pvpg \absh-3972 \absw7334 \dxfrtext200 \qj \li50 \ri52 \sl-260 \tx50 \tqr \tx7281 When used in the C128 mode, the Commodore 128 is essentially an enhancement of the Commodore 64. As such, this mode offers all of the features of the C64 with very few of its disadvantages. The C128 mode has access to the same graphics and sound capabilities and the same input and output capabilities, including the expansion bus, the versatile pro\-grammable user port and the two internal real\_time clocks. It will even operate with all C64 peripherals, such as the 1702 color monitor and the 1541 disk drive. On the other hand, the C128 mode removes its users from having to work within the somewhat primitive confines of the C64's BASIC 2.0 and its equally antiquated DOS structure.\par 
\fs10 \f0 \fs24 \f0 \pard \s6 \posx1534 \posy6565 \phpg \pvpg \absh-3972 \absw7334 \dxfrtext200 \qj \li50 \fi442 \ri50 \sl-261 \tx50 \tx492 \tqr \tx7283 So what are the enhancements? To begin with, the C128 mode has access to at least twice the memory of a C64. It also provides a second powerful, 80\_column color text and graphics system, a better\_equipped 96\_key keyboard, and access to a friendlier and faster single\_ or dual\_disk drive system.\par 
}\pard \sl-261 \tx50 \tx492 \tqr \tx7283 {\pard \posx10876 \posy106 \phpg \pvpg \absh-2640 \absw7336 \dxfrtext200 \fs10 \f0 \fs24 \f0 \pard \s7 \posx10876 \posy106 \phpg \pvpg \absh-2640 \absw7336 \dxfrtext200 \qj \li50 \fi438 \ri50 \sl-258 \tx50 \tx488 \tqr \tx7285 The C128 mode enhancements just mentioned are changes to the computer's hardware side. On the software side, Commodore updated the Kernal Operating System (its built\_in operating instructions), added some important enhancements to the screen editor, built in a super powerful machine\_language monitor utility, and threw in the most powerful BASIC ever in a Commodore computer. Lastly, when you use the C128 mode with one of the new multiformat disk drives, the 1571 or 1572, you get double\-sided disk storage instead of single (twice as much room per disk) and a noticeably improved computer\_to\_disk\_to\_computer transfer rate. Let's ex\-amine each of these features in more detail.\par 
}\pard \sl-258 \tx50 \tx488 \tqr \tx7285 {\pard \posx12510 \posy3275 \phpg \pvpg \absh-315 \absw4193 \dxfrtext200 \fs10 \f0 \fs24 \f0 \pard \s8 \posx12510 \posy3275 \phpg \pvpg \absh-315 \absw4193 \dxfrtext200 \qc \sl-253 \tx50 \tqr \tx4142 Figure 3\_~. How Cl28 Mode Stacks Up\par 
}\pard \qc \sl-253 \tx50 \tqr \tx4142 \page \lndscpsxn {\stylesheet {\snext0 Normal;}
{\s2 \tx50 \tqr \tx3663 \ql \li10527 \ri50 \sl289 \sbasedon0 \snext2 OmniPage #513;}
{\s3 \tqr \tx7283 \qj \li10527 \ri58 \sl260 \sbasedon0 \snext3 OmniPage #514;}
{\s4 \tx58 \tx497 \tqr \tx7291 \qj \li10519 \fi439 \ri50 \sl262 \sbasedon0 \snext4 OmniPage #515;}
{\s5 \tx50 \tqr \tx2046 \ql \sl253 \li10527 \ri50 \sbasedon0 \snext5 OmniPage #516;}
{\s6 \tqr \tx2459 \ql \sl339 \li10527 \ri50 \sbasedon0 \snext6 OmniPage #517;}
{\s7 \tqr \tx2501 \ql \sl253 \li10527 \ri50 \sbasedon0 \snext7 OmniPage #518;}
{\s8 \tqr \tx2912 \ql \sl335 \li10527 \ri50 \sbasedon0 \snext8 OmniPage #519;}
{\s9 \tqr \tx2034 \ql \sl253 \li10527 \ri50 \sbasedon0 \snext9 OmniPage #520;}
{\s10 \tqr \tx1598 \ql \sl253 \li10527 \ri50 \sbasedon0 \snext10 OmniPage #521;}
{\s11 \tqr \tx3697 \ql \li10527 \ri50 \sl323 \sbasedon0 \snext11 OmniPage #522;}
{\s12 \tqr \tx7266 \qj \li10527 \ri50 \sl260 \sbasedon0 \snext12 OmniPage #523;}
{\s13 \tx65 \tqr \tx1960 \ql \sl304 \li10512 \ri5383 \sbasedon0 \snext13 OmniPage #524;}
{\s14 \tx50 \tqr \tx7293 \qj \li10527 \ri50 \sl265 \sbasedon0 \snext14 OmniPage #525;}
{\s15 \tqr \tx7267 \qj \li10527 \ri66 \sl258 \sbasedon0 \snext15 OmniPage #526;}
{\s16 \tx53 \tx487 \tqr \tx7282 \qj \li10524 \fi434 \ri51 \sl259 \sbasedon0 \snext16 OmniPage #527;}
{\s17 \tx52 \tx486 \tqr \tx7283 \qj \li10525 \fi434 \ri50 \sl260 \sbasedon0 \snext17 OmniPage #528;}
{\s18 \tx50 \tqr \tx3909 \ql \sl304 \li10527 \ri50 \sbasedon0 \snext18 OmniPage #529;}
{\s19 \tqr \tx7268 \qj \li10527 \ri50 \sl260 \sbasedon0 \snext19 OmniPage #530;}
}\par {\pard \posx1744 \posy43 \phpg \pvpg \absh-643 \absw3714 \dxfrtext200 \fs29 \f0 \i \pard \s2 \posx1744 \posy43 \phpg \pvpg \absh-643 \absw3714 \dxfrtext200 \li50 \ri50 \sl-289 \tx50 \tqr \tx3663 What lypes of Applications Does He C128 Have?\par 
}\sect \sectd \linex0 \linemod0 \sbknone \lndscpsxn \marglsxn1116 \margrsxn1587 \pard \sl-289 \tx50 \tqr \tx3663 \fs24 \f0 {\pard \posx6430 \posy0 \phpg \pvpg \absh-189 \absw2806 \dxfrtext200 \pard \posx6430 \posy0 \phpg \pvpg \absh-189 \absw2806 \dxfrtext200 \tx50 {\pict \wmetafile8 \picw2806 \pich189 \picwGoal2806 \pichGoal189 \picscalex100 \picscaley100 010009000003f30100000100980100000000050000000b0200000000050000000c0209009200040000000201010025000000f70000031000ffffff00eeeeee00dddddd00cccccc00bbbbbb00aaaaaa009999990088888800777777006666660055555500444444003333330022222200111111000000000004000000340200000300000035000400000003010800050000000102ffffff0004000000020102000400000004010d00040000000701030098010000430f2000cc0000000900920000000000090092000000000028000000920000000900000001000400000000000000000000000000000000001000000000000000ffffff00eeeeee00dddddd00cccccc00bbbbbb00aaaaaa}\par }\pard \tx50 {\pard \posx1739 \posy725 \phpg \pvpg \absh-3708 \absw7342 \dxfrtext200 \fs10 \f0 \fs24 \f1 \plain \f1 \lang1033 \pard \s3 \posx1739 \posy725 \phpg \pvpg \absh-3708 \absw7342 \dxfrtext200 \qj \li50 \ri58 \sl-260 \tx50 \tqr \tx7283 The Commodore 128 is an extremely capable computer, with features that broaden its appeal to a much wider range of applications than those the C64 focused on. For all its graphics and sound power, the C64 had a number of weaknesses that made it more useful for applications relying on eye and ear stimulation than for those requiring fast or versatile com\-puting power. As a result, the C64 found its primary niche in applications such as entertainment and education. The C128, on the other hand, in\-corporates 128K of memory, a choice of both 40\_ and 80\_column screens and a more business\_capable disk storage system, plus a number of other enhancements that make it adaptable to just about any personal computer application.\par 
\fs10 \f0 \fs24 \f1 \pard \s4 \posx1739 \posy725 \phpg \pvpg \absh-3708 \absw7342 \dxfrtext200 \qj \li58 \fi439 \ri50 \sl-262 \tx58 \tx497 \tqr \tx7291 Because of the C128's unique balance of computing features it will find equal acceptance in homes, schools, offices and even industry. For example, the types of real\_life situations the C128 can be used in include:\par 
}\sect \sectd \linex0 \linemod0 \sbknone \lndscpsxn \marglsxn1116 \margrsxn1587 \pard \sl-262 \tx58 \tx497 \tqr \tx7291 \fs24 \f0 {\pard \posx1765 \posy4459 \phpg \pvpg \absh-315 \absw2097 \dxfrtext200 \fs10 \f0 \fs24 \f1 \pard \s5 \posx1765 \posy4459 \phpg \pvpg \absh-315 \absw2097 \dxfrtext200 \li50 \ri50 \sl-253 \tx50 \tqr \tx2046 Office productivity\par 
}\pard \sl-253 \tx50 \tqr \tx2046 \fs24 \f0 {\pard \posx1764 \posy4796 \phpg \pvpg \absh-662 \absw2510 \dxfrtext200 \fs10 \f0 \fs24 \f1 \pard \s6 \posx1764 \posy4796 \phpg \pvpg \absh-662 \absw2510 \dxfrtext200 \li50 \ri50 \sl-339 \tx50 \tqr \tx2459 Business management\par 
\pard \s6 \posx1764 \posy4796 \phpg \pvpg \absh-662 \absw2510 \dxfrtext200 \li50 \ri50 \sl-339 \tx50 \tqr \tx2459 Computer\_aided design\par 
}\pard \sl-339 \tx50 \tqr \tx2459 \fs24 \f0 {\pard \posx1763 \posy5480 \phpg \pvpg \absh-315 \absw2552 \dxfrtext200 \fs10 \f0 \fs24 \f1 \pard \s7 \posx1763 \posy5480 \phpg \pvpg \absh-315 \absw2552 \dxfrtext200 \li50 \ri50 \sl-253 \tx50 \tqr \tx2501 Instrumentation control\par 
}\pard \sl-253 \tx50 \tqr \tx2501 \fs24 \f0 {\pard \posx1762 \posy5826 \phpg \pvpg \absh-994 \absw2963 \dxfrtext200 \fs10 \f0 \fs24 \f1 \pard \s8 \posx1762 \posy5826 \phpg \pvpg \absh-994 \absw2963 \dxfrtext200 \li50 \ri50 \sl-335 \tx50 \tqr \tx2912 Computer software design\par 
\pard \s8 \posx1762 \posy5826 \phpg \pvpg \absh-994 \absw2963 \dxfrtext200 \li50 \ri50 \sl-335 \tx50 \tqr \tx2912 Computer\_aided instruction\par 
\pard \s8 \posx1762 \posy5826 \phpg \pvpg \absh-994 \absw2963 \dxfrtext200 \li50 \ri50 \sl-335 \tx50 \tqr \tx2912 Personal productivity\par 
}\pard \sl-335 \tx50 \tqr \tx2912 \fs24 \f0 {\pard \posx1765 \posy6846 \phpg \pvpg \absh-315 \absw2085 \dxfrtext200 \fs10 \f0 \fs24 \f1 \pard \s9 \posx1765 \posy6846 \phpg \pvpg \absh-315 \absw2085 \dxfrtext200 \li50 \ri50 \sl-253 \tx50 \tqr \tx2034 Home management\par 
}\pard \sl-253 \tx50 \tqr \tx2034 \fs24 \f0 {\pard \posx1765 \posy7188 \phpg \pvpg \absh-315 \absw1649 \dxfrtext200 \fs10 \f0 \fs24 \f1 \pard \s10 \posx1765 \posy7188 \phpg \pvpg \absh-315 \absw1649 \dxfrtext200 \li50 \ri50 \sl-253 \tx50 \tqr \tx1598 Entertainment\par 
}\pard \sl-253 \tx50 \tqr \tx1598 \fs24 \f0 {\pard \posx1166 \posy7768 \phpg \pvpg \absh-743 \absw3748 \dxfrtext200 \fs10 \f0 \fs32 \f2 \pard \s11 \posx1166 \posy7768 \phpg \pvpg \absh-743 \absw3748 \dxfrtext200 \li50 \ri50 \sl-323 \tx50 \tqr \tx3697 What Are the C128 Mode Enhancements?\par 
}\pard \sl-323 \tx50 \tqr \tx3697 \fs24 \f0 {\pard \posx1763 \posy8555 \phpg \pvpg \absh-1095 \absw7317 \dxfrtext200 \fs10 \f0 \fs24 \f1 \pard \s12 \posx1763 \posy8555 \phpg \pvpg \absh-1095 \absw7317 \dxfrtext200 \qj \li50 \ri50 \sl-260 \tx50 \tqr \tx7266 In order for you to appreciate why the C128 is capable of such different working applications you need to understand how its new features affect its overall capabilities as a personal computer. That's what we'll explore in the following section.\par 
}\pard \sl-260 \tx50 \tqr \tx7266 \fs24 \f0 {\pard \posx1753 \posy9972 \phpg \pvpg \absh-987 \absw7344 \dxfrtext200 \fs10 \f0 \fs29 \f0 \i \pard \s13 \posx1753 \posy9972 \phpg \pvpg \absh-987 \absw7344 \dxfrtext200 \li65 \ri5383 \sl-304 \tx65 \tqr \tx1960 More Memory\par 
\fs10 \f0 \fs24 \f1 \plain \f1 \lang1033 \pard \s14 \posx1753 \posy9972 \phpg \pvpg \absh-987 \absw7344 \dxfrtext200 \qj \li50 \ri50 \sl-265 \tx50 \tqr \tx7293 The C128 mode offers 128K of user memory, or twice that found in the C64. It also has memory space for larger ROM\_based software packages.\par 
}\pard \sl-265 \tx50 \tqr \tx7293 \fs24 \f0 {\pard \posx11188 \posy40 \phpg \pvpg \absh-9652 \absw7334 \dxfrtext200 \fs10 \f0 \fs24 \f1 \pard \s15 \posx11188 \posy40 \phpg \pvpg \absh-9652 \absw7334 \dxfrtext200 \qj \li50 \ri66 \sl-258 \tx50 \tqr \tx7267 A ROM\_based software package is software that is permanently stored in a special memory chip that can then be used by the C128. This type of software is merged into the C128 memory either as a cartridge through the C128's expansion slot or as a "ROM chip" addition inside the C128.\par 
\fs10 \f0 \fs24 \f1 \pard \s16 \posx11188 \posy40 \phpg \pvpg \absh-9652 \absw7334 \dxfrtext200 \qj \li53 \fi434 \ri51 \sl-259 \tx53 \tx487 \tqr \tx7282 For many C128 users, the expanded memory of the Commodore 128 means only one thing: they'll be able to run larger and more sophisticated software programs like Artificial Intelligence (AI), Expert Systems, large spreadsheets, and fuller\_featured text editors. This is an important con\-sideration, since many non\_Commodore commercial application programs could only be made available to the C128 if it has a sufficient amount of memory. Whereas a few years ago, 64K of memory was more than satis\-factory, today most popular business\_oriented software packages are in\-tended to run on systems with 128K or 256K of memory. The C128, with its ROM\_based operating system and unique intelligent memory manager, frees up virtually all of its 128K of RAM for program use. In contrast, most other personal computers using a disk\_based operating system (like CP/M or MS\_DOS) forfeit a fair amount of their available RAM to hold their DOS. Since the C128 does not have this type of overhead there is more of the 128K to use for programs.\par 
\fs10 \f0 \fs24 \f1 \pard \s17 \posx11188 \posy40 \phpg \pvpg \absh-9652 \absw7334 \dxfrtext200 \qj \li52 \fi434 \ri50 \sl-260 \tx52 \tx486 \tqr \tx7283 C128's memory power can be further enhanced through the external addition of up to 384K of additional RAM. This added memory is plugged into the C128 via the expansion bus in the same manner that you might plug in a software cartridge. Don't be misled, though\'97this additional 384K of memory is not intended to be an add\_on to the existing RAM area. Commodore has chosen instead to use it as a RAM disk. A RAM disk is a section of RAM memory that is used as if it were another disk drive. Programs and data can be moved back and forth from regular memory to the RAM disk area just as if a disk drive were involved. The major advantage of this type of memory use is speed, since programs and files can be moved from one area of memory to another in a fraction of a second. This is a quantum improvement in speed; even when compared to the typical transfer rate of a very fast disk drive. A RAM disk option is especially useful with a large application that normally has to continually read and write to a disk during operation. Of course, when you are finished using a particular program all data in the RAM disk area must be saved on a disk or it will be lost. Further, before a program can be used from the RAM disk area it must first be copied to it from a disk.\par 
}\pard \sl-260 \tx52 \tx486 \tqr \tx7283 \fs24 \f0 {\pard \posx11201 \posy10014 \phpg \pvpg \absh-354 \absw3960 \dxfrtext200 \fs10 \f0 \fs29 \f0 \i \pard \s18 \posx11201 \posy10014 \phpg \pvpg \absh-354 \absw3960 \dxfrtext200 \li50 \ri50 \sl-304 \tx50 \tqr \tx3909 A Larger Keyboard Selection\par 
}\pard \sl-304 \tx50 \tqr \tx3909 \fs24 \f0 {\pard \posx11205 \posy10421 \phpg \pvpg \absh-575 \absw7319 \dxfrtext200 \fs10 \f0 \fs24 \f1 \plain \f1 \lang1033 \pard \s19 \posx11205 \posy10421 \phpg \pvpg \absh-575 \absw7319 \dxfrtext200 \qj \li50 \ri50 \sl-260 \tx50 \tqr \tx7268 The Commodore 128 has a new keyboard. The C128's keyboard, shown in Figure 3\_2, has 26 more keys than the C64. To begin with, there is the\par 
}\pard \sl-260 \tx50 \tqr \tx7268 \fs24 \f0 \page \lndscpsxn {\stylesheet {\snext0 Normal;}
{\s2 \tx50 \tqr \tx873 \ql \sl81 \li10527 \ri50 \sbasedon0 \snext2 OmniPage #769;}
{\s3 \tx51 \tqr \tx7297 \qj \li10526 \ri97 \sl258 \sbasedon0 \snext3 OmniPage #770;}
{\s4 \tx50 \tx488 \tqr \tx7303 \qj \li10527 \fi438 \ri91 \sl261 \sbasedon0 \snext4 OmniPage #771;}
{\s5 \tx62 \tx500 \tqr \tx7344 \qj \li10515 \fi438 \ri50 \sl261 \sbasedon0 \snext5 OmniPage #772;}
{\s6 \tx50 \tqr \tx3420 \ql \sl253 \li10527 \ri50 \sbasedon0 \snext6 OmniPage #773;}
{\s7 \tqr \tx7277 \qj \li10527 \ri50 \sl256 \sbasedon0 \snext7 OmniPage #774;}
{\s8 \tx52 \tx485 \tqr \tx7274 \qj \li10525 \fi433 \ri53 \sl258 \sbasedon0 \snext8 OmniPage #775;}
{\s9 \tx58 \tx491 \tqr \tx7261 \qj \li10519 \fi433 \ri66 \sl269 \sbasedon0 \snext9 OmniPage #776;}
{\s10 \tx50 \tqr \tx5633 \ql \sl369 \li10527 \ri50 \sbasedon0 \snext10 OmniPage #777;}
{\s11 \tqr \tx7275 \qj \li10527 \ri53 \sl262 \sbasedon0 \snext11 OmniPage #778;}
{\s12 \tx483 \tqr \tx7278 \qj \li10527 \fi433 \ri50 \sl260 \sbasedon0 \snext12 OmniPage #779;}
}\par {\pard \posx6688 \posy0 \phpg \pvpg \absh-125 \absw924 \dxfrtext200 \fs24 \f0 \pard \s2 \posx6688 \posy0 \phpg \pvpg \absh-125 \absw924 \dxfrtext200 \li50 \ri50 \sl-81 \tx50 \tqr \tx873 e \'97\par 
}\sect \sectd \linex0 \linemod0 \sbknone \lndscpsxn \marglsxn1675 \margrsxn1536 \pard \sl-81 \tx50 \tqr \tx873 {\pard \posx1725 \posy218 \phpg \pvpg \absh-6292 \absw7395 \dxfrtext200 \fs10 \f0 \fs24 \f0 \pard \s3 \posx1725 \posy218 \phpg \pvpg \absh-6292 \absw7395 \dxfrtext200 \qj \li51 \ri97 \sl-258 \tx51 \tqr \tx7297 original C64 keyboard area. This section has all the familiar multifunction text and graphics keys, as well as the standard C64 control keys: I \fs17 \f1 Shift 1, I Control, l Run/Stop |, I, | InsUDet |, | Cicar/Home |, \fs24 \f0 and \fs17 \f1 | Restore |. \fs24 \f0 The Commodore 128 adds a 14\_key numeric keypad just to the right of the main keyboard. This is perfect for long sessions of calculator\_style data entry. The keypad even has its own plus, minus, decimal and I \fs17 \f2 \ul Enter I \fs24 \f0 \plain \lang1033 keys to add to its convenience. Directly above the main keyboard is a single horizontal row of 16 keys, divided into four banks of four each. These key banks include the original C64 Function Keys, a new set of individual up, down, left, and right cursor motion keys, and eight special\_purpose keys.\par 
\fs10 \f0 \fs24 \f0 \pard \s4 \posx1725 \posy218 \phpg \pvpg \absh-6292 \absw7395 \dxfrtext200 \qj \li50 \fi438 \ri91 \sl-261 \tx50 \tx488 \tqr \tx7303 The four physical "function keys," so familiar to C64 owners, are now located just above the numeric keypad section. As before, these keys can have two different values assigned to them (F1/F2, F3/F4, etc.); that is why Commodore refers to them as eight actual keys. Regardless of how you count them, they remain very important because of what they are not \'97they are not pre\_defined in the same way as the other keyboard keys. Instead, they are user\_definable keys. This means that their definitions, either simple or complex, can be changed through software\'97a nice plus for creating menu\_driven application programs.\par 
\fs10 \f0 \fs24 \f0 \pard \s5 \posx1725 \posy218 \phpg \pvpg \absh-6292 \absw7395 \dxfrtext200 \qj \li62 \fi438 \ri50 \sl-261 \tx62 \tx500 \tqr \tx7344 The Commodore 128's new keyboard has two very important keys\'97 ESCape and ALTernative (located in the leftmost bank of new keys). ~ and 03 keys have been pretty common to business\_style small computers for a number of years now, so it was only natural for Commodore to provide them on the business\_oriented C128. The purpose of these two\par 
}\pard \sl-261 \tx62 \tx500 \tqr \tx7344 {\pard \posx3717 \posy7292 \phpg \pvpg \absh-315 \absw3471 \dxfrtext200 \fs10 \f0 \fs24 \f3 \b \pard \s6 \posx3717 \posy7292 \phpg \pvpg \absh-315 \absw3471 \dxfrtext200 \li50 \ri50 \sl-253 \tx50 \tqr \tx3420 Figure 3\_2. The C128 Keyboard\par 
}\pard \sl-253 \tx50 \tqr \tx3420 \fs24 \f0 {\pard \posx11237 \posy256 \phpg \pvpg \absh-3934 \absw7328 \dxfrtext200 \fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s7 \posx11237 \posy256 \phpg \pvpg \absh-3934 \absw7328 \dxfrtext200 \qj \li50 \ri50 \sl-256 \tx50 \tqr \tx7277 keys is to further extend the range of different code combinations that can be output from the keyboard. By doing so they make the C128 more attractive to those established business software developers who are used to working with more traditional keyboard arrangements.\par 
\fs10 \f0 \fs24 \f0 \pard \s8 \posx11237 \posy256 \phpg \pvpg \absh-3934 \absw7328 \dxfrtext200 \qj \li52 \fi433 \ri53 \sl-258 \tx52 \tx485 \tqr \tx7274 The I \fs17 \f2 \ul Help \fs17 \f1 \plain \fs17 \f1 \lang1033 I \fs24 \f0 key is of particular use to C128 users, especially those planning to w\fs24 \f4 \ul rite \fs24 \f0 \plain \lang1033 their own BASIC programs. When the C128 is in BASIC, pressing the I \fs17 \f2 \ul Help \fs17 \f1 \plain \fs17 \f1 \lang1033 I \fs24 \f0 key sends a special "give me help\'97where did I go wrong" signal to the BASIC interpreter. If used just after a BASIC program stops due to some error condition, then BASIC will respond with addi\-tional information as to where and possibly why the program ran into trouble. Of course, since the \fs17 \f1 I \fs17 \f2 \ul Help \fs17 \f1 \plain \fs17 \f1 \lang1033 I \fs24 \f0 key, like all C128 keyboard keys, is also redefinable it is certain to become a favorite for application software developers too.\par 
\fs10 \f0 \fs24 \f0 \pard \s9 \posx11237 \posy256 \phpg \pvpg \absh-3934 \absw7328 \dxfrtext200 \qj \li58 \fi433 \ri66 \sl-269 \tx58 \tx491 \tqr \tx7261 The remaining new keys, summarized in Table 3\_1, all add certain operating conveniences to the C128.\par 
}\pard \sl-269 \tx58 \tx491 \tqr \tx7261 {\pard \posx10677 \posy4432 \phpg \pvpg \absh-450 \absw5684 \dxfrtext200 \fs10 \f0 \fs34 \f0 \pard \s10 \posx10677 \posy4432 \phpg \pvpg \absh-450 \absw5684 \dxfrtext200 \li50 \ri50 \sl-369 \tx50 \tqr \tx5633 40\_ and 80\_Column Text and Graphics\par 
}\pard \sl-369 \tx50 \tqr \tx5633 \fs24 \f0 {\pard \posx11246 \posy4891 \phpg \pvpg \absh-6330 \absw7329 \dxfrtext200 \fs10 \f0 \fs24 \f0 \pard \s11 \posx11246 \posy4891 \phpg \pvpg \absh-6330 \absw7329 \dxfrtext200 \qj \li50 \ri53 \sl-262 \tx50 \tqr \tx7275 Another new feature of the C128 mode is its ability to display 80 as well as 40 characters on a line. This is possible because of a second video processor chip inside the C128. This chip, an 8563, can be used instead of the standard 40\_column chip by depressing the I \fs24 \f4 \ul torso \fs17 \f2 Disp \fs17 \f1 \plain \fs17 \f1 \lang1033 I \fs24 \f0 key to its locked\_down position before either applying power to the C128, or by pressing the RESET button when power is on. When this is done, the C128 initializes itself in the 80\_column format. Of course, to use this new screen mode you must have a video monitor, capable of displaying 80 columns, connected to the C128's RGBI connector. Switching back to the 40\_column mode also requires either turning the power off and on again or pressing RESET. Fortunately, there are ways to perform the screen mode switch from within a program, which is how most commercial software will ensure that the C128 is in the correct screen mode.\par 
\fs10 \f0 \fs24 \f0 \pard \s12 \posx11246 \posy4891 \phpg \pvpg \absh-6330 \absw7329 \dxfrtext200 \qj \li50 \fi433 \ri50 \sl-260 \tx50 \tx483 \tqr \tx7278 The advantages to using the new 80\_column screen mode are numer\-ous. Naturally, you have an 80\_character by 25\_line display so you can have up to 2000 characters on the screen at the same time, and they can be in color. What's more, because of the bit\_mapped nature of this screen mode you can have the C128 display a total mix of all available text and graphics characters (not possible in the 40\_column mode) and even mix text and graphics characters with high\_resolution drawings. The character font definitions within the C128 (they determine what shapes will show up on the screen when you press a certain text or graphics key) can be changed to give the screen output a totally new set of characters\'97even a new language. It is possible by doing a little internal rearranging to use\par 
}\pard \sl-260 \tx50 \tx483 \tqr \tx7278 \page \lndscpsxn {\stylesheet {\snext0 Normal;}
{\s2 \tx51 \tqr \tx7333 \qj \li10526 \ri50 \sl246 \sbasedon0 \snext2 OmniPage #1025;}
{\s3 \tx50 \tx487 \tqr \tx7300 \qj \li10527 \fi437 \ri83 \sl259 \sbasedon0 \snext3 OmniPage #1026;}
{\s4 \tx50 \tqr \tx4698 \qc \sl253 \sbasedon0 \snext4 OmniPage #1027;}
{\s5 \tx50 \tx100 \tx200 \tx1145 \tqr \tx4792 \ql \sl253 \li10527 \ri50 \sbasedon0 \snext5 OmniPage #1028;}
{\s6 \tx53 \tx103 \tx569 \tx1664 \tqr \tx6877 \ql \sl240 \li10524 \ri50 \sbasedon0 \snext6 OmniPage #1029;}
{\s7 \tx50 \tx100 \tx1667 \tqr \tx6677 \ql \sl240 \li10527 \ri250 \sbasedon0 \snext7 OmniPage #1030;}
{\s8 \tqr \tx7281 \qj \li10527 \ri53 \sl257 \sbasedon0 \snext8 OmniPage #1031;}
{\s9 \tx53 \tx490 \tqr \tx7284 \qj \li10524 \fi437 \ri50 \sl260 \sbasedon0 \snext9 OmniPage #1032;}
{\s10 \tx50 \tqr \tx2413 \ql \sl333 \li10527 \ri50 \sbasedon0 \snext10 OmniPage #1033;}
{\s11 \tqr \tx7278 \qj \li10527 \ri71 \sl265 \sbasedon0 \snext11 OmniPage #1034;}
{\s12 \tx52 \tx489 \tqr \tx7299 \qj \li10525 \fi437 \ri50 \sl260 \sbasedon0 \snext12 OmniPage #1035;}
{\s13 \tx57 \tx494 \tqr \tx7289 \qj \li10520 \fi437 \ri60 \sl260 \sbasedon0 \snext13 OmniPage #1036;}
}\par {\pard \posx1654 \posy185 \phpg \pvpg \absh-3414 \absw7384 \dxfrtext200 \fs24 \f0 \pard \s2 \posx1654 \posy185 \phpg \pvpg \absh-3414 \absw7384 \dxfrtext200 \qj \li51 \ri50 \sl-246 \tx51 \tqr \tx7333 a reduced\_size character set and obtain an even larger 132\_column by 25\_` line screen display.\par 
\fs10 \f0 \fs24 \f0 \pard \s3 \posx1654 \posy185 \phpg \pvpg \absh-3414 \absw7384 \dxfrtext200 \qj \li50 \fi437 \ri83 \sl-259 \tx50 \tx487 \tqr \tx7300 Remember that the C128 has access to both the 40\_ and the 80\_column screen video processors and the C128 can take advantage of that fact too. Not only can the C128 choose between these modes according to the position of the \fs24 \f1 \ul ~ torso \fs17 \f2 \b Disp \fs17 \f3 \plain \b \fs17 \f3 \lang1033 I \fs24 \f0 \plain \lang1033 key, the screen modes can also be switched from within a program. Therefore, it is possible to use two displays (a 40\-column display and an 80\_column one) to show outputs from the same program. Both displays can't be updated at the same time but changes can be alternated between the two. As long as both displays remain enabled, their outputs will stay visible. As the 40 and 80\_column outputs come from separate screen processors, they can display different infor\-mation and even be in totally different text and graphics modes. In order\par 
}\sect \sectd \linex0 \linemod0 \sbknone \lndscpsxn \marglsxn1604 \margrsxn1494 \pard \sl-259 \tx50 \tx487 \tqr \tx7300 {\pard \posx2996 \posy4158 \phpg \pvpg \absh-315 \absw4749 \dxfrtext200 \fs10 \f0 \fs24 \f4 \b \pard \s4 \posx2996 \posy4158 \phpg \pvpg \absh-315 \absw4749 \dxfrtext200 \qc \sl-253 \tx50 \tqr \tx4698 Table 3\_1. New Keys for the Commodore 128\par 
}\pard \sl-253 \tx50 \tqr \tx4698 \fs24 \f0 {\pard \posx2431 \posy4701 \phpg \pvpg \absh-315 \absw4843 \dxfrtext200 \fs10 \f0 \fs24 \f4 \fs24 \f0 \plain \lang1033 \pard \s5 \posx2431 \posy4701 \phpg \pvpg \absh-315 \absw4843 \dxfrtext200 \li50 \ri50 \sl-253 \tx50 \tx100 \tx200 \tx1145 \tqr \tx4792 \tab \tab Key\tab Definition or Function\par 
}\pard \sl-253 \tx50 \tx100 \tx200 \tx1145 \tqr \tx4792 {\pard \posx1912 \posy5184 \phpg \pvpg \absh-5614 \absw6928 \dxfrtext200 \fs10 \f0 \fs24 \f0 \pard \s6 \posx1912 \posy5184 \phpg \pvpg \absh-5614 \absw6928 \dxfrtext200 \li53 \ri50 \tx53 \tx103 \tx569 \tx1664 \tqr \tx6877 \tab \tab \tab Used in conduction with one or more text keys to generate\par 
\pard \s6 \posx1912 \posy5184 \phpg \pvpg \absh-5614 \absw6928 \dxfrtext200 \li53 \ri50 \tx53 \tx103 \tx569 \tx1664 \tqr \tx6877 \tab \tab \tab an ESCape code sequence (used in the C128 in the CP/M\par 
\pard \s6 \posx1912 \posy5184 \phpg \pvpg \absh-5614 \absw6928 \dxfrtext200 \li53 \ri50 \tx53 \tx103 \tx569 \tx1664 \tqr \tx6877 \tab \tab \tab terminal emulator mode).\par 
\pard \s6 \posx1912 \posy5184 \phpg \pvpg \absh-5614 \absw6928 \dxfrtext200 \li53 \ri50 \tx53 \tx103 \tx569 \tx1664 \tqr \tx6877 \tab EM\tab \tab Used to move the cursor to the next Tab Stop.\par 
\pard \s6 \posx1912 \posy5184 \phpg \pvpg \absh-5614 \absw6928 \dxfrtext200 \li53 \ri50 \tx53 \tx103 \tx569 \tx1664 \tqr \tx6877 \tab 9\tab \tab ~Used simultaneously with some other text key to\par 
\pard \s6 \posx1912 \posy5184 \phpg \pvpg \absh-5614 \absw6928 \dxfrtext200 \li53 \ri50 \tx53 \tx103 \tx569 \tx1664 \tqr \tx6877 \tab \tab \tab generate a special ALT code.\par 
\fs10 \f0 \fs24 \f0 \fs17 \f3 \b \pard \s7 \posx1912 \posy5184 \phpg \pvpg \absh-5614 \absw6928 \dxfrtext200 \li50 \ri250 \tx50 \tx100 \tx1667 \tqr \tx6677 \tab I \fs17 \f2 \ul Caps Lock \fs17 \f3 \plain \b \fs17 \f3 \lang1033 I\fs24 \f0 \plain \lang1033 \tab \tab Used in the 80\_column mode to allow independent\par 
\pard \s7 \posx1912 \posy5184 \phpg \pvpg \absh-5614 \absw6928 \dxfrtext200 \li50 \ri250 \tx50 \tx100 \tx1667 \tqr \tx6677 \tab \tab \tab selection of upper\_ and lowercase letters and the two\par 
\pard \s7 \posx1912 \posy5184 \phpg \pvpg \absh-5614 \absw6928 \dxfrtext200 \li50 \ri250 \tx50 \tx100 \tx1667 \tqr \tx6677 \tab \tab \tab graphics sets.\par 
\pard \s7 \posx1912 \posy5184 \phpg \pvpg \absh-5614 \absw6928 \dxfrtext200 \li50 \ri250 \tx50 \tx100 \tx1667 \tqr \tx6677 \tab EM\tab \tab Used in BASIC 7.0 to locate errors while programming\par 
\pard \s7 \posx1912 \posy5184 \phpg \pvpg \absh-5614 \absw6928 \dxfrtext200 \li50 \ri250 \tx50 \tx100 \tx1667 \tqr \tx6677 \tab \tab \tab May also be used as a general "HELP" key by some\par 
\pard \s7 \posx1912 \posy5184 \phpg \pvpg \absh-5614 \absw6928 \dxfrtext200 \li50 \ri250 \tx50 \tx100 \tx1667 \tqr \tx6677 \tab \tab \tab software applications.\par 
\fs17 \f3 \b \pard \s7 \posx1912 \posy5184 \phpg \pvpg \absh-5614 \absw6928 \dxfrtext200 \li50 \ri250 \tx50 \tx100 \tx1667 \tqr \tx6677 \tab I Line Feed I\fs24 \f0 \plain \lang1033 \tab \tab Provides a LINE FEED without CARRIAGE RETURN.\par 
\fs17 \f2 \ul \b \pard \s7 \posx1912 \posy5184 \phpg \pvpg \absh-5614 \absw6928 \dxfrtext200 \li50 \ri250 \tx50 \tx100 \tx1667 \tqr \tx6677 \tab I 40i80 Disp \fs17 \f0 \plain \b \fs17 \lang1033 \plain \fs17 \lang1033 I\fs24 \f0 \tab \tab Switches display from 40 to 80 columns.\par 
\fs17 \f3 \b \pard \s7 \posx1912 \posy5184 \phpg \pvpg \absh-5614 \absw6928 \dxfrtext200 \li50 \ri250 \tx50 \tx100 \tx1667 \tqr \tx6677 \tab I \fs17 \f2 \ul No Scroll I\fs24 \f0 \plain \b \lang1033 \plain \lang1033 \tab \tab Inhibits screen scrolling by preventing the cursor from\par 
\pard \s7 \posx1912 \posy5184 \phpg \pvpg \absh-5614 \absw6928 \dxfrtext200 \li50 \ri250 \tx50 \tx100 \tx1667 \tqr \tx6677 \tab \tab \tab going beyond the 25th display line.\par 
\pard \s7 \posx1912 \posy5184 \phpg \pvpg \absh-5614 \absw6928 \dxfrtext200 \li50 \ri250 \tx50 \tx100 \tx1667 \tqr \tx6677 \tab 6Q\tab \tab Moves cursor up one line.\par 
\pard \s7 \posx1912 \posy5184 \phpg \pvpg \absh-5614 \absw6928 \dxfrtext200 \li50 \ri250 \tx50 \tx100 \tx1667 \tqr \tx6677 \tab 6\tab \tab ~Moves cursor down one line.\par 
\pard \s7 \posx1912 \posy5184 \phpg \pvpg \absh-5614 \absw6928 \dxfrtext200 \li50 \ri250 \tx50 \tx100 \tx1667 \tqr \tx6677 \tab E]\tab \tab Moves cursor left by one character position.\par 
\pard \s7 \posx1912 \posy5184 \phpg \pvpg \absh-5614 \absw6928 \dxfrtext200 \li50 \ri250 \tx50 \tx100 \tx1667 \tqr \tx6677 \tab E]\tab \tab Moves cursor right by one character position.\par 
\pard \s7 \posx1912 \posy5184 \phpg \pvpg \absh-5614 \absw6928 \dxfrtext200 \li50 \ri250 \tx50 \tx100 \tx1667 \tqr \tx6677 \tab Function Keys\tab \tab Definable function keys (see BASIC 7.0 section).\par 
\pard \s7 \posx1912 \posy5184 \phpg \pvpg \absh-5614 \absw6928 \dxfrtext200 \li50 \ri250 \tx50 \tx100 \tx1667 \tqr \tx6677 \tab 14\_Key Keypad\tab \tab Calculator\_style keypad with separate plus, minus,\par 
\pard \s7 \posx1912 \posy5184 \phpg \pvpg \absh-5614 \absw6928 \dxfrtext200 \li50 \ri250 \tx50 \tx100 \tx1667 \tqr \tx6677 \tab \tab \tab decimal, and I \fs17 \f2 \ul \b Enter \fs17 \f0 \plain \b \fs17 \lang1033 \plain \fs17 \lang1033 I \fs24 \f0 keys.\par 
}\pard \tx50 \tx100 \tx1667 \tqr \tx6677 {\pard \posx11262 \posy212 \phpg \pvpg \absh-2902 \absw7335 \dxfrtext200 \fs10 \f0 \fs24 \f0 \pard \s8 \posx11262 \posy212 \phpg \pvpg \absh-2902 \absw7335 \dxfrtext200 \qj \li50 \ri53 \sl-257 \tx50 \tqr \tx7281 to take advantage of this dual\_screen display ability the C128 \fs24 \f4 \b must \fs24 \f0 \plain \lang1033 have both of its video outputs connected to appropriate video \fs24 \f4 \b monitors. \fs24 \f0 \plain \lang1033 We'll discuss this more later.\par 
\fs10 \f0 \fs24 \f0 \pard \s9 \posx11262 \posy212 \phpg \pvpg \absh-2902 \absw7335 \dxfrtext200 \qj \li53 \fi437 \ri50 \sl-260 \tx53 \tx490 \tqr \tx7284 The Commodore 128 can actually be speeded up internally by using the 80\_column screen mode by itself. To do this, you must use software to actually turn the 40\_column chip off. C128 data processing operations, when used in this manner, run at nearly twice the rate obtained when the 40\_column screen processor is enabled. This increase in processing power is greatly appreciated when a computer is required to do the type of data processing and number crunching typical of most business, industrial, and scientific applications.\par 
}\pard \sl-260 \tx53 \tx490 \tqr \tx7284 {\pard \posx11271 \posy3412 \phpg \pvpg \absh-375 \absw2464 \dxfrtext200 \fs10 \f0 \fs30 \f0 \i \pard \s10 \posx11271 \posy3412 \phpg \pvpg \absh-375 \absw2464 \dxfrtext200 \li50 \ri50 \sl-333 \tx50 \tqr \tx2413 Enhanced BASIC\par 
}\pard \sl-333 \tx50 \tqr \tx2413 \fs24 \f0 {\pard \posx11267 \posy3810 \phpg \pvpg \absh-7370 \absw7350 \dxfrtext200 \fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s11 \posx11267 \posy3810 \phpg \pvpg \absh-7370 \absw7350 \dxfrtext200 \qj \li50 \ri71 \sl-265 \tx50 \tqr \tx7278 The enhanced \fs24 \f0 B A SIC, \fs24 \f0 called \fs24 \f0 B A SIC 7.0, \fs24 \f0 that is available to you in the C128 mode is the most powerful version of \fs24 \f0 B A SIC \fs24 \f0 yet offered by Com\-modore. In all there are 140 commands, operations, and functions\'9720 commands, 35 operations and 13 functions more than were found in the Commodore 64's \fs24 \f0 B A SIC \fs24 \f0 version 2.0.\par 
\fs10 \f0 \fs24 \f0 \pard \s12 \posx11267 \posy3810 \phpg \pvpg \absh-7370 \absw7350 \dxfrtext200 \qj \li52 \fi437 \ri50 \sl-260 \tx52 \tx489 \tqr \tx7299 B A SIC 7.0 \fs24 \f0 gives you increased control of: program flow; conditional testing; logical evaluations; mathematical functions and procedures; text manipulation and output; data input, processing, storage, retrieval, and presentation; file construction and usage; program testing; and just about every conceivable graphics and sound operation that the 128 can perform. In addition, \fs24 \f0 B A SIC 7.0 \fs24 \f0 supports a full array of commands that greatly simplify the tasks of disk drive control and file maintenance. Despite its enhancements, \fs24 \f0 B A SIC 7.0 \fs24 \f0 remains downward\_compatible with earlier Commodore \fs24 \f0 B A SIC \fs24 \f0 versions 2.0 and 4.0. That is, a program written for the earlier Commodore \fs24 \f0 B A SICs will \fs24 \f0 run under \fs24 \f0 7.0, \fs24 \f0 although not vice versa. Note that this downward compatibility applies to the program as written on paper. The disk versions of \fs24 \f0 B A SIC \fs24 \f0 programs are stored differ\-ently, and are not compatible.\par 
\fs10 \f0 \fs24 \f0 \pard \s13 \posx11267 \posy3810 \phpg \pvpg \absh-7370 \absw7350 \dxfrtext200 \qj \li57 \fi437 \ri60 \sl-260 \tx57 \tx494 \tqr \tx7289 B A SIC 7.0 \fs24 \f0 takes advantage of nearly the full 128K of the C128's \fs24 \f0 R A M \fs24 \f0 (122365 bytes), and does it in such a way as to eliminate the old "garbage collection" delays that occurred when larger \fs24 \f0 B ASIC \fs24 \f0 programs were run on the Commodore 64. (C64 programs would often halt on their own for several minutes while \fs24 \f0 B A SIC \fs24 \f0 2.0 tried to make room in memory for more operations.) 64K of the Commodore 128's memory is set aside to hold just the program code, while all variables generated by that program are kept and maintained in the other 64K segment of memory. With so much memory space, it is possible to further divide the C128's memory so that a number of programs can be placed in memory at the same time.\par 
}\pard \sl-260 \tx57 \tx494 \tqr \tx7289 \page \lndscpsxn {\stylesheet {\snext0 Normal;}
{\s2 \tx50 \tx487 \tqr \tx7402 \qj \li10527 \fi437 \ri50 \sl252 \sbasedon0 \snext2 OmniPage #1281;}
{\s3 \tx54 \tx491 \tqr \tx7386 \qj \li10523 \fi437 \ri66 \sl258 \sbasedon0 \snext3 OmniPage #1282;}
{\s4 \tx50 \tqr \tx3353 \ql \sl304 \li10527 \ri50 \sbasedon0 \snext4 OmniPage #1283;}
{\s5 \tx51 \tqr \tx7345 \qj \li10526 \ri50 \sl260 \sbasedon0 \snext5 OmniPage #1284;}
{\s6 \tx50 \tx487 \tqr \tx7296 \qj \li10527 \fi437 \ri99 \sl261 \sbasedon0 \snext6 OmniPage #1285;}
{\s7 \tx55 \tqr \tx5269 \ql \sl303 \li10522 \ri2067 \sbasedon0 \snext7 OmniPage #1286;}
{\s8 \tx50 \tqr \tx7286 \qj \li10527 \ri50 \sl261 \sbasedon0 \snext8 OmniPage #1287;}
{\s9 \tqr \tx7287 \qj \li10527 \ri50 \sl257 \sbasedon0 \snext9 OmniPage #1288;}
{\s10 \tx61 \tx498 \tqr \tx7281 \qj \li10516 \fi437 \ri56 \sl260 \sbasedon0 \snext10 OmniPage #1289;}
{\s11 \tx50 \tqr \tx5965 \qc \sl253 \sbasedon0 \snext11 OmniPage #1290;}
{\s12 \tx50 \tqr \tx2847 \ql \sl225 \li10527 \ri50 \sbasedon0 \snext12 OmniPage #1291;}
{\s13 \tqr \tx2182 \ql \sl225 \li10527 \ri50 \sbasedon0 \snext13 OmniPage #1292;}
{\s14 \tqc \tx175 \tx843 \tx2606 \tqr \tx6485 \ql \sl240 \li10527 \ri50 \sbasedon0 \snext14 OmniPage #1293;}
}\par {\pard \posx1663 \posy195 \phpg \pvpg \absh-1588 \absw7453 \dxfrtext200 \fs24 \f0 \pard \s2 \posx1663 \posy195 \phpg \pvpg \absh-1588 \absw7453 \dxfrtext200 \qj \li50 \fi437 \ri50 \sl-252 \tx50 \tx487 \tqr \tx7402 Another feature of BASIC 7.0 is that the C128's eight function keyst` come predefined with often\_used BASIC commands. Of course, they cant be easily redefined by BASIC commands to perform other operations of' your choice.\par 
\fs10 \f0 \fs24 \f0 \pard \s3 \posx1663 \posy195 \phpg \pvpg \absh-1588 \absw7453 \dxfrtext200 \qj \li54 \fi437 \ri66 \sl-258 \tx54 \tx491 \tqr \tx7386 Later in this chapter we'll take a look at the various commands, statements, and functions found in BASIC 7.0.\par 
}\sect \sectd \linex0 \linemod0 \sbknone \lndscpsxn \marglsxn1597 \margrsxn1481 \pard \sl-258 \tx54 \tx491 \tqr \tx7386 {\pard \posx1665 \posy2101 \phpg \pvpg \absh-354 \absw3404 \dxfrtext200 \fs10 \f0 \fs29 \f1 \i \pard \s4 \posx1665 \posy2101 \phpg \pvpg \absh-354 \absw3404 \dxfrtext200 \li50 \ri50 \sl-304 \tx50 \tqr \tx3353 Enhanced Screen Editor\par 
}\pard \sl-304 \tx50 \tqr \tx3353 \fs24 \f0 {\pard \posx1655 \posy2513 \phpg \pvpg \absh-6061 \absw7396 \dxfrtext200 \fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s5 \posx1655 \posy2513 \phpg \pvpg \absh-6061 \absw7396 \dxfrtext200 \qj \li51 \ri50 \sl-260 \tx51 \tqr \tx7345 Commodore computers have always been famous for the versatility of their built\_in screen editors. These "full screen" editors act as temporary work\-ing windows where you write and organize your BASIC commands or program statements. Through them you can move the cursor anywhere on the screen, insert and delete any number of characters, and erase the screen completely. Commodore screen editors have some interesting side` capabilities too. For example, you can list a group of lines from a program in memory to the screen and then use the screen editor's cursor motion and editing keys to change anything on any BASIC line within the editing screen, although nothing actually changes in BASIC's program memory until you press the \fs17 \f2 I \fs17 \f3 \ul Return \fs17 \f2 \plain \fs17 \f2 \lang1033 I \fs24 \f0 key. Duplicating entire lines is as simple as typing a new line number over the old and pressing \fs24 \f4 \ul Aim.\fs24 \f0 \plain \lang1033  The screen editor also has a special quote mode that allows you to mix text, graphics, and even cursor actions right in your program code.\par 
\fs10 \f0 \fs24 \f0 \pard \s6 \posx1655 \posy2513 \phpg \pvpg \absh-6061 \absw7396 \dxfrtext200 \qj \li50 \fi437 \ri99 \sl-261 \tx50 \tx487 \tqr \tx7296 Commodore has added some new features to the Commodore 128's screen editor to improve upon the C64's screen editor. For example, pro\-gram lines can be 160 characters long, as compared to 80 on the C64. This is made possible by an ingenious form of auto\_wraparound within the screen editor that keeps track of where on the screen each BASIC line begins. In the 80\_column screen mode a BASIC statement can be two screen lines in length, while in the 40\_column mode it can be up to four screen lines. Two other screen editor enhancements are line insert and delete and four\_way margin control.\par 
}\pard \sl-261 \tx50 \tx487 \tqr \tx7296 {\pard \posx1647 \posy8891 \phpg \pvpg \absh-2070 \absw7337 \dxfrtext200 \fs10 \f0 \fs29 \f1 \i \pard \s7 \posx1647 \posy8891 \phpg \pvpg \absh-2070 \absw7337 \dxfrtext200 \li55 \ri2067 \sl-303 \tx55 \tqr \tx5269 Built\_In Monitor Program for Assembly\par 
\pard \s7 \posx1647 \posy8891 \phpg \pvpg \absh-2070 \absw7337 \dxfrtext200 \li55 \ri2067 \sl-303 \tx55 \tqr \tx5269 Language Programmers\par 
\fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s8 \posx1647 \posy8891 \phpg \pvpg \absh-2070 \absw7337 \dxfrtext200 \qj \li50 \ri50 \sl-261 \tx50 \tqr \tx7286 The Commodore 128 has a built\_in Machine Language Monitor. This special programming utility was once a built\_in feature on all Commodore PETs, but was later removed from the VIC\_20 and C64 due to memory restrictions. The Monitor, as it is called, is an absolutely essential tool for anyone interested in writing, testing, or modifying programs written in\par 
}\pard \sl-261 \tx50 \tqr \tx7286 {\pard \posx11292 \posy237 \phpg \pvpg \absh-3670 \absw7338 \dxfrtext200 \fs10 \f0 \fs24 \f0 \pard \s9 \posx11292 \posy237 \phpg \pvpg \absh-3670 \absw7338 \dxfrtext200 \qj \li50 \ri50 \sl-257 \tx50 \tqr \tx7287 8502 machine language. It will be used by professional software devel\-opers as well as by C128 owners who want to write short and fast machine language routines to speed up critical parts of their own BASIC programs. The Monitor is also an excellent learning tool for students who want to understand how machine language programs work (most commercial soft\-ware is written in machine language, and so are programs like BASIC 7.0, Logo, and FORTH).\par 
\fs10 \f0 \fs24 \f0 \pard \s10 \posx11292 \posy237 \phpg \pvpg \absh-3670 \absw7338 \dxfrtext200 \qj \li61 \fi437 \ri56 \sl-260 \tx61 \tx498 \tqr \tx7281 The Monitor utility in the Commodore 128 is an enhanced version of the earlier Commodore monitors. A similar version was made available to Commodore 64 users as part of Commodore's "Assembler Development Package" for that machine. Table 3\_2 summarizes the monitor commands built in to the C128. Complete details on how the monitor is used can be found in both the Commodore \fs20 \f0 \i 128 \fs24 \f0 \plain \lang1033 User's Guide and the Commodore \fs20 \f0 \i 128 \fs24 \f0 \plain \lang1033 System Guide.\par 
}\pard \sl-260 \tx61 \tx498 \tqr \tx7281 {\pard \posx12007 \posy4408 \phpg \pvpg \absh-315 \absw6016 \dxfrtext200 \fs10 \f0 \fs24 \f0 \b \pard \s11 \posx12007 \posy4408 \phpg \pvpg \absh-315 \absw6016 \dxfrtext200 \qc \sl-253 \tx50 \tqr \tx5965 Table 3\_2. Commodore 128 Monitor Command Summary\par 
}\pard \sl-253 \tx50 \tqr \tx5965 {\pard \posx11564 \posy4985 \phpg \pvpg \absh-284 \absw2898 \dxfrtext200 \fs10 \f0 \fs21 \f0 \plain \fs21 \lang1033 \pard \s12 \posx11564 \posy4985 \phpg \pvpg \absh-284 \absw2898 \dxfrtext200 \li50 \ri50 \sl-225 \tx50 \tqr \tx2847 Command Command Name\par 
}\pard \sl-225 \tx50 \tqr \tx2847 \fs24 \f0 {\pard \posx15375 \posy4967 \phpg \pvpg \absh-284 \absw2233 \dxfrtext200 \fs21 \f0 \pard \s13 \posx15375 \posy4967 \phpg \pvpg \absh-284 \absw2233 \dxfrtext200 \li50 \ri50 \sl-225 \tx50 \tqr \tx2182 Command Description\par 
}\pard \sl-225 \tx50 \tqr \tx2182 \fs24 \f0 {\pard \posx11943 \posy5461 \phpg \pvpg \absh-5341 \absw6536 \dxfrtext200 \fs21 \f0 \pard \s14 \posx11943 \posy5461 \phpg \pvpg \absh-5341 \absw6536 \dxfrtext200 \li50 \ri50 \tx50 \tqc \tx175 \tx843 \tx2606 \tqr \tx6485 \tab A\tab ASSEMBLE\tab Assembles a line of 6502 machine code\par 
\pard \s14 \posx11943 \posy5461 \phpg \pvpg \absh-5341 \absw6536 \dxfrtext200 \li50 \ri50 \tx50 \tqc \tx175 \tx843 \tx2606 \tqr \tx6485 \tab C\tab COMPARE\tab Compares two sections of memory and\par 
\pard \s14 \posx11943 \posy5461 \phpg \pvpg \absh-5341 \absw6536 \dxfrtext200 \li50 \ri50 \tx50 \tqc \tx175 \tx843 \tx2606 \tqr \tx6485 \tab \tab \tab reports the differences\par 
\pard \s14 \posx11943 \posy5461 \phpg \pvpg \absh-5341 \absw6536 \dxfrtext200 \li50 \ri50 \tx50 \tqc \tx175 \tx843 \tx2606 \tqr \tx6485 \tab D\tab DISASSEMBLE\tab Disassembles a line of 6502 machine code\par 
\pard \s14 \posx11943 \posy5461 \phpg \pvpg \absh-5341 \absw6536 \dxfrtext200 \li50 \ri50 \tx50 \tqc \tx175 \tx843 \tx2606 \tqr \tx6485 \tab F\tab FILL\tab Fills memory with the specified byte\par 
\pard \s14 \posx11943 \posy5461 \phpg \pvpg \absh-5341 \absw6536 \dxfrtext200 \li50 \ri50 \tx50 \tqc \tx175 \tx843 \tx2606 \tqr \tx6485 \tab G\tab GO\tab Starts 6502 code execution at the\par 
\pard \s14 \posx11943 \posy5461 \phpg \pvpg \absh-5341 \absw6536 \dxfrtext200 \li50 \ri50 \tx50 \tqc \tx175 \tx843 \tx2606 \tqr \tx6485 \tab \tab \tab specified address\par 
\pard \s14 \posx11943 \posy5461 \phpg \pvpg \absh-5341 \absw6536 \dxfrtext200 \li50 \ri50 \tx50 \tqc \tx175 \tx843 \tx2606 \tqr \tx6485 \tab H\tab HUNT\tab Hunts through memory within a specified\par 
\pard \s14 \posx11943 \posy5461 \phpg \pvpg \absh-5341 \absw6536 \dxfrtext200 \li50 \ri50 \tx50 \tqc \tx175 \tx843 \tx2606 \tqr \tx6485 \tab \tab \tab range for all occurrences of a set of bytes\par 
\pard \s14 \posx11943 \posy5461 \phpg \pvpg \absh-5341 \absw6536 \dxfrtext200 \li50 \ri50 \tx50 \tqc \tx175 \tx843 \tx2606 \tqr \tx6485 \tab L\tab LOAD\tab Loads a file from tape or disk\par 
\pard \s14 \posx11943 \posy5461 \phpg \pvpg \absh-5341 \absw6536 \dxfrtext200 \li50 \ri50 \tx50 \tqc \tx175 \tx843 \tx2606 \tqr \tx6485 \tab M\tab MEMORY\tab Displays the hexadecimal and ASCII\par 
\pard \s14 \posx11943 \posy5461 \phpg \pvpg \absh-5341 \absw6536 \dxfrtext200 \li50 \ri50 \tx50 \tqc \tx175 \tx843 \tx2606 \tqr \tx6485 \tab \tab \tab values of memory locations\par 
\pard \s14 \posx11943 \posy5461 \phpg \pvpg \absh-5341 \absw6536 \dxfrtext200 \li50 \ri50 \tx50 \tqc \tx175 \tx843 \tx2606 \tqr \tx6485 \tab R\tab REGISTERS\tab Displays the 8502 registers\par 
\pard \s14 \posx11943 \posy5461 \phpg \pvpg \absh-5341 \absw6536 \dxfrtext200 \li50 \ri50 \tx50 \tqc \tx175 \tx843 \tx2606 \tqr \tx6485 \tab S\tab SAVE\tab Saves memory to tape or disk\par 
\pard \s14 \posx11943 \posy5461 \phpg \pvpg \absh-5341 \absw6536 \dxfrtext200 \li50 \ri50 \tx50 \tqc \tx175 \tx843 \tx2606 \tqr \tx6485 \tab T\tab TRANSFER\tab Transfers code from one section of\par 
\pard \s14 \posx11943 \posy5461 \phpg \pvpg \absh-5341 \absw6536 \dxfrtext200 \li50 \ri50 \tx50 \tqc \tx175 \tx843 \tx2606 \tqr \tx6485 \tab \tab \tab memory to another\par 
\pard \s14 \posx11943 \posy5461 \phpg \pvpg \absh-5341 \absw6536 \dxfrtext200 \li50 \ri50 \tx50 \tqc \tx175 \tx843 \tx2606 \tqr \tx6485 \tab V\tab VERIFY\tab Compares memory with tape or disk\par 
\pard \s14 \posx11943 \posy5461 \phpg \pvpg \absh-5341 \absw6536 \dxfrtext200 \li50 \ri50 \tx50 \tqc \tx175 \tx843 \tx2606 \tqr \tx6485 \tab E\tab EXIT\tab Exits Commodore 128 MONITOR\par 
\pard \s14 \posx11943 \posy5461 \phpg \pvpg \absh-5341 \absw6536 \dxfrtext200 \li50 \ri50 \tx50 \tqc \tx175 \tx843 \tx2606 \tqr \tx6485 \tab \tab (period)\tab Assembles a line of 6502 code\par 
\pard \s14 \posx11943 \posy5461 \phpg \pvpg \absh-5341 \absw6536 \dxfrtext200 \li50 \ri50 \tx50 \tqc \tx175 \tx843 \tx2606 \tqr \tx6485 \tab >\tab (greater than)\tab Modifies memory\par 
\pard \s14 \posx11943 \posy5461 \phpg \pvpg \absh-5341 \absw6536 \dxfrtext200 \li50 \ri50 \tx50 \tqc \tx175 \tx843 \tx2606 \tqr \tx6485 \tab ;\tab (semicolon)\tab Modifies 8510 register values\par 
\pard \s14 \posx11943 \posy5461 \phpg \pvpg \absh-5341 \absw6536 \dxfrtext200 \li50 \ri50 \tx50 \tqc \tx175 \tx843 \tx2606 \tqr \tx6485 \tab @\tab (at sign)\tab Displays disk status\par 
}\pard \tx50 \tqc \tx175 \tx843 \tx2606 \tqr \tx6485 \fs24 \f0 \page \lndscpsxn {\stylesheet {\snext0 Normal;}
{\s2 \tx50 \tqr \tx4564 \ql \sl319 \li10527 \ri50 \sbasedon0 \snext2 OmniPage #1537;}
{\s3 \tx66 \tqr \tx7303 \qj \li10511 \ri50 \sl258 \sbasedon0 \snext3 OmniPage #1538;}
{\s4 \tx53 \tx492 \tqr \tx7300 \qj \li10524 \fi439 \ri53 \sl261 \sbasedon0 \snext4 OmniPage #1539;}
{\s5 \tx50 \tx489 \tqr \tx7288 \qj \li10527 \fi439 \ri65 \sl260 \sbasedon0 \snext5 OmniPage #1540;}
{\s6 \tx52 \tx491 \tqr \tx7297 \qj \li10525 \fi439 \ri56 \sl261 \sbasedon0 \snext6 OmniPage #1541;}
{\s7 \tx50 \tqr \tx7467 \ql \sl355 \li10527 \ri449 \sbasedon0 \snext7 OmniPage #1542;}
{\s8 \tx650 \tqr \tx7866 \qj \li9927 \ri50 \sl260 \sbasedon0 \snext8 OmniPage #1543;}
{\s9 \tx50 \tqr \tx7281 \qj \li10527 \ri70 \sl257 \sbasedon0 \snext9 OmniPage #1544;}
{\s10 \tx58 \tx497 \tqr \tx7301 \qj \li10519 \fi439 \ri50 \sl262 \sbasedon0 \snext10 OmniPage #1545;}
{\s11 \tx50 \tqr \tx5371 \qc \sl261 \sbasedon0 \snext11 OmniPage #1546;}
}\par {\pard \posx1638 \posy293 \phpg \pvpg \absh-372 \absw4615 \dxfrtext200 \fs30 \f0 \i \pard \s2 \posx1638 \posy293 \phpg \pvpg \absh-372 \absw4615 \dxfrtext200 \li50 \ri50 \sl-319 \tx50 \tqr \tx4564 Faster and Friendlier Disk System\par 
}\sect \sectd \linex0 \linemod0 \sbknone \lndscpsxn \marglsxn988 \margrsxn1482 \pard \sl-319 \tx50 \tqr \tx4564 \fs24 \f0 {\pard \posx1624 \posy709 \phpg \pvpg \absh-9172 \absw7354 \dxfrtext200 \fs10 \f0 \fs25 \f1 \plain \fs25 \f1 \lang1033 \pard \s3 \posx1624 \posy709 \phpg \pvpg \absh-9172 \absw7354 \dxfrtext200 \qj \li66 \ri50 \sl-258 \tx66 \tqr \tx7303 The last really important enhancement that the Commodore 128 provides is improved disk storage capabilities. Not only can the C128 operate using the Commodore 64's 1541 single\_sided disk drive, it can also work with its own special "super intelligent" double\_sided disk systems\'97the 1571 (single drive) and the 1572 (dual drive).\par 
\fs10 \f0 \fs25 \f1 \pard \s4 \posx1624 \posy709 \phpg \pvpg \absh-9172 \absw7354 \dxfrtext200 \qj \li53 \fi439 \ri53 \sl-261 \tx53 \tx492 \tqr \tx7300 You can choose to use the C128 with one or more of the older 1541 disk drives as they are totally compatible. However, doing so does not provide you with the disk storage improvements that the C128 is capable of\'97more storage capacity per diskette and vastly improved data transfer rates. The advantage of the new disk system's increased friendliness is a function of BASIC 7.0, not the drives, so the C128's friendlier disk com\-mands hold true even for the 1541s.\par 
\fs10 \f0 \fs25 \f1 \pard \s5 \posx1624 \posy709 \phpg \pvpg \absh-9172 \absw7354 \dxfrtext200 \qj \li50 \fi439 \ri65 \sl-260 \tx50 \tx489 \tqr \tx7288 The real improvement in disk storage capabilities happens when the C128 is used with the 1571 or 1572 disk drives. When these drives are used, the C128 has immediate access to twice the storage space per disk of the 1541s. For example, the 1541 could store 170K of programs and data per disk, but the 1571 and 1572 can store 340K per disk. Of course, the total disk storage space available to the C128 doubles to 680K when you consider both disks in a dual drive 1572. In addition to storage space improvements, these new drives are also fast. The 1541, with its typical data transfer rate of about 320 characters per second, is extremely slow in operation and, unfortunately, doesn't get any faster when it is connected to a C128. On the other hand, the new drives, when used in the C128 mode, operate at up to 5200 characters per second. High data transfer rates like this make the C128 a viable machine for even the most disk\-intensive business application.\par 
\fs10 \f0 \fs25 \f1 \pard \s6 \posx1624 \posy709 \phpg \pvpg \absh-9172 \absw7354 \dxfrtext200 \qj \li52 \fi439 \ri56 \sl-261 \tx52 \tx491 \tqr \tx7297 Finally, Commodore has provided the C128 with an easy\_to\_use set of DOS commands. The DOS commands are the same as those found in the late model Commodore PET and CBM machines (BASIC 4.0). DOS calls are used to perform a wide assortment of dist\_related functions, including reading directories, formatting blank disks (using a command called HEADER), copying files, renaming files, or removing (scratching) files. When the 1572 dual drive is used there is even a command to copy one disk to another (BACKUP). These commands are very important to all C128 users, so we'll take a detailed look at them later in this chapter.\par 
}\pard \sl-261 \tx52 \tx491 \tqr \tx7297 \fs24 \f0 {\pard \posx1038 \posy10130 \phpg \pvpg \absh-1055 \absw7917 \dxfrtext200 \fs10 \f0 \fs33 \f2 \pard \s7 \posx1038 \posy10130 \phpg \pvpg \absh-1055 \absw7917 \dxfrtext200 \li50 \ri449 \sl-355 \tx50 \tqr \tx7467 What Equipment Do I Need to Use the C128 Mode?\par 
\fs10 \f0 \fs25 \f1 \pard \s8 \posx1038 \posy10130 \phpg \pvpg \absh-1055 \absw7917 \dxfrtext200 \qj \li650 \ri50 \sl-260 \tx650 \tqr \tx7866 As you learned in the previous chapter, the Commodore 128, with all its power and flexibility, is just the computing part of a system. You still need\par 
}\pard \sl-260 \tx650 \tqr \tx7866 \fs24 \f0 {\pard \posx11277 \posy326 \phpg \pvpg \absh-3927 \absw7352 \dxfrtext200 \fs10 \f0 \fs25 \f1 \pard \s9 \posx11277 \posy326 \phpg \pvpg \absh-3927 \absw7352 \dxfrtext200 \qj \li50 \ri70 \sl-257 \tx50 \tqr \tx7281 a monitor of some sort so you can view the messages it wants you to see, and you will probably want some form of external mass\_storage device to hold your programs and data. Major C128 system accessories also include a printer for a permanent paper copy of important computing activities, and a modem to allow you to connect your C128 to other computers via the telephone. Other system add\_ons would really depend on the require\-ments of your application.\par 
\fs10 \f0 \fs25 \f1 \pard \s10 \posx11277 \posy326 \phpg \pvpg \absh-3927 \absw7352 \dxfrtext200 \qj \li58 \fi439 \ri50 \sl-262 \tx58 \tx497 \tqr \tx7301 Since the Commodore 128 is still compatible with all Commodore 64 peripheral devices, you have a very wide assortment of peripherals to choose from\'97both old and new. If you already have a complete assortment of C64 peripherals, than you can simply connect them to the C128. Of course, you won't be able to take advantage of all of the C128's features, like the 80\_column option or the increased storage ability and speed of the newer disk drives; but you will be able to do most anything you want, as long as you remain within the limitations of those C64 peripherals.\par 
}\pard \sl-262 \tx58 \tx497 \tqr \tx7301 \fs24 \f0 {\pard \posx12288 \posy4906 \phpg \pvpg \absh-312 \absw5422 \dxfrtext200 \fs10 \f0 \fs25 \f3 \b \pard \s11 \posx12288 \posy4906 \phpg \pvpg \absh-312 \absw5422 \dxfrtext200 \qc \sl-261 \tx50 \tqr \tx5371 Figure 3\_3. Recommended Commodore 128 System\par 
}\pard \qc \sl-261 \tx50 \tqr \tx5371 \fs24 \f0 \page \lndscpsxn {\stylesheet {\snext0 Normal;}
{\s2 \tx57 \tqr \tx7280 \qj \li10520 \ri50 \sl252 \sbasedon0 \snext2 OmniPage #1793;}
{\s3 \tx50 \tx487 \tqr \tx7277 \qj \li10527 \fi437 \ri53 \sl259 \sbasedon0 \snext3 OmniPage #1794;}
{\s4 \tx64 \tx501 \tqr \tx7275 \qj \li10513 \fi437 \ri55 \sl261 \sbasedon0 \snext4 OmniPage #1795;}
{\s5 \tx50 \tqr \tx3146 \ql \sl348 \li10527 \ri50 \sbasedon0 \snext5 OmniPage #1796;}
{\s6 \tqr \tx5644 \ql \sl253 \li10527 \ri50 \sbasedon0 \snext6 OmniPage #1797;}
{\s7 \tx100 \tx878 \tx1326 \tx1446 \tx1821 \tx2120 \tqr \tx2298 \ql \sl44 \li10527 \ri50 \sbasedon0 \snext7 OmniPage #1798;}
{\s8 \tx5642 \tqr \tx7291 \qj \li10527 \fi5592 \ri50 \sl259 \sbasedon0 \snext8 OmniPage #1799;}
{\s9 \tx50 \tqr \tx4452 \ql \sl304 \li10527 \ri50 \sbasedon0 \snext9 OmniPage #1800;}
{\s10 \tqr \tx7251 \qj \li10527 \ri50 \sl265 \sbasedon0 \snext10 OmniPage #1801;}
{\s11 \tqr \tx919 \ql \sl253 \li10527 \ri50 \sbasedon0 \snext11 OmniPage #1802;}
{\s12 \tqr \tx7273 \qj \li10527 \ri50 \sl259 \sbasedon0 \snext12 OmniPage #1803;}
{\s13 \tqr \tx3054 \ql \sl253 \li10527 \ri50 \sbasedon0 \snext13 OmniPage #1804;}
{\s14 \tqr \tx7284 \qj \li10527 \ri50 \sl257 \sbasedon0 \snext14 OmniPage #1805;}
{\s15 \tqr \tx1958 \ql \sl253 \li10527 \ri50 \sbasedon0 \snext15 OmniPage #1806;}
{\s16 \tqr \tx7301 \qj \li10527 \ri50 \sl259 \sbasedon0 \snext16 OmniPage #1807;}
{\s17 \tqr \tx3739 \ql \sl253 \li10527 \ri50 \sbasedon0 \snext17 OmniPage #1808;}
{\s18 \tqr \tx7273 \qj \li10527 \ri50 \sl261 \sbasedon0 \snext18 OmniPage #1809;}
}\par {\pard \posx1644 \posy217 \phpg \pvpg \absh-2894 \absw7331 \dxfrtext200 \fs24 \f0 \plain \lang1033 \pard \s2 \posx1644 \posy217 \phpg \pvpg \absh-2894 \absw7331 \dxfrtext200 \qj \li57 \ri50 \sl-252 \tx57 \tqr \tx7280 The best way to take full advantage of your C128's capabilities is to use the system components that were designed specifically for it. Figure 3\_3 shows the C128 system configuration that we would recommend for gen\-eral use.\par 
\fs10 \f0 \fs24 \f0 \pard \s3 \posx1644 \posy217 \phpg \pvpg \absh-2894 \absw7331 \dxfrtext200 \qj \li50 \fi437 \ri53 \sl-259 \tx50 \tx487 \tqr \tx7277 If your computer needs are less complicated\'97for instance, if you simply want to experiment with BASIC \fs23 \f1 7.0 \fs24 \f0 and 40\_column graphics\'97 then you might want to consider starting with a color television as a monitor and a Datasette as a mass storage device.\par 
\fs10 \f0 \fs24 \f0 \pard \s4 \posx1644 \posy217 \phpg \pvpg \absh-2894 \absw7331 \dxfrtext200 \qj \li64 \fi437 \ri55 \sl-261 \tx64 \tx501 \tqr \tx7275 Now that you know the major improvements the Commodore 128 has made over the Commodore 64, let's examine two of these improvements in more detail: BASIC \fs23 \f1 7.0 \fs24 \f0 and the new DOS.\par 
}\sect \sectd \linex0 \linemod0 \sbknone \lndscpsxn \marglsxn1009 \margrsxn1524 \pard \sl-261 \tx64 \tx501 \tqr \tx7275 {\pard \posx1059 \posy3372 \phpg \pvpg \absh-420 \absw3197 \dxfrtext200 \fs10 \f0 \fs32 \f2 \pard \s5 \posx1059 \posy3372 \phpg \pvpg \absh-420 \absw3197 \dxfrtext200 \li50 \ri50 \sl-348 \tx50 \tqr \tx3146 All About BASIC 7.0\par 
}\pard \sl-348 \tx50 \tqr \tx3146 \fs24 \f0 {\pard \posx1658 \posy3836 \phpg \pvpg \absh-319 \absw5695 \dxfrtext200 \fs10 \f0 \fs24 \f0 \pard \s6 \posx1658 \posy3836 \phpg \pvpg \absh-319 \absw5695 \dxfrtext200 \li50 \ri50 \sl-253 \tx50 \tqr \tx5644 In this section we'll describe the new BASIC \fs23 \f1 7.0 \fs24 \f0 that\par 
}\pard \sl-253 \tx50 \tqr \tx5644 {\pard \posx1659 \posy4200 \phpg \pvpg \absh-44 \absw2349 \dxfrtext200 \fs10 \f0 \fs24 \f0 \fs3 \f3 \pard \s7 \posx1659 \posy4200 \phpg \pvpg \absh-44 \absw2349 \dxfrtext200 \li50 \ri50 \sl-44 \tx50 \tx100 \tx878 \tx1326 \tx1446 \tx1821 \tx2120 \tqr \tx2298 \tab #_\tab 1\tab _\tab A A\tab ~]\tab .\par 
}\pard \sl-44 \tx50 \tx100 \tx878 \tx1326 \tx1446 \tx1821 \tx2120 \tqr \tx2298 \fs24 \f0 {\pard \posx1632 \posy3853 \phpg \pvpg \absh-3435 \absw7342 \dxfrtext200 \fs24 \f0 \fs24 \f0 \pard \s8 \posx1632 \posy3853 \phpg \pvpg \absh-3435 \absw7342 \dxfrtext200 \qj \li50 \fi5592 \ri50 \sl-259 \tx50 \tx5642 \tqr \tx7291 is built into the Commodore 128. This section is presented in three parts. The first part examines the most general facts about BASIC \fs23 \f1 7.0, \fs24 \f0 giving you a bird's\_eye view of the language. The second part explains and lists the BASIC statements and commands that are common to both the C64 (BASIC 2.0) and C128 (BASIC \fs23 \f1 7.0) \fs24 \f0 modes of the Commodore 128. This way you'll get a feel for the available statements if you wanted to write programs that would run in both the C64 and C128 modes. The third part lists and explains the statements unique to the C128 mode. If you are only interested in BASIC \fs23 \f1 7.0 \fs24 \f0 enhancements then you can read the third section directly, but if you want to know what BASIC \fs23 \f1 7.0 is \fs24 \f0 like to program with, then you should read the first section as well. Chapters 6 and \fs23 \f1 7 \fs24 \f0 explore the graphics and sound statements of BASIC \fs23 \f1 7.0.\par 
}\pard \sl-259 \tx50 \tx5642 \tqr \tx7291 \fs24 \f0 {\pard \posx1638 \posy7606 \phpg \pvpg \absh-354 \absw4503 \dxfrtext200 \fs10 \f0 \fs29 \f4 \i \pard \s9 \posx1638 \posy7606 \phpg \pvpg \absh-354 \absw4503 \dxfrtext200 \li50 \ri50 \sl-304 \tx50 \tqr \tx4452 Important Facts About BASIC 7.0\par 
}\pard \sl-304 \tx50 \tqr \tx4452 \fs24 \f0 {\pard \posx1643 \posy8013 \phpg \pvpg \absh-580 \absw7302 \dxfrtext200 \fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s10 \posx1643 \posy8013 \phpg \pvpg \absh-580 \absw7302 \dxfrtext200 \qj \li50 \ri50 \sl-265 \tx50 \tqr \tx7251 Let's examine the major features of the new BASIC 7.0 that come with the Commodore 128.\par 
}\pard \sl-265 \tx50 \tqr \tx7251 {\pard \posx1643 \posy8795 \phpg \pvpg \absh-315 \absw970 \dxfrtext200 \fs10 \f0 \fs24 \f0 \b \pard \s11 \posx1643 \posy8795 \phpg \pvpg \absh-315 \absw970 \dxfrtext200 \li50 \ri50 \sl-253 \tx50 \tqr \tx919 Modes\par 
}\pard \sl-253 \tx50 \tqr \tx919 {\pard \posx1636 \posy9183 \phpg \pvpg \absh-1354 \absw7324 \dxfrtext200 \fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s12 \posx1636 \posy9183 \phpg \pvpg \absh-1354 \absw7324 \dxfrtext200 \qj \li50 \ri50 \sl-259 \tx50 \tqr \tx7273 When you are in the C64 mode you are actually using BASIC 2.0; the same BASIC found in the Commodore 64. Therefore BASIC programs are written in exactly the same manner as they would be on a C64. When you are in the C128 mode, however, BASIC 2.0 is replaced with BASIC 7.0 and you have virtually an entirely new programming environment to work in.\par 
}\pard \sl-259 \tx50 \tqr \tx7273 {\pard \posx11228 \posy275 \phpg \pvpg \absh-315 \absw3105 \dxfrtext200 \fs10 \f0 \fs24 \f0 \b \pard \s13 \posx11228 \posy275 \phpg \pvpg \absh-315 \absw3105 \dxfrtext200 \li50 \ri50 \sl-253 \tx50 \tqr \tx3054 Modified Microsoft BASIC\par 
}\pard \sl-253 \tx50 \tqr \tx3054 {\pard \posx11216 \posy658 \phpg \pvpg \absh-3410 \absw7335 \dxfrtext200 \fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s14 \posx11216 \posy658 \phpg \pvpg \absh-3410 \absw7335 \dxfrtext200 \qj \li50 \ri50 \sl-257 \tx50 \tqr \tx7284 Commodore 128 BASIC is a modified version of Microsoft BASIC, com\-monly referred to in the CP/M universe as MBASIC (see description of MBASIC in Chapter 5, CP/M Mode). The new BASIC 7.0 is based on statements from the older C64 BASIC 2.0. Added to these are disk state\-ments and commands from the Commodore PET/CBM BASIC 4.0 (the CBM line of business microcomputers). In addition there is a large number of new statements for controlling sound, graphics, windows, sprites, and peripherals. Microsoft BASIC was the first BASIC made available for the 8080, Z80, and 6502 microprocessors and enjoys a wide following. The new BASIC 7.0 has included several new statements that tend to com\-pletely remove several C64 BASIC 2.0 weaknesses, chiefly in the area of program control and looping. Also added are \fs24 \f0 \b new statements for \fs24 \f0 \plain \lang1033 graphics, sound, windowing, external I/O devices, and keyboard access.\par 
}\pard \sl-257 \tx50 \tqr \tx7284 {\pard \posx11247 \posy4274 \phpg \pvpg \absh-315 \absw2009 \dxfrtext200 \fs10 \f0 \fs24 \f0 \b \pard \s15 \posx11247 \posy4274 \phpg \pvpg \absh-315 \absw2009 \dxfrtext200 \li50 \ri50 \sl-253 \tx50 \tqr \tx1958 Onscreen Editor\par 
}\pard \sl-253 \tx50 \tqr \tx1958 {\pard \posx11235 \posy4652 \phpg \pvpg \absh-3694 \absw7352 \dxfrtext200 \fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s16 \posx11235 \posy4652 \phpg \pvpg \absh-3694 \absw7352 \dxfrtext200 \qj \li50 \ri50 \sl-259 \tx50 \tqr \tx7301 The new BASIC 7.0 is built around a cursor\_key\_controlled onscreen editor. This is much like the BASIC editor of the IBM PC, where to alter or edit a line of the program, you move the cursor to the line you wish to change, type the correct information, and press \fs18 \f0 I \fs18 \f0 \ul Return \fs18 \f0 \plain \fs18 \lang1033 I \fs24 \f0 to capture the change. When using the 40\_column screen mode, BASIC 7.0 allows the same keyboard character and graphics set combinations as on the C64. Therefore you still can't display upper\_ and lower\_case letters with both sets of keyboard graphics. On the other hand, when BASIC 7.0 is used to program for the 80\_column screen mode, you can mix and match all available text and graphic symbols. Also when you enter a program in BASIC 7.0, putting spaces between keywords, variables, operators and such is strictly optional. Adding spaces will clarify the meaning of state\-ments, and spaces consume very little additional memory \fs24 \f0 \b space, \fs24 \f0 \plain \lang1033 so they can be used generously.\par 
}\pard \sl-259 \tx50 \tqr \tx7301 {\pard \posx11272 \posy8552 \phpg \pvpg \absh-315 \absw3790 \dxfrtext200 \fs10 \f0 \fs24 \f0 \b \pard \s17 \posx11272 \posy8552 \phpg \pvpg \absh-315 \absw3790 \dxfrtext200 \li50 \ri50 \sl-253 \tx50 \tqr \tx3739 Graphics and PRINT Statements\par 
}\pard \sl-253 \tx50 \tqr \tx3739 {\pard \posx11258 \posy8936 \phpg \pvpg \absh-1359 \absw7324 \dxfrtext200 \fs10 \f0 \fs24 \f0 \plain \lang1033 \pard \s18 \posx11258 \posy8936 \phpg \pvpg \absh-1359 \absw7324 \dxfrtext200 \qj \li50 \ri50 \sl-261 \tx50 \tqr \tx7273 Any characters, any colors, and any cursor activity can go inside of quo\-tation marks. That is, you can use any key on the keyboard directly in PRINT statements. Thus you can insert dozens of cursor direction keys, graphics symbols, and colors in PRINT statements, and thereby create complex images on the screen.\par 
}\pard \sl-261 \tx50 \tqr \tx7273 \page \lndscpsxn {\stylesheet {\snext0 Normal;}
{\s2 \tx50 \tqr \tx5150 \ql \sl253 \li10527 \ri50 \sbasedon0 \snext2 OmniPage #2049;}
{\s3 \tx58 \tqr \tx7298 \qj \li10519 \ri50 \sl258 \sbasedon0 \snext3 OmniPage #2050;}
{\s4 \tx50 \tx487 \tqr \tx7277 \qj \li10527 \fi437 \ri71 \sl266 \sbasedon0 \snext4 OmniPage #2051;}
{\s5 \tx50 \tqr \tx3634 \ql \sl189 \li10527 \ri50 \sbasedon0 \snext5 OmniPage #2052;}
{\s6 \tx66 \tqr \tx7271 \qj \li10511 \ri56 \sl265 \sbasedon0 \snext6 OmniPage #2053;}
{\s7 \tx50 \tx491 \tqr \tx7277 \qj \li10527 \fi441 \ri50 \sl262 \sbasedon0 \snext7 OmniPage #2054;}
{\s8 \tx50 \tqr \tx2746 \ql \sl247 \li10527 \ri50 \sbasedon0 \snext8 OmniPage #2055;}
{\s9 \tqr \tx7284 \qj \li10527 \ri50 \sl261 \sbasedon0 \snext9 OmniPage #2056;}
{\s10 \tqr \tx6657 \qc \sl253 \sbasedon0 \snext10 OmniPage #2057;}
{\s11 \tx100 \tx828 \tx2727 \tqr \tx2412 \ql \sl253 \li10527 \ri50 \sbasedon0 \snext11 OmniPage #2058;}
{\s12 \tqr \tx953 \ql \sl253 \li10527 \ri50 \sbasedon0 \snext12 OmniPage #2059;}
{\s13 \tx100 \tx784 \tx2683 \tqr \tx6821 \ql \sl240 \li10527 \ri50 \sbasedon0 \snext13 OmniPage #2060;}
{\s14 \tqr \tx3913 \ql \sl276 \li10527 \ri50 \sbasedon0 \snext14 OmniPage #2061;}
{\s15 \tqr \tx7275 \qj \li10527 \ri53 \sl257 \sbasedon0 \snext15 OmniPage #2062;}
{\s16 \tx487 \tqr \tx7259 \qj \li10527 \fi437 \ri69 \sl262 \sbasedon0 \snext16 OmniPage #2063;}
{\s17 \tx53 \tx490 \tqr \tx7275 \qj \li10524 \fi437 \ri53 \sl258 \sbasedon0 \snext17 OmniPage #2064;}
{\s18 \tx66 \tx503 \tqr \tx7278 \qj \li10511 \fi437 \ri50 \sl264 \sbasedon0 \snext18 OmniPage #2065;}
{\s19 \tx50 \tqr \tx4027 \ql \sl219 \li10527 \ri50 \sbasedon0 \snext19 OmniPage #2066;}
{\s20 \tx59 \tx496 \tqr \tx7272 \qj \li10518 \fi437 \ri56 \sl260 \sbasedon0 \snext20 OmniPage #2067;}
{\s21 \tx50 \tx487 \tqr \tx7278 \qj \li10527 \fi437 \ri50 \sl260 \sbasedon0 \snext21 OmniPage #2068;}
{\s22 \tx50 \tqr \tx7278 \qj \li10527 \ri50 \sl258 \sbasedon0 \snext22 OmniPage #2069;}
}\par {\pard \posx1727 \posy141 \phpg \pvpg \absh-315 \absw5201 \dxfrtext200 \fs24 \f0 \b \pard \s2 \posx1727 \posy141 \phpg \pvpg \absh-315 \absw5201 \dxfrtext200 \li50 \ri50 \sl-253 \tx50 \tqr \tx5150 Progrananable Function Keys and Other Keys\par 
}\sect \sectd \linex0 \linemod0 \sbknone \lndscpsxn \marglsxn1058 \margrsxn1551 \pard \sl-253 \tx50 \tqr \tx5150 {\pard \posx1709 \posy509 \phpg \pvpg \absh-2130 \absw7349 \dxfrtext200 \fs10 \f0 \fs24 \f1 \plain \f1 \lang1033 \pard \s3 \posx1709 \posy509 \phpg \pvpg \absh-2130 \absw7349 \dxfrtext200 \qj \li58 \ri50 \sl-258 \tx58 \tqr \tx7298 There are four function keys, and each key can perform two functions. The keys are programmable from BASIC and thus can be used by your program for any function you want. When you first start BASIC the func\-tion keys are predefined,as shown in Table 3\_3. F1, F3, F5, and F7 functions are accessed directly by pressing the appropriate key. You use the \fs16 \f2 I \fs16 \f3 \ul Shift I \fs24 \f1 \plain \f1 \lang1033 key to access the F2, F4, F6, and F8 keys.\par 
\fs10 \f0 \fs24 \f1 \pard \s4 \posx1709 \posy509 \phpg \pvpg \absh-2130 \absw7349 \dxfrtext200 \qj \li50 \fi437 \ri71 \sl-266 \tx50 \tx487 \tqr \tx7277 You program a function key with the KEY command to stand for some other \fs23 \f4 BASIC \fs24 \f1 sequence or string. For example:\par 
}\pard \sl-266 \tx50 \tx487 \tqr \tx7277 \fs24 \f0 {\pard \posx1108 \posy2816 \phpg \pvpg \absh-261 \absw3685 \dxfrtext200 \fs10 \f0 \fs19 \f0 \pard \s5 \posx1108 \posy2816 \phpg \pvpg \absh-261 \absw3685 \dxfrtext200 \li50 \ri50 \sl-189 \tx50 \tqr \tx3634 KEY 7, MORPHIC O" + C~$ (13)\par 
}\pard \sl-189 \tx50 \tqr \tx3634 \fs24 \f0 {\pard \posx1705 \posy3339 \phpg \pvpg \absh-1364 \absw7328 \dxfrtext200 \fs24 \f1 \fs24 \f1 \pard \s6 \posx1705 \posy3339 \phpg \pvpg \absh-1364 \absw7328 \dxfrtext200 \qj \li66 \ri56 \sl-265 \tx66 \tqr \tx7271 would make the command GRAPHIC 0 followed by a carriage return occur when ~ was pressed.\par 
\fs10 \f0 \fs23 \f4 \pard \s7 \posx1705 \posy3339 \phpg \pvpg \absh-1364 \absw7328 \dxfrtext200 \qj \li50 \fi441 \ri50 \sl-262 \tx50 \tx491 \tqr \tx7277 BASIC \fs24 \f1 also responds to the I \fs16 \f3 \ul Heip 1, \fs16 \f2 \plain \fs16 \f2 \lang1033 I \fs16 \f3 \ul No Scroll 1, \fs16 \f2 \plain \fs16 \f2 \lang1033 I \fs16 \f3 \ul Caps Lock \fs16 \f2 \plain \fs16 \f2 \lang1033 1, 9~, 1 \fs16 \f3 \ul 4\'b0/~\'b0 Disp \fs16 \f2 \plain \fs16 \f2 \lang1033 1, \fs24 \f1 Am, and \fs24 \f0 \ul I \fs16 \f3 Line Feed I \fs24 \f1 \plain \f1 \lang1033 keys. Each of these keys has its own initial definition and this definition can be changed in \fs23 \f4 BASIC.\par 
}\pard \sl-262 \tx50 \tx491 \tqr \tx7277 \fs24 \f0 {\pard \posx1716 \posy4910 \phpg \pvpg \absh-309 \absw2797 \dxfrtext200 \fs10 \f0 \fs23 \f4 \pard \s8 \posx1716 \posy4910 \phpg \pvpg \absh-309 \absw2797 \dxfrtext200 \li50 \ri50 \sl-247 \tx50 \tqr \tx2746 Memory and \fs24 \f0 \b BASIC \fs23 \f4 \plain \fs23 \f4 \lang1033 7.0\par 
}\pard \sl-247 \tx50 \tqr \tx2746 \fs24 \f0 {\pard \posx1698 \posy5288 \phpg \pvpg \absh-1884 \absw7335 \dxfrtext200 \fs10 \f0 \fs23 \f4 \pard \s9 \posx1698 \posy5288 \phpg \pvpg \absh-1884 \absw7335 \dxfrtext200 \qj \li50 \ri50 \sl-261 \tx50 \tqr \tx7284 BASIC 7.0 \fs24 \f1 has access to all 128K of the Commodore 128's total RAM space. This 128K is split into two banks. The lower 64K bank is for the text portion of \fs23 \f4 BASIC \fs24 \f1 programs: the actual statements that make up the program. The upper 64K bank is used strictly as work space. This is where \fs23 \f4 BASIC will \fs24 \f1 keep the program's variables, arrays, and strings. The \fs23 \f4 BASIC \fs24 \f1 interpreter occupies 48K of ROM. Since arrays, strings, and vari\-ables are kept in a separate area of memory, this configuration allows the\par 
}\pard \sl-261 \tx50 \tqr \tx7284 \fs24 \f0 {\pard \posx2055 \posy7705 \phpg \pvpg \absh-315 \absw6708 \dxfrtext200 \fs10 \f0 \fs24 \f0 \b \pard \s10 \posx2055 \posy7705 \phpg \pvpg \absh-315 \absw6708 \dxfrtext200 \qc \sl-253 \tx50 \tqr \tx6657 Table 3\_~. Predefined Functions Keys in BASIC 7.0 (C128 Mode)\par 
}\pard \sl-253 \tx50 \tqr \tx6657 {\pard \posx1961 \posy8256 \phpg \pvpg \absh-315 \absw2463 \dxfrtext200 \fs10 \f0 \fs24 \f0 \fs24 \f1 \plain \f1 \lang1033 \pard \s11 \posx1961 \posy8256 \phpg \pvpg \absh-315 \absw2463 \dxfrtext200 \li50 \ri50 \sl-253 \tx50 \tx100 \tx828 \tx2727 \tqr \tx2412 \tab Key\fs20 \f0 \i \tab BASIC \fs24 \f1 \plain \f1 \lang1033 Keyword\par 
}\pard \sl-253 \tx50 \tx100 \tx828 \tx2727 \tqr \tx2412 \fs24 \f0 {\pard \posx6287 \posy8268 \phpg \pvpg \absh-315 \absw1004 \dxfrtext200 \fs10 \f0 \fs24 \f1 \pard \s12 \posx6287 \posy8268 \phpg \pvpg \absh-315 \absw1004 \dxfrtext200 \li50 \ri50 \sl-253 \tx50 \tqr \tx953 Purpose\par 
}\pard \sl-253 \tx50 \tqr \tx953 \fs24 \f0 {\pard \posx2005 \posy8738 \phpg \pvpg \absh-1999 \absw6872 \dxfrtext200 \fs10 \f0 \fs24 \f1 \pard \s13 \posx2005 \posy8738 \phpg \pvpg \absh-1999 \absw6872 \dxfrtext200 \li50 \ri50 \tx50 \tx100 \tx784 \tx2683 \tqr \tx6821 \tab F1\tab GRAPHIC\tab Sets graphic mode you enter\par 
\pard \s13 \posx2005 \posy8738 \phpg \pvpg \absh-1999 \absw6872 \dxfrtext200 \li50 \ri50 \tx50 \tx100 \tx784 \tx2683 \tqr \tx6821 \tab F2\tab DLOAD"\tab Loads a filename you type\par 
\pard \s13 \posx2005 \posy8738 \phpg \pvpg \absh-1999 \absw6872 \dxfrtext200 \li50 \ri50 \tx50 \tx100 \tx784 \tx2683 \tqr \tx6821 \tab F3\tab DIRECTORY\tab Gives a directory of the disk\par 
\pard \s13 \posx2005 \posy8738 \phpg \pvpg \absh-1999 \absw6872 \dxfrtext200 \li50 \ri50 \tx50 \tx100 \tx784 \tx2683 \tqr \tx6821 \tab F4\tab SCNCLR\tab Clears the screen to current background color\par 
\pard \s13 \posx2005 \posy8738 \phpg \pvpg \absh-1999 \absw6872 \dxfrtext200 \li50 \ri50 \tx50 \tx100 \tx784 \tx2683 \tqr \tx6821 \tab F5\tab DSAVE"\tab Saves a filename you type\par 
\pard \s13 \posx2005 \posy8738 \phpg \pvpg \absh-1999 \absw6872 \dxfrtext200 \li50 \ri50 \tx50 \tx100 \tx784 \tx2683 \tqr \tx6821 \tab F6\tab RUN\tab Runs the program in memory or one on disk\par 
\pard \s13 \posx2005 \posy8738 \phpg \pvpg \absh-1999 \absw6872 \dxfrtext200 \li50 \ri50 \tx50 \tx100 \tx784 \tx2683 \tqr \tx6821 \tab F7\tab LIST\tab Lists the program in memory\par 
\pard \s13 \posx2005 \posy8738 \phpg \pvpg \absh-1999 \absw6872 \dxfrtext200 \li50 \ri50 \tx50 \tx100 \tx784 \tx2683 \tqr \tx6821 \tab F8\tab MONITOR\tab Enters the machine language monitor\par 
}\pard \tx50 \tx100 \tx784 \tx2683 \tqr \tx6821 \fs24 \f0 {\pard \posx11221 \posy1457 \phpg \pvpg \absh-337 \absw3964 \dxfrtext200 \fs10 \f0 \fs25 \f0 \b \pard \s14 \posx11221 \posy1457 \phpg \pvpg \absh-337 \absw3964 \dxfrtext200 \li50 \ri50 \sl-276 \tx50 \tqr \tx3913 Variables and Limits of BASIC \fs24 \f0 7.0\par 
}\pard \sl-276 \tx50 \tqr \tx3913 {\pard \posx11213 \posy1855 \phpg \pvpg \absh-4718 \absw7329 \dxfrtext200 \fs10 \f0 \fs24 \f1 \plain \f1 \lang1033 \pard \s15 \posx11213 \posy1855 \phpg \pvpg \absh-4718 \absw7329 \dxfrtext200 \qj \li50 \ri53 \sl-257 \tx50 \tqr \tx7275 BASIC 7.0 allows three kinds of variables: normal numeric (floating point), integer, and string variables. A floating point variable is assumed as a default (that is, BASIC will assume you mean floating\_point unless you tell it otherwise). Floating point variables can have up to nine digits of significance and can range in size from ten to the \_38 power to ten to the + 38 power.\par 
\fs10 \f0 \fs24 \f1 \pard \s16 \posx11213 \posy1855 \phpg \pvpg \absh-4718 \absw7329 \dxfrtext200 \qj \li50 \fi437 \ri69 \sl-262 \tx50 \tx487 \tqr \tx7259 In BASIC 7.0, integer variables (whole numbers without fractions) range between \_32768 and +32767 and are indicated in a program by appending the percent symbol (%) to the end of a variable name.\par 
\fs10 \f0 \fs24 \f1 \pard \s17 \posx11213 \posy1855 \phpg \pvpg \absh-4718 \absw7329 \dxfrtext200 \qj \li53 \fi437 \ri53 \sl-258 \tx53 \tx490 \tqr \tx7275 String variables, used to hold symbolic data like text and graphics, can be up to 255 characters long and are indicated by a $ sign appended to the end of the variable name.\par 
\fs10 \f0 \fs24 \f1 \pard \s18 \posx11213 \posy1855 \phpg \pvpg \absh-4718 \absw7329 \dxfrtext200 \qj \li66 \fi437 \ri50 \sl-264 \tx66 \tx503 \tqr \tx7278 A variable name in BASIC 7.0 can be as long as desired, but only the first two characters are significant. In other words, UNCOLA and UNLIM\-ITED are legal variables, but are considered by BASIC to refer to the same variable. The first character has to be a letter but the second character may be a letter or a number. Graphic symbols are not allowed in variable names. Here are some legal BASIC 7.0 variables:\par 
}\pard \sl-264 \tx66 \tx503 \tqr \tx7278 \fs24 \f0 {\pard \posx10659 \posy6755 \phpg \pvpg \absh-753 \absw4078 \dxfrtext200 \fs10 \f0 \fs19 \f0 \pard \s19 \posx10659 \posy6755 \phpg \pvpg \absh-753 \absw4078 \dxfrtext200 \li50 \ri50 \sl-219 \tx50 \tqr \tx4027 FOOBAR \fs24 \f1 a f loading point variable\par 
\fs19 \f0 \pard \s19 \posx10659 \posy6755 \phpg \pvpg \absh-753 \absw4078 \dxfrtext200 \li50 \ri50 \sl-219 \tx50 \tqr \tx4027 NAME$ \fs24 \f1 a string variable\par 
\fs19 \f0 \pard \s19 \posx10659 \posy6755 \phpg \pvpg \absh-753 \absw4078 \dxfrtext200 \li50 \ri50 \sl-219 \tx50 \tqr \tx4027 P123% \fs24 \f1 an integer variable\par 
}\pard \sl-219 \tx50 \tqr \tx4027 \fs24 \f0 {\pard \posx11231 \posy7724 \phpg \pvpg \absh-3181 \absw7329 \dxfrtext200 \fs10 \f0 \fs24 \f1 \pard \s20 \posx11231 \posy7724 \phpg \pvpg \absh-3181 \absw7329 \dxfrtext200 \qj \li59 \fi437 \ri56 \sl-260 \tx59 \tx496 \tqr \tx7272 BASIC arrays are defined by the DIM statement. The number of di\-mensions is limited only by the length of the program line. Arrays follow the same name rules as regular variables do. Besides BASIC keywords, there are eight variable names that are reserved to BASIC 7.0 and can't be used in your programs. These are listed in Table 3\_4.\par 
\fs10 \f0 \fs24 \f1 \pard \s21 \posx11231 \posy7724 \phpg \pvpg \absh-3181 \absw7329 \dxfrtext200 \qj \li50 \fi437 \ri50 \sl-260 \tx50 \tx487 \tqr \tx7278 The Commodore 128 has a built\_in 24\_hour clock function that is automatically updated every 1/60th of a second. It is both set and read using the reserved variable TI$. This clock is not a separate real\_time clock operation, but instead a software jiffy clock just like the one used in the C64. It is most appropriate for programming operations where short term accuracy is required as it does lose count during certain system operations (for example, when the disk drive is being used). Since there\par 
}\pard \sl-260 \tx50 \tx487 \tqr \tx7278 \fs24 \f0 {\pard \posx11203 \posy190 \phpg \pvpg \absh-1090 \absw7329 \dxfrtext200 \fs10 \f0 \fs24 \f1 \pard \s22 \posx11203 \posy190 \phpg \pvpg \absh-1090 \absw7329 \dxfrtext200 \qj \li50 \ri50 \sl-258 \tx50 \tqr \tx7278 text of a BASIC progam to occupy a full 64K regardless of the length of strings or arrays. This means a 64K program on the C128 is actually equivalent to a much larger program than on the C64; thus longer, more sophisticated programs are possible.\par 
}\pard \sl-258 \tx50 \tqr \tx7278 \fs24 \f0 \page \lndscpsxn {\stylesheet {\snext0 Normal;}
{\s2 \tx64 \tqr \tx7271 \qj \li10513 \ri50 \sl255 \sbasedon0 \snext2 OmniPage #2305;}
{\s3 \tx50 \tx488 \tqr \tx7269 \qj \li10527 \fi438 \ri52 \sl257 \sbasedon0 \snext3 OmniPage #2306;}
{\s4 \tx50 \tqr \tx1631 \ql \sl247 \li10527 \ri50 \sbasedon0 \snext4 OmniPage #2307;}
{\s5 \tqr \tx7274 \qj \li10527 \ri50 \sl261 \sbasedon0 \snext5 OmniPage #2308;}
{\s6 \tqr \tx4289 \ql \sl304 \li10527 \ri50 \sbasedon0 \snext6 OmniPage #2309;}
{\s7 \tqr \tx7270 \qj \li10527 \ri50 \sl262 \sbasedon0 \snext7 OmniPage #2310;}
{\s8 \tqr \tx2964 \ql \sl247 \li10527 \ri50 \sbasedon0 \snext8 OmniPage #2311;}
{\s9 \tqr \tx7270 \qj \li10527 \ri50 \sl262 \sbasedon0 \snext9 OmniPage #2312;}
{\s10 \tqr \tx5234 \qc \sl247 \sbasedon0 \snext10 OmniPage #2313;}
{\s11 \tqr \tx942 \ql \sl247 \li10527 \ri50 \sbasedon0 \snext11 OmniPage #2314;}
{\s12 \tqr \tx954 \ql \sl247 \li10527 \ri50 \sbasedon0 \snext12 OmniPage #2315;}
{\s13 \tqr \tx713 \ql \sl240 \li10527 \ri50 \sbasedon0 \snext13 OmniPage #2316;}
{\s14 \tqr \tx5020 \ql \sl241 \li10527 \ri50 \sbasedon0 \snext14 OmniPage #2317;}
{\s15 \tqr \tx2965 \ql \sl247 \li10527 \ri50 \sbasedon0 \snext15 OmniPage #2318;}
{\s16 \tqr \tx7250 \qj \li10527 \ri50 \sl260 \sbasedon0 \snext16 OmniPage #2319;}
{\s17 \tx63 \tqr \tx1106 \ql \sl247 \li10514 \ri6222 \sbasedon0 \snext17 OmniPage #2320;}
{\s18 \tx50 \tqr \tx7278 \qj \li10527 \ri50 \sl259 \sbasedon0 \snext18 OmniPage #2321;}
{\s19 \tqr \tx3253 \ql \sl247 \li10527 \ri50 \sbasedon0 \snext19 OmniPage #2322;}
{\s20 \tqr \tx7264 \qj \li10527 \ri50 \sl255 \sbasedon0 \snext20 OmniPage #2323;}
{\s21 \tqr \tx4632 \qc \sl247 \sbasedon0 \snext21 OmniPage #2324;}
{\s22 \tx100 \tx3491 \tqr \tx4402 \ql \sl247 \li10527 \ri50 \sbasedon0 \snext22 OmniPage #2325;}
{\s23 \tqr \tx617 \ql \sl240 \li10527 \ri50 \sbasedon0 \snext23 OmniPage #2326;}
{\s24 \tqr \tx3808 \qj \li10527 \ri50 \sl240 \sbasedon0 \snext24 OmniPage #2327;}
{\s25 \tqr \tx4646 \ql \sl247 \li10527 \ri50 \sbasedon0 \snext25 OmniPage #2328;}
{\s26 \tqr \tx1104 \ql \sl247 \li10527 \ri50 \sbasedon0 \snext26 OmniPage #2329;}
{\s27 \tqr \tx954 \ql \sl247 \li10527 \ri50 \sbasedon0 \snext27 OmniPage #2330;}
{\s28 \tqr \tx722 \qj \li10527 \ri50 \sl242 \sbasedon0 \snext28 OmniPage #2331;}
{\s29 \tqr \tx4242 \ql \sl241 \li10527 \ri50 \sbasedon0 \snext29 OmniPage #2332;}
}\par {\pard \posx1695 \posy163 \phpg \pvpg \absh-1572 \absw7322 \dxfrtext200 \fs23 \f0 \pard \s2 \posx1695 \posy163 \phpg \pvpg \absh-1572 \absw7322 \dxfrtext200 \qj \li64 \ri50 \sl-255 \tx64 \tqr \tx7271 is no battery backup, the clock must be set each time the computer is powered up.\par 
\fs10 \f0 \fs23 \f0 \pard \s3 \posx1695 \posy163 \phpg \pvpg \absh-1572 \absw7322 \dxfrtext200 \qj \li50 \fi438 \ri52 \sl-257 \tx50 \tx488 \tqr \tx7269 You can use the error trapping variables with the new TRAP command to process errors in more creative ways than BASIC normally offers. The disk channel variable DS lets you find out why the red error light on the disk drive is blinking.\par 
}\sect \sectd \linex0 \linemod0 \sbknone \lndscpsxn \marglsxn1636 \margrsxn1619 \pard \sl-257 \tx50 \tx488 \tqr \tx7269 \fs24 \f0 {\pard \posx1711 \posy1951 \phpg \pvpg \absh-305 \absw1682 \dxfrtext200 \fs10 \f0 \fs23 \f1 \b \pard \s4 \posx1711 \posy1951 \phpg \pvpg \absh-305 \absw1682 \dxfrtext200 \li50 \ri50 \sl-247 \tx50 \tqr \tx1631 Other Details\par 
}\pard \sl-247 \tx50 \tqr \tx1631 \fs24 \f0 {\pard \posx1693 \posy2338 \phpg \pvpg \absh-1341 \absw7325 \dxfrtext200 \fs10 \f0 \fs23 \f0 \plain \fs23 \lang1033 \pard \s5 \posx1693 \posy2338 \phpg \pvpg \absh-1341 \absw7325 \dxfrtext200 \qj \li50 \ri50 \sl-261 \tx50 \tqr \tx7274 BASIC 7.0 offers all the normal math operators ( + \_ * / ^ ) and has the logic operators AND, OR, and NOT. The length of a BASIC 7.0 line is limited to 160 characters (counting spaces). Thus a BASIC line can oc\-cupy two lines on an 80\_column screen and four lines on a 40\_column screen.\par 
}\pard \sl-261 \tx50 \tqr \tx7274 \fs24 \f0 {\pard \posx1696 \posy3975 \phpg \pvpg \absh-699 \absw4340 \dxfrtext200 \fs10 \f0 \fs29 \f2 \i \b \pard \s6 \posx1696 \posy3975 \phpg \pvpg \absh-699 \absw4340 \dxfrtext200 \li50 \ri50 \sl-304 \tx50 \tqr \tx4289 Overview ~ C1281C64 Common\par 
\pard \s6 \posx1696 \posy3975 \phpg \pvpg \absh-699 \absw4340 \dxfrtext200 \li50 \ri50 \sl-304 \tx50 \tqr \tx4289 BASIC Statements\par 
}\pard \sl-304 \tx50 \tqr \tx4289 \fs24 \f0 {\pard \posx1692 \posy4725 \phpg \pvpg \absh-822 \absw7321 \dxfrtext200 \fs10 \f0 \fs23 \f0 \plain \fs23 \lang1033 \plain \fs23 \lang1033 \pard \s7 \posx1692 \posy4725 \phpg \pvpg \absh-822 \absw7321 \dxfrtext200 \qj \li50 \ri50 \sl-262 \tx50 \tqr \tx7270 In this section we will briefly review the statements and commands that are common to both BASIC 2.0 and BASIC 7.0. The BASIC DOS com\-mands are covered in a separate section later in this chapter.\par 
}\pard \sl-262 \tx50 \tqr \tx7270 \fs24 \f0 {\pard \posx1696 \posy5762 \phpg \pvpg \absh-305 \absw3015 \dxfrtext200 \fs10 \f0 \fs23 \f1 \b \pard \s8 \posx1696 \posy5762 \phpg \pvpg \absh-305 \absw3015 \dxfrtext200 \li50 \ri50 \sl-247 \tx50 \tqr \tx2964 Assignments and Equates\par 
}\pard \sl-247 \tx50 \tqr \tx2964 \fs24 \f0 {\pard \posx1686 \posy6154 \phpg \pvpg \absh-822 \absw7321 \dxfrtext200 \fs10 \f0 \fs23 \f0 \plain \fs23 \lang1033 \pard \s9 \posx1686 \posy6154 \phpg \pvpg \absh-822 \absw7321 \dxfrtext200 \qj \li50 \ri50 \sl-262 \tx50 \tqr \tx7270 Both BASIC 7.0 and BASIC 2.0 offer statements for clearing all variables, defining a custom function, and for dimensioning an array. These are shown in Table 3\_5.\par 
}\pard \sl-262 \tx50 \tqr \tx7270 \fs24 \f0 {\pard \posx2751 \posy7993 \phpg \pvpg \absh-305 \absw5285 \dxfrtext200 \fs10 \f0 \fs23 \f1 \b \pard \s10 \posx2751 \posy7993 \phpg \pvpg \absh-305 \absw5285 \dxfrtext200 \qc \sl-247 \tx50 \tqr \tx5234 Table 3\_4. Reserved Variable Names in BASIC 7.0\par 
}\pard \sl-247 \tx50 \tqr \tx5234 \fs24 \f0 {\pard \posx2206 \posy8545 \phpg \pvpg \absh-297 \absw993 \dxfrtext200 \fs10 \f0 \fs23 \f0 \plain \fs23 \lang1033 \pard \s11 \posx2206 \posy8545 \phpg \pvpg \absh-297 \absw993 \dxfrtext200 \li50 \ri50 \sl-247 \tx50 \tqr \tx942 Variable\par 
}\pard \sl-247 \tx50 \tqr \tx942 \fs24 \f0 {\pard \posx5560 \posy8553 \phpg \pvpg \absh-297 \absw1005 \dxfrtext200 \fs10 \f0 \fs23 \f0 \pard \s12 \posx5560 \posy8553 \phpg \pvpg \absh-297 \absw1005 \dxfrtext200 \li50 \ri50 \sl-247 \tx50 \tqr \tx954 Purpose\par 
}\pard \sl-247 \tx50 \tqr \tx954 \fs24 \f0 {\pard \posx2330 \posy9031 \phpg \pvpg \absh-1741 \absw764 \dxfrtext200 \fs10 \f0 \fs23 \f0 \pard \s13 \posx2330 \posy9031 \phpg \pvpg \absh-1741 \absw764 \dxfrtext200 \li50 \ri50 \tx50 \tqr \tx713 ST\par 
\pard \s13 \posx2330 \posy9031 \phpg \pvpg \absh-1741 \absw764 \dxfrtext200 \li50 \ri50 \tx50 \tqr \tx713 TI\par 
\pard \s13 \posx2330 \posy9031 \phpg \pvpg \absh-1741 \absw764 \dxfrtext200 \li50 \ri50 \tx50 \tqr \tx713 TI$\par 
\pard \s13 \posx2330 \posy9031 \phpg \pvpg \absh-1741 \absw764 \dxfrtext200 \li50 \ri50 \tx50 \tqr \tx713 DS\par 
\pard \s13 \posx2330 \posy9031 \phpg \pvpg \absh-1741 \absw764 \dxfrtext200 \li50 \ri50 \tx50 \tqr \tx713 EL\par 
\pard \s13 \posx2330 \posy9031 \phpg \pvpg \absh-1741 \absw764 \dxfrtext200 \li50 \ri50 \tx50 \tqr \tx713 ER\par 
\pard \s13 \posx2330 \posy9031 \phpg \pvpg \absh-1741 \absw764 \dxfrtext200 \li50 \ri50 \tx50 \tqr \tx713 ERR$\par 
}\pard \tx50 \tqr \tx713 \fs24 \f0 {\pard \posx3485 \posy9034 \phpg \pvpg \absh-1746 \absw5071 \dxfrtext200 \fs10 \f0 \fs23 \f0 \pard \s14 \posx3485 \posy9034 \phpg \pvpg \absh-1746 \absw5071 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tqr \tx5020 Status variable: tells success of an I/O operation\par 
\pard \s14 \posx3485 \posy9034 \phpg \pvpg \absh-1746 \absw5071 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tqr \tx5020 Holds the value of the 24\_hour jiffy clock\par 
\pard \s14 \posx3485 \posy9034 \phpg \pvpg \absh-1746 \absw5071 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tqr \tx5020 Sets the jiffy clock with this variable\par 
\pard \s14 \posx3485 \posy9034 \phpg \pvpg \absh-1746 \absw5071 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tqr \tx5020 Reads disk drive command channel, returns status\par 
\pard \s14 \posx3485 \posy9034 \phpg \pvpg \absh-1746 \absw5071 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tqr \tx5020 Line where the last error occurred\par 
\pard \s14 \posx3485 \posy9034 \phpg \pvpg \absh-1746 \absw5071 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tqr \tx5020 Returns last error (number) since the program was run\par 
\pard \s14 \posx3485 \posy9034 \phpg \pvpg \absh-1746 \absw5071 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tqr \tx5020 Contains error message for last error\par 
}\pard \sl-241 \tx50 \tqr \tx5020 \fs24 \f0 {\pard \posx11169 \posy217 \phpg \pvpg \absh-305 \absw3016 \dxfrtext200 \fs10 \f0 \fs23 \f1 \b \pard \s15 \posx11169 \posy217 \phpg \pvpg \absh-305 \absw3016 \dxfrtext200 \li50 \ri50 \sl-247 \tx50 \tqr \tx2965 Programming Commands\par 
}\pard \sl-247 \tx50 \tqr \tx2965 \fs24 \f0 {\pard \posx11175 \posy605 \phpg \pvpg \absh-557 \absw7301 \dxfrtext200 \fs10 \f0 \fs23 \f0 \plain \fs23 \lang1033 \pard \s16 \posx11175 \posy605 \phpg \pvpg \absh-557 \absw7301 \dxfrtext200 \qj \li50 \ri50 \sl-260 \tx50 \tqr \tx7250 As Table 3\_6 shows, both BASICs have commands that let you manipulate the program in memory.\par 
}\pard \sl-260 \tx50 \tqr \tx7250 \fs24 \f0 {\pard \posx11163 \posy1368 \phpg \pvpg \absh-1983 \absw7329 \dxfrtext200 \fs10 \f0 \fs23 \f1 \b \pard \s17 \posx11163 \posy1368 \phpg \pvpg \absh-1983 \absw7329 \dxfrtext200 \li63 \ri6222 \sl-247 \tx63 \tqr \tx1106 Looping\par 
\fs10 \f0 \fs23 \f0 \plain \fs23 \lang1033 \pard \s18 \posx11163 \posy1368 \phpg \pvpg \absh-1983 \absw7329 \dxfrtext200 \qj \li50 \ri50 \sl-259 \tx50 \tqr \tx7278 The statements for controlling program flow and looping are listed in Table 3\_7. The standard FOR...NEXT loop allows looping a fixed number of times. A STEP option allows making the loop index at some value other than one. GOSUB is used for branching to subroutines. A RETURN state\-ment returns control to the line following the GOSUB. ONGOSUB is a more advanced GOSUB that allows indexed subroutine branching.\par 
}\pard \sl-259 \tx50 \tqr \tx7278 \fs24 \f0 {\pard \posx11181 \posy3562 \phpg \pvpg \absh-305 \absw3304 \dxfrtext200 \fs10 \f0 \fs23 \f1 \b \pard \s19 \posx11181 \posy3562 \phpg \pvpg \absh-305 \absw3304 \dxfrtext200 \li50 \ri50 \sl-247 \tx50 \tqr \tx3253 Program Control Statements\par 
}\pard \sl-247 \tx50 \tqr \tx3253 \fs24 \f0 {\pard \posx11177 \posy3954 \phpg \pvpg \absh-552 \absw7315 \dxfrtext200 \fs10 \f0 \fs23 \f0 \plain \fs23 \lang1033 \pard \s20 \posx11177 \posy3954 \phpg \pvpg \absh-552 \absw7315 \dxfrtext200 \qj \li50 \ri50 \sl-255 \tx50 \tqr \tx7264 Several useful program control statements are provided, as shown in Table 3\_8. The WAIT statement is a way to make the program stop and wait for\par 
}\pard \sl-255 \tx50 \tqr \tx7264 \fs24 \f0 {\pard \posx12544 \posy5123 \phpg \pvpg \absh-305 \absw4683 \dxfrtext200 \fs10 \f0 \fs23 \f1 \b \pard \s21 \posx12544 \posy5123 \phpg \pvpg \absh-305 \absw4683 \dxfrtext200 \qc \sl-247 \tx50 \tqr \tx4632 Table 3\_5. BASIC Assignments and Equates\par 
}\pard \sl-247 \tx50 \tqr \tx4632 \fs24 \f0 {\pard \posx12195 \posy5680 \phpg \pvpg \absh-297 \absw4453 \dxfrtext200 \fs10 \f0 \fs23 \f1 \fs23 \f0 \plain \fs23 \lang1033 \pard \s22 \posx12195 \posy5680 \phpg \pvpg \absh-297 \absw4453 \dxfrtext200 \li50 \ri50 \sl-247 \tx50 \tx100 \tx3491 \tqr \tx4402 \tab Statement\tab Purpose\par 
}\pard \sl-247 \tx50 \tx100 \tx3491 \tqr \tx4402 \fs24 \f0 {\pard \posx12433 \posy6161 \phpg \pvpg \absh-1019 \absw668 \dxfrtext200 \fs10 \f0 \fs23 \f0 \pard \s23 \posx12433 \posy6161 \phpg \pvpg \absh-1019 \absw668 \dxfrtext200 \li50 \ri50 \tx50 \tqr \tx617 CLR\par 
\pard \s23 \posx12433 \posy6161 \phpg \pvpg \absh-1019 \absw668 \dxfrtext200 \li50 \ri50 \tx50 \tqr \tx617 DEF\par 
\pard \s23 \posx12433 \posy6161 \phpg \pvpg \absh-1019 \absw668 \dxfrtext200 \li50 \ri50 \tx50 \tqr \tx617 DIM\par 
\pard \s23 \posx12433 \posy6161 \phpg \pvpg \absh-1019 \absw668 \dxfrtext200 \li50 \ri50 \tx50 \tqr \tx617 LET\par 
}\pard \tx50 \tqr \tx617 \fs24 \f0 {\pard \posx14632 \posy6151 \phpg \pvpg \absh-1260 \absw3859 \dxfrtext200 \fs10 \f0 \fs23 \f0 \pard \s24 \posx14632 \posy6151 \phpg \pvpg \absh-1260 \absw3859 \dxfrtext200 \qj \li50 \ri50 \tx50 \tqr \tx3808 Clears out variables and arrays Defines a custom function Dimensions an array Optional assignment statement\par 
}\pard \tx50 \tqr \tx3808 \fs24 \f0 {\pard \posx12558 \posy8256 \phpg \pvpg \absh-305 \absw4697 \dxfrtext200 \fs10 \f0 \fs23 \f1 \b \pard \s25 \posx12558 \posy8256 \phpg \pvpg \absh-305 \absw4697 \dxfrtext200 \li50 \ri50 \sl-247 \tx50 \tqr \tx4646 Table 3\_6. BASIC Programming Commands\par 
}\pard \sl-247 \tx50 \tqr \tx4646 \fs24 \f0 {\pard \posx11851 \posy8809 \phpg \pvpg \absh-297 \absw1155 \dxfrtext200 \fs10 \f0 \fs23 \f0 \plain \fs23 \lang1033 \pard \s26 \posx11851 \posy8809 \phpg \pvpg \absh-297 \absw1155 \dxfrtext200 \li50 \ri50 \sl-247 \tx50 \tqr \tx1104 Statement\par 
}\pard \sl-247 \tx50 \tqr \tx1104 \fs24 \f0 {\pard \posx15340 \posy8797 \phpg \pvpg \absh-297 \absw1005 \dxfrtext200 \fs10 \f0 \fs23 \f0 \pard \s27 \posx15340 \posy8797 \phpg \pvpg \absh-297 \absw1005 \dxfrtext200 \li50 \ri50 \sl-247 \tx50 \tqr \tx954 Purpose\par 
}\pard \sl-247 \tx50 \tqr \tx954 \fs24 \f0 {\pard \posx11981 \posy9290 \phpg \pvpg \absh-1510 \absw773 \dxfrtext200 \fs10 \f0 \fs23 \f0 \pard \s28 \posx11981 \posy9290 \phpg \pvpg \absh-1510 \absw773 \dxfrtext200 \qj \li50 \ri50 \sl-242 \tx50 \tqr \tx722 LIST REM STOP NEW RUN CONT\par 
}\pard \sl-242 \tx50 \tqr \tx722 \fs24 \f0 {\pard \posx13681 \posy9286 \phpg \pvpg \absh-1505 \absw4293 \dxfrtext200 \fs10 \f0 \fs23 \f0 \pard \s29 \posx13681 \posy9286 \phpg \pvpg \absh-1505 \absw4293 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tqr \tx4242 Lists program in memory to screen\par 
\pard \s29 \posx13681 \posy9286 \phpg \pvpg \absh-1505 \absw4293 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tqr \tx4242 Adds a remark or comment to a line\par 
\pard \s29 \posx13681 \posy9286 \phpg \pvpg \absh-1505 \absw4293 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tqr \tx4242 Program will stop and print out line number\par 
\pard \s29 \posx13681 \posy9286 \phpg \pvpg \absh-1505 \absw4293 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tqr \tx4242 Erases current program and all variables\par 
\pard \s29 \posx13681 \posy9286 \phpg \pvpg \absh-1505 \absw4293 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tqr \tx4242 Runs or executes current program or filename\par 
\pard \s29 \posx13681 \posy9286 \phpg \pvpg \absh-1505 \absw4293 \dxfrtext200 \li50 \ri50 \sl-241 \tx50 \tqr \tx4242 Continues a stopped program\par 
}\pard \sl-241 \tx50 \tqr \tx4242 \fs24 \f0 }